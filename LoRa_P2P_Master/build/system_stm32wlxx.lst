ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32wlxx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemInit:
  25              	.LFB844:
  26              		.file 1 "Core/Src/system_stm32wlxx.c"
   1:Core/Src/system_stm32wlxx.c **** /**
   2:Core/Src/system_stm32wlxx.c ****   ******************************************************************************
   3:Core/Src/system_stm32wlxx.c ****   * @file    system_stm32wlxx.c
   4:Core/Src/system_stm32wlxx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32wlxx.c ****   * @brief   CMSIS Cortex Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32wlxx.c ****   *
   7:Core/Src/system_stm32wlxx.c ****   ******************************************************************************
   8:Core/Src/system_stm32wlxx.c ****   * @attention
   9:Core/Src/system_stm32wlxx.c ****   *
  10:Core/Src/system_stm32wlxx.c ****   * Copyright (c) 2020-2021 STMicroelectronics.
  11:Core/Src/system_stm32wlxx.c ****   * All rights reserved.
  12:Core/Src/system_stm32wlxx.c ****   *
  13:Core/Src/system_stm32wlxx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/system_stm32wlxx.c ****   * in the root directory of this software component.
  15:Core/Src/system_stm32wlxx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/system_stm32wlxx.c ****   *
  17:Core/Src/system_stm32wlxx.c ****   ******************************************************************************
  18:Core/Src/system_stm32wlxx.c ****   *   This file provides two functions and one global variable to be called from
  19:Core/Src/system_stm32wlxx.c ****   *   user application:
  20:Core/Src/system_stm32wlxx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  21:Core/Src/system_stm32wlxx.c ****   *                      before branch to main program. This call is made inside
  22:Core/Src/system_stm32wlxx.c ****   *                      the "startup_stm32wlxx.s" file.
  23:Core/Src/system_stm32wlxx.c ****   *
  24:Core/Src/system_stm32wlxx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  25:Core/Src/system_stm32wlxx.c ****   *                                  by the user application to setup the SysTick
  26:Core/Src/system_stm32wlxx.c ****   *                                  timer or configure other parameters.
  27:Core/Src/system_stm32wlxx.c ****   *
  28:Core/Src/system_stm32wlxx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  29:Core/Src/system_stm32wlxx.c ****   *                                 be called whenever the core clock is changed
  30:Core/Src/system_stm32wlxx.c ****   *                                 during program execution.
  31:Core/Src/system_stm32wlxx.c ****   *
  32:Core/Src/system_stm32wlxx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 2


  33:Core/Src/system_stm32wlxx.c ****   *   Then SystemInit() function is called, in "startup_stm32wlxx.s" file, to
  34:Core/Src/system_stm32wlxx.c ****   *   configure the system clock before to branch to main program.
  35:Core/Src/system_stm32wlxx.c ****   *
  36:Core/Src/system_stm32wlxx.c ****   *   This file configures the system clock as follows:
  37:Core/Src/system_stm32wlxx.c ****   *=============================================================================
  38:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  39:Core/Src/system_stm32wlxx.c ****   *        System Clock source                    | MSI
  40:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  41:Core/Src/system_stm32wlxx.c ****   *        SYSCLK(Hz)                             | 4000000
  42:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  43:Core/Src/system_stm32wlxx.c ****   *        HCLK(Hz)                               | 4000000
  44:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  45:Core/Src/system_stm32wlxx.c ****   *        AHB Prescaler                          | 1
  46:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  47:Core/Src/system_stm32wlxx.c ****   *        APB1 Prescaler                         | 1
  48:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  49:Core/Src/system_stm32wlxx.c ****   *        APB2 Prescaler                         | 1
  50:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  51:Core/Src/system_stm32wlxx.c ****   *        PLL_M                                  | 1
  52:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  53:Core/Src/system_stm32wlxx.c ****   *        PLL_N                                  | 8
  54:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  55:Core/Src/system_stm32wlxx.c ****   *        PLL_P                                  | 7
  56:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  57:Core/Src/system_stm32wlxx.c ****   *        PLL_Q                                  | 2
  58:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  59:Core/Src/system_stm32wlxx.c ****   *        PLL_R                                  | 2
  60:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  61:Core/Src/system_stm32wlxx.c ****   *        PLLSAI1_P                              | NA
  62:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  63:Core/Src/system_stm32wlxx.c ****   *        PLLSAI1_Q                              | NA
  64:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  65:Core/Src/system_stm32wlxx.c ****   *        PLLSAI1_R                              | NA
  66:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  67:Core/Src/system_stm32wlxx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  68:Core/Src/system_stm32wlxx.c ****   *        SDIO and RNG clock                     |
  69:Core/Src/system_stm32wlxx.c ****   *-----------------------------------------------------------------------------
  70:Core/Src/system_stm32wlxx.c ****   *=============================================================================
  71:Core/Src/system_stm32wlxx.c ****   */
  72:Core/Src/system_stm32wlxx.c **** 
  73:Core/Src/system_stm32wlxx.c **** /** @addtogroup CMSIS
  74:Core/Src/system_stm32wlxx.c ****   * @{
  75:Core/Src/system_stm32wlxx.c ****   */
  76:Core/Src/system_stm32wlxx.c **** 
  77:Core/Src/system_stm32wlxx.c **** /** @addtogroup stm32WLxx_system
  78:Core/Src/system_stm32wlxx.c ****   * @{
  79:Core/Src/system_stm32wlxx.c ****   */
  80:Core/Src/system_stm32wlxx.c **** 
  81:Core/Src/system_stm32wlxx.c **** /** @addtogroup stm32WLxx_System_Private_Includes
  82:Core/Src/system_stm32wlxx.c ****   * @{
  83:Core/Src/system_stm32wlxx.c ****   */
  84:Core/Src/system_stm32wlxx.c **** 
  85:Core/Src/system_stm32wlxx.c **** #include "stm32wlxx.h"
  86:Core/Src/system_stm32wlxx.c **** 
  87:Core/Src/system_stm32wlxx.c **** #if !defined  (HSE_VALUE)
  88:Core/Src/system_stm32wlxx.c ****   #define HSE_VALUE    (32000000UL) /*!< Value of the External oscillator in Hz */
  89:Core/Src/system_stm32wlxx.c **** #endif /* HSE_VALUE */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 3


  90:Core/Src/system_stm32wlxx.c **** 
  91:Core/Src/system_stm32wlxx.c **** #if !defined  (MSI_VALUE)
  92:Core/Src/system_stm32wlxx.c ****    #define MSI_VALUE    (4000000UL) /*!< Value of the Internal oscillator in Hz*/
  93:Core/Src/system_stm32wlxx.c **** #endif /* MSI_VALUE */
  94:Core/Src/system_stm32wlxx.c **** 
  95:Core/Src/system_stm32wlxx.c **** #if !defined  (HSI_VALUE)
  96:Core/Src/system_stm32wlxx.c ****   #define HSI_VALUE    (16000000UL) /*!< Value of the Internal oscillator in Hz*/
  97:Core/Src/system_stm32wlxx.c **** #endif /* HSI_VALUE */
  98:Core/Src/system_stm32wlxx.c **** 
  99:Core/Src/system_stm32wlxx.c **** #if !defined  (LSI_VALUE)
 100:Core/Src/system_stm32wlxx.c ****  #define LSI_VALUE  (32000UL)       /*!< Value of LSI in Hz*/
 101:Core/Src/system_stm32wlxx.c **** #endif /* LSI_VALUE */
 102:Core/Src/system_stm32wlxx.c **** 
 103:Core/Src/system_stm32wlxx.c **** #if !defined  (LSE_VALUE)
 104:Core/Src/system_stm32wlxx.c ****   #define LSE_VALUE    (32768UL)    /*!< Value of LSE in Hz*/
 105:Core/Src/system_stm32wlxx.c **** #endif /* LSE_VALUE */
 106:Core/Src/system_stm32wlxx.c **** 
 107:Core/Src/system_stm32wlxx.c **** /**
 108:Core/Src/system_stm32wlxx.c ****   * @}
 109:Core/Src/system_stm32wlxx.c ****   */
 110:Core/Src/system_stm32wlxx.c **** 
 111:Core/Src/system_stm32wlxx.c **** /** @addtogroup STM32WLxx_System_Private_TypesDefinitions
 112:Core/Src/system_stm32wlxx.c ****   * @{
 113:Core/Src/system_stm32wlxx.c ****   */
 114:Core/Src/system_stm32wlxx.c **** 
 115:Core/Src/system_stm32wlxx.c **** /**
 116:Core/Src/system_stm32wlxx.c ****   * @}
 117:Core/Src/system_stm32wlxx.c ****   */
 118:Core/Src/system_stm32wlxx.c **** 
 119:Core/Src/system_stm32wlxx.c **** /** @addtogroup STM32WLxx_System_Private_Defines
 120:Core/Src/system_stm32wlxx.c ****   * @{
 121:Core/Src/system_stm32wlxx.c ****   */
 122:Core/Src/system_stm32wlxx.c **** 
 123:Core/Src/system_stm32wlxx.c **** /* Note: Following vector table addresses must be defined in line with linker
 124:Core/Src/system_stm32wlxx.c ****          configuration. */
 125:Core/Src/system_stm32wlxx.c **** /*!< Uncomment the following line if you need to relocate CPU1 CM4 and/or CPU2
 126:Core/Src/system_stm32wlxx.c ****      CM0+ vector table anywhere in Sram or Flash. Else vector table will be kept
 127:Core/Src/system_stm32wlxx.c ****      at address 0x00 which correspond to automatic remap of boot address selected */
 128:Core/Src/system_stm32wlxx.c **** /* #define USER_VECT_TAB_ADDRESS */
 129:Core/Src/system_stm32wlxx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 130:Core/Src/system_stm32wlxx.c **** #ifdef CORE_CM0PLUS
 131:Core/Src/system_stm32wlxx.c ****  /*!< Uncomment this line for user vector table remap in Sram else user remap
 132:Core/Src/system_stm32wlxx.c ****       will be done in Flash. */
 133:Core/Src/system_stm32wlxx.c **** /* #define VECT_TAB_SRAM */
 134:Core/Src/system_stm32wlxx.c **** #if defined(VECT_TAB_SRAM)
 135:Core/Src/system_stm32wlxx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM2_BASE      /*!< Vector Table base address field.
 136:Core/Src/system_stm32wlxx.c ****                                                      This value must be a multiple of 0x100. */
 137:Core/Src/system_stm32wlxx.c **** #define VECT_TAB_OFFSET         0x00008000U     /*!< Vector Table base offset field.
 138:Core/Src/system_stm32wlxx.c ****                                                      This value must be a multiple of 0x100. */
 139:Core/Src/system_stm32wlxx.c **** #else
 140:Core/Src/system_stm32wlxx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 141:Core/Src/system_stm32wlxx.c ****                                                      This value must be a multiple of 0x100. */
 142:Core/Src/system_stm32wlxx.c **** #define VECT_TAB_OFFSET         0x00020000U        /*!< Vector Table base offset field.
 143:Core/Src/system_stm32wlxx.c ****                                                      This value must be a multiple of 0x100. */
 144:Core/Src/system_stm32wlxx.c **** #endif
 145:Core/Src/system_stm32wlxx.c **** #else /* CORE_CM4 */
 146:Core/Src/system_stm32wlxx.c ****  /*!< Uncomment this line for user vector table remap in Sram else user remap
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 4


 147:Core/Src/system_stm32wlxx.c ****       will be done in Flash. */
 148:Core/Src/system_stm32wlxx.c **** /* #define VECT_TAB_SRAM */
 149:Core/Src/system_stm32wlxx.c **** #if defined(VECT_TAB_SRAM)
 150:Core/Src/system_stm32wlxx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 151:Core/Src/system_stm32wlxx.c ****                                                      This value must be a multiple of 0x200. */
 152:Core/Src/system_stm32wlxx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 153:Core/Src/system_stm32wlxx.c ****                                                      This value must be a multiple of 0x200. */
 154:Core/Src/system_stm32wlxx.c **** #else
 155:Core/Src/system_stm32wlxx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 156:Core/Src/system_stm32wlxx.c ****                                                      This value must be a multiple of 0x200. */
 157:Core/Src/system_stm32wlxx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 158:Core/Src/system_stm32wlxx.c ****                                                      This value must be a multiple of 0x200. */
 159:Core/Src/system_stm32wlxx.c **** #endif
 160:Core/Src/system_stm32wlxx.c **** #endif
 161:Core/Src/system_stm32wlxx.c **** #endif
 162:Core/Src/system_stm32wlxx.c **** 
 163:Core/Src/system_stm32wlxx.c **** /**
 164:Core/Src/system_stm32wlxx.c ****   * @}
 165:Core/Src/system_stm32wlxx.c ****   */
 166:Core/Src/system_stm32wlxx.c **** 
 167:Core/Src/system_stm32wlxx.c **** /** @addtogroup STM32WLxx_System_Private_Macros
 168:Core/Src/system_stm32wlxx.c ****   * @{
 169:Core/Src/system_stm32wlxx.c ****   */
 170:Core/Src/system_stm32wlxx.c **** 
 171:Core/Src/system_stm32wlxx.c **** /**
 172:Core/Src/system_stm32wlxx.c ****   * @}
 173:Core/Src/system_stm32wlxx.c ****   */
 174:Core/Src/system_stm32wlxx.c **** 
 175:Core/Src/system_stm32wlxx.c **** /** @addtogroup STM32WLxx_System_Private_Variables
 176:Core/Src/system_stm32wlxx.c ****   * @{
 177:Core/Src/system_stm32wlxx.c ****   */
 178:Core/Src/system_stm32wlxx.c ****   /* The SystemCoreClock variable is updated in three ways:
 179:Core/Src/system_stm32wlxx.c ****       1) from within HAL_Init()
 180:Core/Src/system_stm32wlxx.c ****       2) by calling CMSIS function SystemCoreClockUpdate()
 181:Core/Src/system_stm32wlxx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 182:Core/Src/system_stm32wlxx.c ****   */
 183:Core/Src/system_stm32wlxx.c ****   uint32_t SystemCoreClock  = 4000000UL; /*CPU1: M4 on MSI clock after startup (4MHz)*/
 184:Core/Src/system_stm32wlxx.c **** 
 185:Core/Src/system_stm32wlxx.c ****   const uint32_t AHBPrescTable[16UL] = {1UL, 3UL, 5UL, 1UL, 1UL, 6UL, 10UL, 32UL, 2UL, 4UL, 8UL, 16
 186:Core/Src/system_stm32wlxx.c **** 
 187:Core/Src/system_stm32wlxx.c ****   const uint32_t APBPrescTable[8UL]  = {0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL};
 188:Core/Src/system_stm32wlxx.c **** 
 189:Core/Src/system_stm32wlxx.c ****   const uint32_t MSIRangeTable[16UL] = {100000UL, 200000UL, 400000UL, 800000UL, 1000000UL, 2000000U
 190:Core/Src/system_stm32wlxx.c ****     4000000UL, 8000000UL, 16000000UL, 24000000UL, 32000000UL, 48000000UL, 0UL, 0UL, 0UL, 0UL}; /* 0
 191:Core/Src/system_stm32wlxx.c **** /**
 192:Core/Src/system_stm32wlxx.c ****   * @}
 193:Core/Src/system_stm32wlxx.c ****   */
 194:Core/Src/system_stm32wlxx.c **** 
 195:Core/Src/system_stm32wlxx.c **** /** @addtogroup STM32WLxx_System_Private_FunctionPrototypes
 196:Core/Src/system_stm32wlxx.c ****   * @{
 197:Core/Src/system_stm32wlxx.c ****   */
 198:Core/Src/system_stm32wlxx.c **** /**
 199:Core/Src/system_stm32wlxx.c ****   * @}
 200:Core/Src/system_stm32wlxx.c ****   */
 201:Core/Src/system_stm32wlxx.c **** 
 202:Core/Src/system_stm32wlxx.c **** /** @addtogroup STM32WLxx_System_Private_Functions
 203:Core/Src/system_stm32wlxx.c ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 5


 204:Core/Src/system_stm32wlxx.c ****   */
 205:Core/Src/system_stm32wlxx.c **** 
 206:Core/Src/system_stm32wlxx.c **** /**
 207:Core/Src/system_stm32wlxx.c ****   * @brief  Setup the microcontroller system.
 208:Core/Src/system_stm32wlxx.c ****   * @param  None
 209:Core/Src/system_stm32wlxx.c ****   * @retval None
 210:Core/Src/system_stm32wlxx.c ****   */
 211:Core/Src/system_stm32wlxx.c **** void SystemInit(void)
 212:Core/Src/system_stm32wlxx.c **** {
  27              		.loc 1 212 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 213:Core/Src/system_stm32wlxx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 214:Core/Src/system_stm32wlxx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 215:Core/Src/system_stm32wlxx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 216:Core/Src/system_stm32wlxx.c **** #endif
 217:Core/Src/system_stm32wlxx.c **** 
 218:Core/Src/system_stm32wlxx.c ****   /* FPU settings ------------------------------------------------------------*/
 219:Core/Src/system_stm32wlxx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 220:Core/Src/system_stm32wlxx.c ****   SCB->CPACR |= ((3UL << (10UL*2UL))|(3UL << (11UL*2UL)));  /* set CP10 and CP11 Full Access */
 221:Core/Src/system_stm32wlxx.c **** #endif
 222:Core/Src/system_stm32wlxx.c **** }
  32              		.loc 1 222 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE844:
  37              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  38              		.align	1
  39              		.global	SystemCoreClockUpdate
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	SystemCoreClockUpdate:
  46              	.LFB845:
 223:Core/Src/system_stm32wlxx.c **** 
 224:Core/Src/system_stm32wlxx.c **** /**
 225:Core/Src/system_stm32wlxx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 226:Core/Src/system_stm32wlxx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 227:Core/Src/system_stm32wlxx.c ****   *         be used by the user application to setup the SysTick timer or configure
 228:Core/Src/system_stm32wlxx.c ****   *         other parameters.
 229:Core/Src/system_stm32wlxx.c ****   *
 230:Core/Src/system_stm32wlxx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 231:Core/Src/system_stm32wlxx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 232:Core/Src/system_stm32wlxx.c ****   *         based on this variable will be incorrect.
 233:Core/Src/system_stm32wlxx.c ****   *
 234:Core/Src/system_stm32wlxx.c ****   * @note   - The system frequency computed by this function is not the real
 235:Core/Src/system_stm32wlxx.c ****   *           frequency in the chip. It is calculated based on the predefined
 236:Core/Src/system_stm32wlxx.c ****   *           constant and the selected clock source:
 237:Core/Src/system_stm32wlxx.c ****   *
 238:Core/Src/system_stm32wlxx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 239:Core/Src/system_stm32wlxx.c ****   *
 240:Core/Src/system_stm32wlxx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 241:Core/Src/system_stm32wlxx.c ****   *
 242:Core/Src/system_stm32wlxx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 6


 243:Core/Src/system_stm32wlxx.c ****   *
 244:Core/Src/system_stm32wlxx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 245:Core/Src/system_stm32wlxx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 246:Core/Src/system_stm32wlxx.c ****   *
 247:Core/Src/system_stm32wlxx.c ****   *         (*) MSI_VALUE is a constant defined in stm32wlxx_hal.h file (default value
 248:Core/Src/system_stm32wlxx.c ****   *             4 MHz) but the real value may vary depending on the variations
 249:Core/Src/system_stm32wlxx.c ****   *             in voltage and temperature.
 250:Core/Src/system_stm32wlxx.c ****   *
 251:Core/Src/system_stm32wlxx.c ****   *         (**) HSI_VALUE is a constant defined in stm32wlxx_hal_conf.h file (default value
 252:Core/Src/system_stm32wlxx.c ****   *              16 MHz) but the real value may vary depending on the variations
 253:Core/Src/system_stm32wlxx.c ****   *              in voltage and temperature.
 254:Core/Src/system_stm32wlxx.c ****   *
 255:Core/Src/system_stm32wlxx.c ****   *         (***) HSE_VALUE is a constant defined in stm32wlxx_hal_conf.h file (default value
 256:Core/Src/system_stm32wlxx.c ****   *              32 MHz), user has to ensure that HSE_VALUE is same as the real
 257:Core/Src/system_stm32wlxx.c ****   *              frequency of the crystal used. Otherwise, this function may
 258:Core/Src/system_stm32wlxx.c ****   *              have wrong result.
 259:Core/Src/system_stm32wlxx.c ****   *
 260:Core/Src/system_stm32wlxx.c ****   *         - The result of this function could be not correct when using fractional
 261:Core/Src/system_stm32wlxx.c ****   *           value for HSE crystal.
 262:Core/Src/system_stm32wlxx.c ****   *
 263:Core/Src/system_stm32wlxx.c ****   * @param  None
 264:Core/Src/system_stm32wlxx.c ****   * @retval None
 265:Core/Src/system_stm32wlxx.c ****   */
 266:Core/Src/system_stm32wlxx.c **** void SystemCoreClockUpdate(void)
 267:Core/Src/system_stm32wlxx.c **** {
  47              		.loc 1 267 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 268:Core/Src/system_stm32wlxx.c ****   uint32_t tmp, msirange, pllvco, pllr, pllsource , pllm;
  52              		.loc 1 268 3 view .LVU3
 269:Core/Src/system_stm32wlxx.c **** 
 270:Core/Src/system_stm32wlxx.c ****  /* Get MSI Range frequency--------------------------------------------------*/
 271:Core/Src/system_stm32wlxx.c **** 
 272:Core/Src/system_stm32wlxx.c ****    /* Get MSI Range frequency--------------------------------------------------*/
 273:Core/Src/system_stm32wlxx.c ****    if((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  53              		.loc 1 273 4 view .LVU4
  54              		.loc 1 273 11 is_stmt 0 view .LVU5
  55 0000 4FF0B043 		mov	r3, #1476395008
  56 0004 1B68     		ldr	r3, [r3]
  57              		.loc 1 273 6 view .LVU6
  58 0006 13F0080F 		tst	r3, #8
  59 000a 18D1     		bne	.L3
 274:Core/Src/system_stm32wlxx.c ****    { /* MSISRANGE from RCC_CSR applies */
 275:Core/Src/system_stm32wlxx.c ****      msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  60              		.loc 1 275 6 is_stmt 1 view .LVU7
  61              		.loc 1 275 21 is_stmt 0 view .LVU8
  62 000c 4FF0B043 		mov	r3, #1476395008
  63 0010 D3F89430 		ldr	r3, [r3, #148]
  64              		.loc 1 275 15 view .LVU9
  65 0014 C3F30323 		ubfx	r3, r3, #8, #4
  66              	.LVL0:
  67              	.L4:
 276:Core/Src/system_stm32wlxx.c ****    }
 277:Core/Src/system_stm32wlxx.c ****    else
 278:Core/Src/system_stm32wlxx.c ****    { /* MSIRANGE from RCC_CR applies */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 7


 279:Core/Src/system_stm32wlxx.c ****      msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 280:Core/Src/system_stm32wlxx.c ****    }
 281:Core/Src/system_stm32wlxx.c ****    /*MSI frequency range in HZ*/
 282:Core/Src/system_stm32wlxx.c ****    msirange = MSIRangeTable[msirange];
  68              		.loc 1 282 4 is_stmt 1 view .LVU10
  69              		.loc 1 282 13 is_stmt 0 view .LVU11
  70 0018 2C4A     		ldr	r2, .L17
  71 001a 52F82320 		ldr	r2, [r2, r3, lsl #2]
  72              	.LVL1:
 283:Core/Src/system_stm32wlxx.c **** 
 284:Core/Src/system_stm32wlxx.c **** 
 285:Core/Src/system_stm32wlxx.c ****   /*SystemCoreClock=HAL_RCC_GetSysClockFreq();*/
 286:Core/Src/system_stm32wlxx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 287:Core/Src/system_stm32wlxx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  73              		.loc 1 287 3 is_stmt 1 view .LVU12
  74              		.loc 1 287 14 is_stmt 0 view .LVU13
  75 001e 4FF0B043 		mov	r3, #1476395008
  76 0022 9B68     		ldr	r3, [r3, #8]
  77              		.loc 1 287 21 view .LVU14
  78 0024 03F00C03 		and	r3, r3, #12
  79              		.loc 1 287 3 view .LVU15
  80 0028 0C2B     		cmp	r3, #12
  81 002a 4CD8     		bhi	.L5
  82 002c DFE803F0 		tbb	[pc, r3]
  83              	.L7:
  84 0030 0D       		.byte	(.L10-.L7)/2
  85 0031 4B       		.byte	(.L5-.L7)/2
  86 0032 4B       		.byte	(.L5-.L7)/2
  87 0033 4B       		.byte	(.L5-.L7)/2
  88 0034 10       		.byte	(.L9-.L7)/2
  89 0035 4B       		.byte	(.L5-.L7)/2
  90 0036 4B       		.byte	(.L5-.L7)/2
  91 0037 4B       		.byte	(.L5-.L7)/2
  92 0038 14       		.byte	(.L8-.L7)/2
  93 0039 4B       		.byte	(.L5-.L7)/2
  94 003a 4B       		.byte	(.L5-.L7)/2
  95 003b 4B       		.byte	(.L5-.L7)/2
  96 003c 18       		.byte	(.L6-.L7)/2
  97              	.LVL2:
  98 003d 00       		.p2align 1
  99              	.L3:
 279:Core/Src/system_stm32wlxx.c ****    }
 100              		.loc 1 279 6 is_stmt 1 view .LVU16
 279:Core/Src/system_stm32wlxx.c ****    }
 101              		.loc 1 279 21 is_stmt 0 view .LVU17
 102 003e 4FF0B043 		mov	r3, #1476395008
 103 0042 1B68     		ldr	r3, [r3]
 279:Core/Src/system_stm32wlxx.c ****    }
 104              		.loc 1 279 15 view .LVU18
 105 0044 C3F30313 		ubfx	r3, r3, #4, #4
 106              	.LVL3:
 279:Core/Src/system_stm32wlxx.c ****    }
 107              		.loc 1 279 15 view .LVU19
 108 0048 E6E7     		b	.L4
 109              	.LVL4:
 110              	.L10:
 288:Core/Src/system_stm32wlxx.c ****   {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 8


 289:Core/Src/system_stm32wlxx.c ****     case 0x00:   /* MSI used as system clock source */
 290:Core/Src/system_stm32wlxx.c ****       SystemCoreClock = msirange;
 111              		.loc 1 290 7 is_stmt 1 view .LVU20
 112              		.loc 1 290 23 is_stmt 0 view .LVU21
 113 004a 214B     		ldr	r3, .L17+4
 114 004c 1A60     		str	r2, [r3]
 291:Core/Src/system_stm32wlxx.c ****       break;
 115              		.loc 1 291 7 is_stmt 1 view .LVU22
 116 004e 28E0     		b	.L11
 117              	.L9:
 292:Core/Src/system_stm32wlxx.c **** 
 293:Core/Src/system_stm32wlxx.c ****     case 0x04:  /* HSI used as system clock source */
 294:Core/Src/system_stm32wlxx.c ****       /* HSI used as system clock source */
 295:Core/Src/system_stm32wlxx.c ****         SystemCoreClock = HSI_VALUE;
 118              		.loc 1 295 9 view .LVU23
 119              		.loc 1 295 25 is_stmt 0 view .LVU24
 120 0050 1F4B     		ldr	r3, .L17+4
 121 0052 204A     		ldr	r2, .L17+8
 122              	.LVL5:
 123              		.loc 1 295 25 view .LVU25
 124 0054 1A60     		str	r2, [r3]
 296:Core/Src/system_stm32wlxx.c ****       break;
 125              		.loc 1 296 7 is_stmt 1 view .LVU26
 126 0056 24E0     		b	.L11
 127              	.LVL6:
 128              	.L8:
 297:Core/Src/system_stm32wlxx.c **** 
 298:Core/Src/system_stm32wlxx.c ****     case 0x08:  /* HSE used as system clock source */
 299:Core/Src/system_stm32wlxx.c ****       SystemCoreClock = HSE_VALUE;
 129              		.loc 1 299 7 view .LVU27
 130              		.loc 1 299 23 is_stmt 0 view .LVU28
 131 0058 1D4B     		ldr	r3, .L17+4
 132 005a 1F4A     		ldr	r2, .L17+12
 133              	.LVL7:
 134              		.loc 1 299 23 view .LVU29
 135 005c 1A60     		str	r2, [r3]
 300:Core/Src/system_stm32wlxx.c ****       break;
 136              		.loc 1 300 7 is_stmt 1 view .LVU30
 137 005e 20E0     		b	.L11
 138              	.LVL8:
 139              	.L6:
 301:Core/Src/system_stm32wlxx.c **** 
 302:Core/Src/system_stm32wlxx.c ****     case 0x0C: /* PLL used as system clock  source */
 303:Core/Src/system_stm32wlxx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 304:Core/Src/system_stm32wlxx.c ****          SYSCLK = PLL_VCO / PLLR
 305:Core/Src/system_stm32wlxx.c ****          */
 306:Core/Src/system_stm32wlxx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 140              		.loc 1 306 7 view .LVU31
 141              		.loc 1 306 23 is_stmt 0 view .LVU32
 142 0060 4FF0B043 		mov	r3, #1476395008
 143 0064 D968     		ldr	r1, [r3, #12]
 144              		.loc 1 306 17 view .LVU33
 145 0066 01F00301 		and	r1, r1, #3
 146              	.LVL9:
 307:Core/Src/system_stm32wlxx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL ;
 147              		.loc 1 307 7 is_stmt 1 view .LVU34
 148              		.loc 1 307 19 is_stmt 0 view .LVU35
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 9


 149 006a DB68     		ldr	r3, [r3, #12]
 150              		.loc 1 307 49 view .LVU36
 151 006c C3F30213 		ubfx	r3, r3, #4, #3
 152              		.loc 1 307 12 view .LVU37
 153 0070 0133     		adds	r3, r3, #1
 154              	.LVL10:
 308:Core/Src/system_stm32wlxx.c **** 
 309:Core/Src/system_stm32wlxx.c ****       switch (pllsource)
 155              		.loc 1 309 7 is_stmt 1 view .LVU38
 156 0072 0229     		cmp	r1, #2
 157 0074 04D0     		beq	.L12
 158 0076 0329     		cmp	r1, #3
 159 0078 21D0     		beq	.L13
 310:Core/Src/system_stm32wlxx.c ****       {
 311:Core/Src/system_stm32wlxx.c ****         case 0x02:  /* HSI used as PLL clock source */
 312:Core/Src/system_stm32wlxx.c ****           pllvco = (HSI_VALUE / pllm);
 313:Core/Src/system_stm32wlxx.c ****           break;
 314:Core/Src/system_stm32wlxx.c **** 
 315:Core/Src/system_stm32wlxx.c ****         case 0x03:  /* HSE used as PLL clock source */
 316:Core/Src/system_stm32wlxx.c ****           pllvco = (HSE_VALUE / pllm);
 317:Core/Src/system_stm32wlxx.c ****           break;
 318:Core/Src/system_stm32wlxx.c **** 
 319:Core/Src/system_stm32wlxx.c ****         default:    /* MSI used as PLL clock source */
 320:Core/Src/system_stm32wlxx.c ****           pllvco = (msirange / pllm);
 160              		.loc 1 320 11 view .LVU39
 161              		.loc 1 320 18 is_stmt 0 view .LVU40
 162 007a B2FBF3F2 		udiv	r2, r2, r3
 163              	.LVL11:
 321:Core/Src/system_stm32wlxx.c ****           break;
 164              		.loc 1 321 11 is_stmt 1 view .LVU41
 165 007e 02E0     		b	.L15
 166              	.LVL12:
 167              	.L12:
 312:Core/Src/system_stm32wlxx.c ****           break;
 168              		.loc 1 312 11 view .LVU42
 312:Core/Src/system_stm32wlxx.c ****           break;
 169              		.loc 1 312 18 is_stmt 0 view .LVU43
 170 0080 144A     		ldr	r2, .L17+8
 171              	.LVL13:
 312:Core/Src/system_stm32wlxx.c ****           break;
 172              		.loc 1 312 18 view .LVU44
 173 0082 B2FBF3F2 		udiv	r2, r2, r3
 174              	.LVL14:
 313:Core/Src/system_stm32wlxx.c **** 
 175              		.loc 1 313 11 is_stmt 1 view .LVU45
 176              	.L15:
 322:Core/Src/system_stm32wlxx.c ****       }
 323:Core/Src/system_stm32wlxx.c **** 
 324:Core/Src/system_stm32wlxx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 177              		.loc 1 324 7 view .LVU46
 178              		.loc 1 324 30 is_stmt 0 view .LVU47
 179 0086 4FF0B041 		mov	r1, #1476395008
 180              	.LVL15:
 181              		.loc 1 324 30 view .LVU48
 182 008a CB68     		ldr	r3, [r1, #12]
 183              	.LVL16:
 184              		.loc 1 324 60 view .LVU49
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 10


 185 008c C3F30623 		ubfx	r3, r3, #8, #7
 186              		.loc 1 324 14 view .LVU50
 187 0090 02FB03F3 		mul	r3, r2, r3
 188              	.LVL17:
 325:Core/Src/system_stm32wlxx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 189              		.loc 1 325 7 is_stmt 1 view .LVU51
 190              		.loc 1 325 20 is_stmt 0 view .LVU52
 191 0094 CA68     		ldr	r2, [r1, #12]
 192              		.loc 1 325 50 view .LVU53
 193 0096 520F     		lsrs	r2, r2, #29
 194              		.loc 1 325 12 view .LVU54
 195 0098 0132     		adds	r2, r2, #1
 196              	.LVL18:
 326:Core/Src/system_stm32wlxx.c **** 
 327:Core/Src/system_stm32wlxx.c ****       SystemCoreClock = pllvco/pllr;
 197              		.loc 1 327 7 is_stmt 1 view .LVU55
 198              		.loc 1 327 31 is_stmt 0 view .LVU56
 199 009a B3FBF2F3 		udiv	r3, r3, r2
 200              	.LVL19:
 201              		.loc 1 327 23 view .LVU57
 202 009e 0C4A     		ldr	r2, .L17+4
 203              	.LVL20:
 204              		.loc 1 327 23 view .LVU58
 205 00a0 1360     		str	r3, [r2]
 328:Core/Src/system_stm32wlxx.c ****       break;
 206              		.loc 1 328 7 is_stmt 1 view .LVU59
 207              	.L11:
 329:Core/Src/system_stm32wlxx.c **** 
 330:Core/Src/system_stm32wlxx.c ****     default:
 331:Core/Src/system_stm32wlxx.c ****       SystemCoreClock = msirange;
 332:Core/Src/system_stm32wlxx.c ****       break;
 333:Core/Src/system_stm32wlxx.c ****   }
 334:Core/Src/system_stm32wlxx.c **** 
 335:Core/Src/system_stm32wlxx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 336:Core/Src/system_stm32wlxx.c **** #if defined(DUAL_CORE) &&  defined(CORE_CM0PLUS)
 337:Core/Src/system_stm32wlxx.c ****   /* Get HCLK2 prescaler */
 338:Core/Src/system_stm32wlxx.c ****   tmp = AHBPrescTable[((RCC->EXTCFGR & RCC_EXTCFGR_C2HPRE) >> RCC_EXTCFGR_C2HPRE_Pos)];
 339:Core/Src/system_stm32wlxx.c **** #else
 340:Core/Src/system_stm32wlxx.c ****   /* Get HCLK1 prescaler */
 341:Core/Src/system_stm32wlxx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 208              		.loc 1 341 3 view .LVU60
 209              		.loc 1 341 28 is_stmt 0 view .LVU61
 210 00a2 4FF0B043 		mov	r3, #1476395008
 211 00a6 9B68     		ldr	r3, [r3, #8]
 212              		.loc 1 341 52 view .LVU62
 213 00a8 C3F30313 		ubfx	r3, r3, #4, #4
 214              		.loc 1 341 7 view .LVU63
 215 00ac 0B4A     		ldr	r2, .L17+16
 216 00ae 52F82310 		ldr	r1, [r2, r3, lsl #2]
 217              	.LVL21:
 342:Core/Src/system_stm32wlxx.c **** #endif
 343:Core/Src/system_stm32wlxx.c **** 
 344:Core/Src/system_stm32wlxx.c ****   /* Core clock frequency */
 345:Core/Src/system_stm32wlxx.c ****   SystemCoreClock = SystemCoreClock / tmp;
 218              		.loc 1 345 3 is_stmt 1 view .LVU64
 219              		.loc 1 345 37 is_stmt 0 view .LVU65
 220 00b2 074A     		ldr	r2, .L17+4
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 11


 221 00b4 1368     		ldr	r3, [r2]
 222 00b6 B3FBF1F3 		udiv	r3, r3, r1
 223              		.loc 1 345 19 view .LVU66
 224 00ba 1360     		str	r3, [r2]
 346:Core/Src/system_stm32wlxx.c **** }
 225              		.loc 1 346 1 view .LVU67
 226 00bc 7047     		bx	lr
 227              	.LVL22:
 228              	.L13:
 316:Core/Src/system_stm32wlxx.c ****           break;
 229              		.loc 1 316 11 is_stmt 1 view .LVU68
 316:Core/Src/system_stm32wlxx.c ****           break;
 230              		.loc 1 316 18 is_stmt 0 view .LVU69
 231 00be 064A     		ldr	r2, .L17+12
 232              	.LVL23:
 316:Core/Src/system_stm32wlxx.c ****           break;
 233              		.loc 1 316 18 view .LVU70
 234 00c0 B2FBF3F2 		udiv	r2, r2, r3
 235              	.LVL24:
 317:Core/Src/system_stm32wlxx.c **** 
 236              		.loc 1 317 11 is_stmt 1 view .LVU71
 237 00c4 DFE7     		b	.L15
 238              	.LVL25:
 239              	.L5:
 331:Core/Src/system_stm32wlxx.c ****       break;
 240              		.loc 1 331 7 view .LVU72
 331:Core/Src/system_stm32wlxx.c ****       break;
 241              		.loc 1 331 23 is_stmt 0 view .LVU73
 242 00c6 024B     		ldr	r3, .L17+4
 243 00c8 1A60     		str	r2, [r3]
 332:Core/Src/system_stm32wlxx.c ****   }
 244              		.loc 1 332 7 is_stmt 1 view .LVU74
 245 00ca EAE7     		b	.L11
 246              	.L18:
 247              		.align	2
 248              	.L17:
 249 00cc 00000000 		.word	.LANCHOR0
 250 00d0 00000000 		.word	.LANCHOR1
 251 00d4 0024F400 		.word	16000000
 252 00d8 0048E801 		.word	32000000
 253 00dc 00000000 		.word	.LANCHOR2
 254              		.cfi_endproc
 255              	.LFE845:
 257              		.global	MSIRangeTable
 258              		.global	APBPrescTable
 259              		.global	AHBPrescTable
 260              		.global	SystemCoreClock
 261              		.section	.data.SystemCoreClock,"aw"
 262              		.align	2
 263              		.set	.LANCHOR1,. + 0
 266              	SystemCoreClock:
 267 0000 00093D00 		.word	4000000
 268              		.section	.rodata.AHBPrescTable,"a"
 269              		.align	2
 270              		.set	.LANCHOR2,. + 0
 273              	AHBPrescTable:
 274 0000 01000000 		.word	1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 12


 275 0004 03000000 		.word	3
 276 0008 05000000 		.word	5
 277 000c 01000000 		.word	1
 278 0010 01000000 		.word	1
 279 0014 06000000 		.word	6
 280 0018 0A000000 		.word	10
 281 001c 20000000 		.word	32
 282 0020 02000000 		.word	2
 283 0024 04000000 		.word	4
 284 0028 08000000 		.word	8
 285 002c 10000000 		.word	16
 286 0030 40000000 		.word	64
 287 0034 80000000 		.word	128
 288 0038 00010000 		.word	256
 289 003c 00020000 		.word	512
 290              		.section	.rodata.APBPrescTable,"a"
 291              		.align	2
 294              	APBPrescTable:
 295 0000 00000000 		.word	0
 296 0004 00000000 		.word	0
 297 0008 00000000 		.word	0
 298 000c 00000000 		.word	0
 299 0010 01000000 		.word	1
 300 0014 02000000 		.word	2
 301 0018 03000000 		.word	3
 302 001c 04000000 		.word	4
 303              		.section	.rodata.MSIRangeTable,"a"
 304              		.align	2
 305              		.set	.LANCHOR0,. + 0
 308              	MSIRangeTable:
 309 0000 A0860100 		.word	100000
 310 0004 400D0300 		.word	200000
 311 0008 801A0600 		.word	400000
 312 000c 00350C00 		.word	800000
 313 0010 40420F00 		.word	1000000
 314 0014 80841E00 		.word	2000000
 315 0018 00093D00 		.word	4000000
 316 001c 00127A00 		.word	8000000
 317 0020 0024F400 		.word	16000000
 318 0024 00366E01 		.word	24000000
 319 0028 0048E801 		.word	32000000
 320 002c 006CDC02 		.word	48000000
 321 0030 00000000 		.word	0
 322 0034 00000000 		.word	0
 323 0038 00000000 		.word	0
 324 003c 00000000 		.word	0
 325              		.text
 326              	.Letext0:
 327              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 328              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 329              		.file 4 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/system_stm32wlxx.h"
 330              		.file 5 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 331              		.file 6 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32wlxx.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:16     .text.SystemInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:24     .text.SystemInit:0000000000000000 SystemInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:38     .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:45     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:84     .text.SystemCoreClockUpdate:0000000000000030 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:249    .text.SystemCoreClockUpdate:00000000000000cc $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:308    .rodata.MSIRangeTable:0000000000000000 MSIRangeTable
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:294    .rodata.APBPrescTable:0000000000000000 APBPrescTable
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:273    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:266    .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:262    .data.SystemCoreClock:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:269    .rodata.AHBPrescTable:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:291    .rodata.APBPrescTable:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:304    .rodata.MSIRangeTable:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:98     .text.SystemCoreClockUpdate:000000000000003d $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccXu04JU.s:98     .text.SystemCoreClockUpdate:000000000000003e $t

NO UNDEFINED SYMBOLS
