ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32wlxx_ll_adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LL_ADC_CommonDeInit,"ax",%progbits
  16              		.align	1
  17              		.global	LL_ADC_CommonDeInit
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	LL_ADC_CommonDeInit:
  25              	.LVL0:
  26              	.LFB972:
  27              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c"
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @file    stm32wlxx_ll_adc.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief   ADC LL module driver
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #if defined(USE_FULL_LL_DRIVER)
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #include "stm32wlxx_ll_adc.h"
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #include "stm32wlxx_ll_bus.h"
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #ifdef  USE_FULL_ASSERT
  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #include "stm32_assert.h"
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #else
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define assert_param(expr) ((void)0U)
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #endif /* USE_FULL_ASSERT */
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /** @addtogroup STM32WLxx_LL_Driver
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 2


  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #if defined (ADC)
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /** @addtogroup ADC_LL ADC
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @{
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /** @addtogroup ADC_LL_Private_Constants
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @{
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Definitions of ADC hardware constraints delays */
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       not timeout values:                                                  */
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       Timeout values for ADC operations are dependent to device clock      */
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       configuration (system clock versus ADC clock),                       */
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       and therefore must be defined in user application.                   */
  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       Refer to @ref ADC_LL_EC_HW_DELAYS for description of ADC timeout     */
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       values definition.                                                   */
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Note: ADC timeout values are defined here in CPU cycles to be independent  */
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       of device clock setting.                                             */
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       In user application, ADC timeout values should be defined with       */
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       temporal values, in function of device clock settings.               */
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       Highest ratio CPU clock frequency vs ADC clock frequency:            */
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*        - ADC clock from synchronous clock with AHB prescaler 512,          */
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*          APB prescaler 16, ADC prescaler 4.                                */
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*        - ADC clock from asynchronous clock (HSI) with prescaler 1,         */
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*          with highest ratio CPU clock frequency vs HSI clock frequency:    */
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*          CPU clock frequency max 48MHz, HSI frequency 16MHz: ratio 4.      */
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Unit: CPU cycles.                                                          */
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define ADC_CLOCK_RATIO_VS_CPU_HIGHEST          (512UL * 16UL * 4UL)
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define ADC_TIMEOUT_DISABLE_CPU_CYCLES          (ADC_CLOCK_RATIO_VS_CPU_HIGHEST * 1UL)
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define ADC_TIMEOUT_STOP_CONVERSION_CPU_CYCLES  (ADC_CLOCK_RATIO_VS_CPU_HIGHEST * 1UL)
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Note: CCRDY handshake requires 1APB + 2 ADC + 3 APB cycles                 */
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       after the channel configuration has been changed.                    */
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /*       Driver timeout is approximated to 6 CPU cycles.                      */
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define ADC_TIMEOUT_CCRDY_CPU_CYCLES            (ADC_CLOCK_RATIO_VS_CPU_HIGHEST * 6UL)
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @}
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Private macros ------------------------------------------------------------*/
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /** @addtogroup ADC_LL_Private_Macros
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @{
  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Check of parameters for configuration of ADC hierarchical scope:           */
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* common to several ADC instances.                                           */
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_COMMON_CLOCK(__CLOCK__)                                      \
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV1)                                    \
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV2)                                 \
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 3


  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV4)                                 \
  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV6)                                 \
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV8)                                 \
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV10)                                \
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV12)                                \
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV16)                                \
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV32)                                \
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV64)                                \
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV128)                               \
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC_DIV256)                               \
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_CLOCK_FREQ_MODE(__CLOCK_FREQ_MODE__)                         \
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__CLOCK_FREQ_MODE__) == LL_ADC_CLOCK_FREQ_MODE_HIGH)                      \
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK_FREQ_MODE__) == LL_ADC_CLOCK_FREQ_MODE_LOW)                    \
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Check of parameters for configuration of ADC hierarchical scope:           */
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* ADC instance.                                                              */
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_CLOCK(__CLOCK__)                                             \
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__CLOCK__) == LL_ADC_CLOCK_SYNC_PCLK_DIV4)                                \
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_SYNC_PCLK_DIV2)                             \
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_SYNC_PCLK_DIV1)                             \
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__CLOCK__) == LL_ADC_CLOCK_ASYNC)                                      \
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_RESOLUTION(__RESOLUTION__)                                   \
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__RESOLUTION__) == LL_ADC_RESOLUTION_12B)                                 \
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__RESOLUTION__) == LL_ADC_RESOLUTION_10B)                              \
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__RESOLUTION__) == LL_ADC_RESOLUTION_8B)                               \
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__RESOLUTION__) == LL_ADC_RESOLUTION_6B)                               \
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_DATA_ALIGN(__DATA_ALIGN__)                                   \
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__DATA_ALIGN__) == LL_ADC_DATA_ALIGN_RIGHT)                               \
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__DATA_ALIGN__) == LL_ADC_DATA_ALIGN_LEFT)                             \
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_LOW_POWER(__LOW_POWER__)                                     \
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__LOW_POWER__) == LL_ADC_LP_MODE_NONE)                                    \
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__LOW_POWER__) == LL_ADC_LP_AUTOWAIT)                                  \
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__LOW_POWER__) == LL_ADC_LP_AUTOPOWEROFF)                              \
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__LOW_POWER__) == LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF)                     \
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Check of parameters for configuration of ADC hierarchical scope:           */
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* ADC group regular                                                          */
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_REG_TRIG_SOURCE(__REG_TRIG_SOURCE__)                         \
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_SOFTWARE)                         \
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM1_TRGO2)                \
 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM1_CH4 )                 \
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM2_TRGO)                 \
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM2_CH4)                  \
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_TIM2_CH3)                  \
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_TRIG_SOURCE__) == LL_ADC_REG_TRIG_EXT_EXTI_LINE11)               \
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 4


 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_REG_CONTINUOUS_MODE(__REG_CONTINUOUS_MODE__)                 \
 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__REG_CONTINUOUS_MODE__) == LL_ADC_REG_CONV_SINGLE)                       \
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_CONTINUOUS_MODE__) == LL_ADC_REG_CONV_CONTINUOUS)                \
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_REG_DMA_TRANSFER(__REG_DMA_TRANSFER__)                       \
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__REG_DMA_TRANSFER__) == LL_ADC_REG_DMA_TRANSFER_NONE)                    \
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_DMA_TRANSFER__) == LL_ADC_REG_DMA_TRANSFER_LIMITED)              \
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_DMA_TRANSFER__) == LL_ADC_REG_DMA_TRANSFER_UNLIMITED)            \
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_REG_OVR_DATA_BEHAVIOR(__REG_OVR_DATA_BEHAVIOR__)             \
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__REG_OVR_DATA_BEHAVIOR__) == LL_ADC_REG_OVR_DATA_PRESERVED)              \
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_OVR_DATA_BEHAVIOR__) == LL_ADC_REG_OVR_DATA_OVERWRITTEN)         \
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_REG_SEQ_MODE(__REG_SEQ_MODE__)                               \
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__REG_SEQ_MODE__) == LL_ADC_REG_SEQ_FIXED)                                \
 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_MODE__) == LL_ADC_REG_SEQ_CONFIGURABLE)                      \
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_REG_SEQ_SCAN_LENGTH(__REG_SEQ_SCAN_LENGTH__)                 \
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__REG_SEQ_SCAN_LENGTH__) == LL_ADC_REG_SEQ_SCAN_DISABLE)                  \
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_SCAN_LENGTH__) == LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS)         \
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_SCAN_LENGTH__) == LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS)         \
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_SCAN_LENGTH__) == LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS)         \
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_SCAN_LENGTH__) == LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS)         \
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_SCAN_LENGTH__) == LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS)         \
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_SCAN_LENGTH__) == LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS)         \
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_SCAN_LENGTH__) == LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS)         \
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** #define IS_LL_ADC_REG_SEQ_SCAN_DISCONT_MODE(__REG_SEQ_DISCONT_MODE__)          \
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   (((__REG_SEQ_DISCONT_MODE__) == LL_ADC_REG_SEQ_DISCONT_DISABLE)              \
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****    || ((__REG_SEQ_DISCONT_MODE__) == LL_ADC_REG_SEQ_DISCONT_1RANK)             \
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   )
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @}
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Private function prototypes -----------------------------------------------*/
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /* Exported functions --------------------------------------------------------*/
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /** @addtogroup ADC_LL_Exported_Functions
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @{
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /** @addtogroup ADC_LL_EF_Init
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @{
 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief  De-initialize registers of all ADC instances belonging to
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         the same ADC common instance to their default reset values.
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   This function is performing a hard reset, using high level
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 5


 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         clock source RCC ADC reset.
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  ADCxy_COMMON ADC common instance
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - SUCCESS: ADC common registers are de-initialized
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - ERROR: not applicable
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** ErrorStatus LL_ADC_CommonDeInit(ADC_Common_TypeDef *ADCxy_COMMON)
 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** {
  28              		.loc 1 211 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Check the parameters */
 213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_ADC_COMMON_INSTANCE(ADCxy_COMMON));
  33              		.loc 1 213 3 view .LVU1
 214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Force reset of ADC clock (core clock) */
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   LL_APB2_GRP1_ForceReset(LL_APB2_GRP1_PERIPH_ADC);
  34              		.loc 1 216 3 view .LVU2
  35              	.LBB44:
  36              	.LBI44:
  37              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @file    stm32wlxx_ll_bus.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @verbatim
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****                       ##### RCC Limitations #####
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ==============================================================================
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       from/to registers.w<
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       Workarounds:
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @endverbatim
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 6


  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifndef __STM32WLxx_LL_BUS_H
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define __STM32WLxx_LL_BUS_H
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifdef __cplusplus
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** extern "C" {
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #include "stm32wlxx.h"
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @addtogroup STM32WLxx_LL_Driver
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(RCC)
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL BUS
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOH          RCC_AHB2ENR_GPIOHEN
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 7


  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_PKA            RCC_AHB3ENR_PKAEN
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_AES            RCC_AHB3ENR_AESEN
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_RNG            RCC_AHB3ENR_RNGEN
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_HSEM           RCC_AHB3ENR_HSEMEN
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_IPCC           RCC_AHB3ENR_IPCCEN
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM1          RCC_AHB3SMENR_SRAM1SMEN
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM2          RCC_AHB3SMENR_SRAM2SMEN
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FLASH          RCC_AHB3ENR_FLASHEN
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC            RCC_APB1ENR1_DACEN
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (0xFFFFFFFFU)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM2         RCC_APB1ENR2_LPTIM2EN
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM3         RCC_APB1ENR2_LPTIM3EN
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC            RCC_APB2ENR_ADCEN
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 8


 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB3_GRP1_PERIPH  APB3 GRP1 PERIPH
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_SUBGHZSPI      RCC_APB3ENR_SUBGHZSPIEN
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB1_GRP1_PERIPH  C2 AHB1 GRP1 PERIPH
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA1         RCC_C2AHB1ENR_DMA1EN
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA2         RCC_C2AHB1ENR_DMA2EN
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMAMUX1      RCC_C2AHB1ENR_DMAMUX1EN
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_CRC          RCC_C2AHB1ENR_CRCEN
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB2_GRP1_PERIPH  C2 AHB2 GRP1 PERIPH
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOA        RCC_C2AHB2ENR_GPIOAEN
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOB        RCC_C2AHB2ENR_GPIOBEN
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOC        RCC_C2AHB2ENR_GPIOCEN
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOH        RCC_C2AHB2ENR_GPIOHEN
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB3_GRP1_PERIPH  C2 AHB3 GRP1 PERIPH
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_PKA          RCC_C2AHB3ENR_PKAEN
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_AES          RCC_C2AHB3ENR_AESEN
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_RNG          RCC_C2AHB3ENR_RNGEN
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_HSEM         RCC_C2AHB3ENR_HSEMEN
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_IPCC         RCC_C2AHB3ENR_IPCCEN
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_FLASH        RCC_C2AHB3ENR_FLASHEN
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM1        RCC_C2AHB3SMENR_SRAM1SMEN
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM2        RCC_C2AHB3SMENR_SRAM2SMEN
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 9


 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP1_PERIPH  C2 APB1 GRP1 PERIPH
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_TIM2         RCC_C2APB1ENR1_TIM2EN
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_RTCAPB       RCC_C2APB1ENR1_RTCAPBEN
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_SPI2         RCC_C2APB1ENR1_SPI2EN
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_USART2       RCC_C2APB1ENR1_USART2EN
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C1         RCC_C2APB1ENR1_I2C1EN
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C2         RCC_C2APB1ENR1_I2C2EN
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C3         RCC_C2APB1ENR1_I2C3EN
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_DAC          RCC_C2APB1ENR1_DACEN
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_LPTIM1       RCC_C2APB1ENR1_LPTIM1EN
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP2_PERIPH  C2 APB1 GRP2 PERIPH
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPUART1      RCC_C2APB1ENR2_LPUART1EN
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM2       RCC_C2APB1ENR2_LPTIM2EN
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM3       RCC_C2APB1ENR2_LPTIM3EN
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB2_GRP1_PERIPH  C2 APB2 GRP1 PERIPH
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_ADC          RCC_C2APB2ENR_ADCEN
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM1         RCC_C2APB2ENR_TIM1EN
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_SPI1         RCC_C2APB2ENR_SPI1EN
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_USART1       RCC_C2APB2ENR_USART1EN
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM16        RCC_C2APB2ENR_TIM16EN
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM17        RCC_C2APB2ENR_TIM17EN
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB3_GRP1_PERIPH  C2 APB3 GRP1 PERIPH
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB3_GRP1_PERIPH_SUBGHZSPI    RCC_C2APB3ENR_SUBGHZSPIEN
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 10


 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_EnableClock\n
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock\n
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_IsEnabledClock\n
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_DisableClock\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 11


 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock\n
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST    LL_AHB1_GRP1_ForceReset\n
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ReleaseReset\n
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_EnableClockSleep\n
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 12


 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1SMENR, Periphs);
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1SMENR, Periphs);
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_IsEnabledClockSleep\n
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_IsEnabledClockSleep
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_DisableClockSleep\n
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1SMENR, Periphs);
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 13


 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_EnableClock\n
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_EnableClock\n
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_EnableClock\n
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_EnableClock\n
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled or not
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_IsEnabledClock\n
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_IsEnabledClock\n
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_IsEnabledClock\n
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_IsEnabledClock\n
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClock(uint32_t Periphs)
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock.
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_DisableClock\n
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_DisableClock\n
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_DisableClock\n
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_DisableClock\n
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 14


 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2ENR, Periphs);
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB2 peripherals reset.
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ForceReset\n
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ForceReset\n
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ForceReset\n
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ForceReset
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ForceReset(uint32_t Periphs)
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2RSTR, Periphs);
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB2 peripherals reset.
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ReleaseReset\n
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ReleaseReset\n
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ReleaseReset\n
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ReleaseReset\n
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ReleaseReset(uint32_t Periphs)
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2RSTR, Periphs);
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock during Low Power (Sleep) mode.
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_EnableClockSleep\n
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClockSleep(uint32_t Periphs)
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 15


 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2SMENR, Periphs);
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2SMENR, Periphs);
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_IsEnabledClockSleep
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock during Low Power (Sleep) mode.
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_DisableClockSleep\n
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClockSleep(uint32_t Periphs)
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2SMENR, Periphs);
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB3 AHB3
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_EnableClock\n
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_EnableClock\n
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_EnableClock\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 16


 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_EnableClock\n
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_EnableClock\n
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_EnableClock
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_EnableClock\n
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_EnableClock\n
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_EnableClock\n
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_EnableClock\n
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_EnableClock
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClock(uint32_t Periphs)
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3ENR, Periphs);
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_IsEnabledClock\n
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_IsEnabledClock\n
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_IsEnabledClock\n
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_IsEnabledClock\n
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_IsEnabledClock\n
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_IsEnabledClock
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 17


 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_IsEnabledClock\n
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_IsEnabledClock\n
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_IsEnabledClock\n
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_IsEnabledClock\n
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_IsEnabledClock
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClock(uint32_t Periphs)
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_DisableClock\n
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_DisableClock\n
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_DisableClock\n
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_DisableClock\n
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_DisableClock\n
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_DisableClock
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_DisableClock\n
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_DisableClock\n
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_DisableClock\n
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_DisableClock\n
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_DisableClock
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 18


 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClock(uint32_t Periphs)
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3ENR, Periphs);
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ForceReset\n
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ForceReset\n
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ForceReset\n
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ForceReset\n
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     IPCCRST       LL_AHB3_GRP1_ForceReset\n
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ForceReset
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ForceReset\n
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ForceReset\n
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ForceReset\n
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ForceReset\n
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ForceReset
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ForceReset(uint32_t Periphs)
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3RSTR, Periphs);
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ReleaseReset\n
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ReleaseReset\n
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ReleaseReset\n
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ReleaseReset\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 19


 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     IPCCRST       LL_AHB3_GRP1_ReleaseReset\n
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ReleaseReset
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ReleaseReset\n
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ReleaseReset\n
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ReleaseReset\n
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ReleaseReset\n
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ReleaseReset
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ReleaseReset(uint32_t Periphs)
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3RSTR, Periphs);
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock during Low Power (Sleep) mode.
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_EnableClockSleep\n
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_EnableClockSleep\n
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_EnableClockSleep\n
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_EnableClockSleep\n
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_EnableClockSleep\n
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_EnableClockSleep
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClockSleep(uint32_t Periphs)
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3SMENR, Periphs);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 20


 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3SMENR, Periphs);
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB3_GRP1_IsEnabledClockSleep\n
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_IsEnabledClockSleep\n
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_IsEnabledClockSleep
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock during Low Power (Sleep) mode.
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_DisableClockSleep\n
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_DisableClockSleep\n
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_DisableClockSleep\n
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM1SMEN     LL_AHB3_GRP1_DisableClockSleep\n
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_DisableClockSleep\n
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_DisableClockSleep
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClockSleep(uint32_t Periphs)
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3SMENR, Periphs);
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 21


 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_EnableClock\n
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_EnableClock\n
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_EnableClock\n
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_EnableClock\n
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_EnableClock\n
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_EnableClock\n
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_EnableClock\n
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_EnableClock\n
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     DACEN         LL_APB1_GRP1_EnableClock\n
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_EnableClock
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1ENR1, Periphs);
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_EnableClock\n
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_EnableClock
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM3EN      LL_APB1_GRP2_EnableClock
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1ENR2, Periphs);
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR2, Periphs);
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 22


 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_IsEnabledClock\n
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR1, Periphs) == (Periphs)) ? 1UL : 0UL);
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_IsEnabledClock\n
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_IsEnabledClock
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM3EN      LL_APB1_GRP2_IsEnabledClock
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP2_IsEnabledClock(uint32_t Periphs)
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR2, Periphs) == (Periphs)) ? 1UL : 0UL);
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_DisableClock\n
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_DisableClock\n
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_DisableClock\n
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_DisableClock\n
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_DisableClock\n
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_DisableClock\n
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_DisableClock\n
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     DACEN         LL_APB1_GRP1_DisableClock\n
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_DisableClock
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 23


1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR1, Periphs);
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_DisableClock\n
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_DisableClock
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM3EN      LL_APB1_GRP2_DisableClock
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClock(uint32_t Periphs)
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR2, Periphs);
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1RSTR1    TIM2RST       LL_APB1_GRP1_ForceReset\n
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    SPI2RST       LL_APB1_GRP1_ForceReset\n
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    USART2RST     LL_APB1_GRP1_ForceReset\n
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C1RST       LL_APB1_GRP1_ForceReset\n
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C2RST       LL_APB1_GRP1_ForceReset\n
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C3RST       LL_APB1_GRP1_ForceReset\n
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    DACRST        LL_APB1_GRP1_ForceReset\n
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    LPTIM1RST     LL_APB1_GRP1_ForceReset
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 24


1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR1, Periphs);
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1RSTR2    LPUART1RST    LL_APB1_GRP2_ForceReset\n
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR2    LPTIM2RST     LL_APB1_GRP2_ForceReset
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR2    LPTIM3RST     LL_APB1_GRP2_ForceReset
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ForceReset(uint32_t Periphs)
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR2, Periphs);
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1RSTR1    TIM2RST       LL_APB1_GRP1_ReleaseReset\n
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    SPI2RST       LL_APB1_GRP1_ReleaseReset\n
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    DACRST        LL_APB1_GRP1_ReleaseReset\n
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C1RST       LL_APB1_GRP1_ReleaseReset\n
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C2RST       LL_APB1_GRP1_ReleaseReset\n
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C3RST       LL_APB1_GRP1_ReleaseReset\n
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    DACRST        LL_APB1_GRP1_ReleaseReset\n
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    LPTIM1RST     LL_APB1_GRP1_ReleaseReset
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR1, Periphs);
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1RSTR2    LPUART1RST    LL_APB1_GRP2_ReleaseReset\n
1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR2    LPTIM2RST     LL_APB1_GRP2_ReleaseReset
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR2    LPTIM3RST     LL_APB1_GRP2_ReleaseReset
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 25


1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ReleaseReset(uint32_t Periphs)
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR2, Periphs);
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1SMENR1   TIM2SMEN      LL_APB1_GRP1_EnableClockSleep\n
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   RTCAPBSMEN    LL_APB1_GRP1_EnableClockSleep\n
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   WWDGSMEN      LL_APB1_GRP1_EnableClockSleep\n
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   SPI2SMEN      LL_APB1_GRP1_EnableClockSleep\n
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   USART2SMEN    LL_APB1_GRP1_EnableClockSleep\n
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C1SMEN      LL_APB1_GRP1_EnableClockSleep\n
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C2SMEN      LL_APB1_GRP1_EnableClockSleep\n
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C3SMEN      LL_APB1_GRP1_EnableClockSleep\n
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   DACSMEN       LL_APB1_GRP1_EnableClockSleep\n
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   LPTIM1SMEN    LL_APB1_GRP1_EnableClockSleep
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR1, Periphs);
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR1, Periphs);
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1SMENR2   LPUART1SMEN   LL_APB1_GRP2_EnableClockSleep\n
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR2   LPTIM2SMEN    LL_APB1_GRP2_EnableClockSleep
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR2   LPTIM3SMEN    LL_APB1_GRP2_EnableClockSleep
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 26


1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClockSleep(uint32_t Periphs)
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR2, Periphs);
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR2, Periphs);
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if APB1 clock is enabled by the clock gating during CPU1 CSleep mode
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1SMENR1   TIM2SMEN      LL_APB1_GRP1_IsEnabledClockSleep\n
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   RTCAPBSMEN    LL_APB1_GRP1_IsEnabledClockSleep\n
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   WWDGSMEN      LL_APB1_GRP1_IsEnabledClockSleep\n
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   SPI2SMEN      LL_APB1_GRP1_IsEnabledClockSleep\n
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   USART2SMEN    LL_APB1_GRP1_IsEnabledClockSleep\n
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C1SMEN      LL_APB1_GRP1_IsEnabledClockSleep\n
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C2SMEN      LL_APB1_GRP1_IsEnabledClockSleep\n
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C3SMEN      LL_APB1_GRP1_IsEnabledClockSleep\n
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   DACSMEN       LL_APB1_GRP1_IsEnabledClockSleep\n
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   LPTIM1SMEN    LL_APB1_GRP1_IsEnabledClockSleep
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClockSleep(uint32_t Periphs)
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->APB1SMENR1, Periphs) == (Periphs)) ? 1UL : 0UL);
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if APB1 clock is enabled by the clock gating during CPU1 CSleep mode
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1SMENR2   LPUART1SMEN   LL_APB1_GRP2_IsEnabledClockSleep\n
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR2   LPTIM2SMEN    LL_APB1_GRP2_IsEnabledClockSleep\n
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR2   LPTIM3SMEN    LL_APB1_GRP2_IsEnabledClockSleep
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP2_IsEnabledClockSleep(uint32_t Periphs)
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->APB1SMENR2, Periphs) == (Periphs)) ? 1UL : 0UL);
1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 27


1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1SMENR1   TIM2SMEN      LL_APB1_GRP1_DisableClockSleep\n
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   RTCAPBSMEN    LL_APB1_GRP1_DisableClockSleep\n
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   WWDGSMEN      LL_APB1_GRP1_DisableClockSleep\n
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   SPI2SMEN      LL_APB1_GRP1_DisableClockSleep\n
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   USART2SMEN    LL_APB1_GRP1_DisableClockSleep\n
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C1SMEN      LL_APB1_GRP1_DisableClockSleep\n
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C2SMEN      LL_APB1_GRP1_DisableClockSleep\n
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   I2C3SMEN      LL_APB1_GRP1_DisableClockSleep\n
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   DACSMEN       LL_APB1_GRP1_DisableClockSleep\n
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR1   LPTIM1SMEN    LL_APB1_GRP1_DisableClockSleep
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR1, Periphs);
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1SMENR2   LPUART1SMEN   LL_APB1_GRP2_DisableClockSleep\n
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR2   LPTIM2SMEN    LL_APB1_GRP2_DisableClockSleep
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1SMENR2   LPTIM3SMEN    LL_APB1_GRP2_DisableClockSleep
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClockSleep(uint32_t Periphs)
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR2, Periphs);
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 28


1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB2ENR      ADCEN         LL_APB2_GRP1_EnableClock\n
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB2_GRP1_EnableClock\n
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB2_GRP1_EnableClock\n
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB2_GRP1_EnableClock\n
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB2ENR      ADCEN         LL_APB2_GRP1_IsEnabledClock\n
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB2_GRP1_IsEnabledClock\n
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB2_GRP1_IsEnabledClock\n
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB2_GRP1_IsEnabledClock\n
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB2ENR      ADCEN         LL_APB2_GRP1_DisableClock\n
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB2_GRP1_DisableClock\n
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_DisableClock\n
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_DisableClock\n
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB2_GRP1_DisableClock\n
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB2_GRP1_DisableClock\n
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 29


1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB2RSTR     ADCRST        LL_APB2_GRP1_ForceReset\n
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     TIM1RST       LL_APB2_GRP1_ForceReset\n
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ForceReset\n
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ForceReset\n
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     TIM16RST      LL_APB2_GRP1_ForceReset\n
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     TIM17RST      LL_APB2_GRP1_ForceReset\n
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
  38              		.loc 2 1374 22 view .LVU3
  39              	.LBB45:
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
  40              		.loc 2 1376 3 view .LVU4
  41 0000 4FF0B043 		mov	r3, #1476395008
  42 0004 1A6C     		ldr	r2, [r3, #64]
  43 0006 42F40072 		orr	r2, r2, #512
  44 000a 1A64     		str	r2, [r3, #64]
  45              	.LVL1:
  46              		.loc 2 1376 3 is_stmt 0 view .LVU5
  47              	.LBE45:
  48              	.LBE44:
 217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Release reset of ADC clock (core clock) */
 219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   LL_APB2_GRP1_ReleaseReset(LL_APB2_GRP1_PERIPH_ADC);
  49              		.loc 1 219 3 is_stmt 1 view .LVU6
  50              	.LBB46:
  51              	.LBI46:
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB2RSTR     ADCRST        LL_APB2_GRP1_ReleaseReset\n
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     TIM1RST       LL_APB2_GRP1_ReleaseReset\n
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ReleaseReset\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 30


1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     TIM16RST      LL_APB2_GRP1_ReleaseReset\n
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB2RSTR     TIM17RST      LL_APB2_GRP1_ReleaseReset\n
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
  52              		.loc 2 1397 22 view .LVU7
  53              	.LBB47:
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
  54              		.loc 2 1399 3 view .LVU8
  55 000c 1A6C     		ldr	r2, [r3, #64]
  56 000e 22F40072 		bic	r2, r2, #512
  57 0012 1A64     		str	r2, [r3, #64]
  58              	.LVL2:
  59              		.loc 2 1399 3 is_stmt 0 view .LVU9
  60              	.LBE47:
  61              	.LBE46:
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   return SUCCESS;
  62              		.loc 1 221 3 is_stmt 1 view .LVU10
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
  63              		.loc 1 222 1 is_stmt 0 view .LVU11
  64 0014 0120     		movs	r0, #1
  65              	.LVL3:
  66              		.loc 1 222 1 view .LVU12
  67 0016 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE972:
  71              		.section	.text.LL_ADC_CommonInit,"ax",%progbits
  72              		.align	1
  73              		.global	LL_ADC_CommonInit
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu softvfp
  79              	LL_ADC_CommonInit:
  80              	.LVL4:
  81              	.LFB973:
 223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief  Initialize some features of ADC common parameters
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         (all ADC instances belonging to the same ADC common instance)
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         and multimode (for devices with several ADC instances available).
 228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   The setting of ADC common parameters is conditioned to
 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         ADC instances state:
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         All ADC instances belonging to the same ADC common instance
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         must be disabled.
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  ADCxy_COMMON ADC common instance
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 31


 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  pADC_CommonInitStruct Pointer to a @ref LL_ADC_CommonInitTypeDef structure
 235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
 236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - SUCCESS: ADC common registers are initialized
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - ERROR: ADC common registers are not initialized
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** ErrorStatus LL_ADC_CommonInit(ADC_Common_TypeDef *ADCxy_COMMON, LL_ADC_CommonInitTypeDef *pADC_Comm
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** {
  82              		.loc 1 240 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ErrorStatus status = SUCCESS;
  87              		.loc 1 241 3 view .LVU14
 242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Check the parameters */
 244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_ADC_COMMON_INSTANCE(ADCxy_COMMON));
  88              		.loc 1 244 3 view .LVU15
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_COMMON_CLOCK(pADC_CommonInitStruct->CommonClock));
  89              		.loc 1 245 3 view .LVU16
 246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Note: Hardware constraint (refer to description of functions             */
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /*       "LL_ADC_SetCommonXXX()":                                           */
 249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /*       On this STM32 series, setting of these features is conditioned to  */
 250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /*       ADC state:                                                         */
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /*       All ADC instances of the ADC common group must be disabled.        */
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(ADCxy_COMMON) == 0UL)
  90              		.loc 1 252 3 view .LVU17
  91              	.LBB48:
  92              	.LBI48:
  93              		.file 3 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @file    stm32wlxx_ll_adc.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #ifndef STM32WLxx_LL_ADC_H
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define STM32WLxx_LL_ADC_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** extern "C" {
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 32


  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #include "stm32wlxx.h"
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @addtogroup STM32WLxx_LL_Driver
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined (ADC)
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - regular trigger source                                                   */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - regular trigger edge                                                     */
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 33


  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel identifier defined by number                                     */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Equivalent to bitfield "ADC_CHANNEL_ID_NUMBER_
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* channels literals definition.                                              */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* channels literals definition.                                              */
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 34


 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* the relevant bits for:                                                     */
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   common sampling time available.                                          */
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   selection on groups.                                                     */
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 35


 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC registers bits positions */
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC registers bits groups */
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC internal channels related definitions */
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal voltage reference VrefInt */
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3300UL)                    /* Analog voltage reference
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Temperature sensor */
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75C8UL)) /* Internal temperature sen
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Internal temperature sen
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  130)            /* Internal temperature sen
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3300UL)                    /* Analog voltage reference
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 36


 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a register from a register basis from which an offset
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is applied.
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Pointer to register address
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and multimode
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sharing the same ADC common instance):
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         disabled.
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC state:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 37


 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance must be disabled.
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to description of each function for setting
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         conditioned to ADC state.
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note On this STM32 series, this parameter has some cl
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              For more details, refer to description of this functio
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_InitTypeDef;
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (functions with prefix "REG").
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC state:
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance must be disabled.
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to description of each function for setting
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         conditioned to ADC state.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 38


 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (depending on the sequencer mode: scan length of
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              data preserved or overwritten.
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 39


 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* DMA transfer.                                                              */
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 40


 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)                                        /*
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 41


 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)            /*!< ADC trigger frequency mod
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG)        /*!< ADC trigger frequency mod
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS)                           
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SAMPLING_TIME_CH_MASK
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_DACCH1              (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 42


 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (                                                       
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (                                          ADC_CFGR1_EXT
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (                     ADC_CFGR1_EXTSEL_1                
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (                     ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2                      | ADC_CFGR1_EXT
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN)  /*!< ADC conversio
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 43


 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)         /*!< Sequencer configured to not 
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD)  /*!< Sequencer configured to full
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)       /*!< ADC group regular sequencer 
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)       /*!< ADC group regular sequencer 
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)       /*!< ADC group regular sequencer 
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)       /*!< ADC group regular sequencer 
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)       /*!< ADC group regular sequencer 
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)       /*!< ADC group regular sequencer 
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)       /*!< ADC group regular sequencer 
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)         /*!< ADC group regular sequencer 
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)         /*!< On this STM32 series, parame
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< On this STM32 series, parame
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 44


 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                        /*
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)                                     /*
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)                                     /*
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0)                   /*
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)                                     /*
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_0)                   /*
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1)                   /*
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0) /*
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                         | ADC
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_DACCH1_REG           ((LL_ADC_CHANNEL_DACCH1     & ADC_CHANNEL_ID_MASK) | ADC
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 45


 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_OVSE)  /*
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 46


 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR     ((int16_t)0x7FFF) /* Temperature calculation error using 
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         not timeout values.
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         above each literal definition.
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       not timeout values.                                                  */
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       STM32 series:                                                        */
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         cycles                                                             */
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         configuration.                                                     */
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tSTART").                                                       */
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 47


 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)  /*!< Delay required between ADC end of cali
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Write a value in ADC register
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register to be written
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Read a value in ADC register
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register to be read
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Register value
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Example:
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will return decimal number "4".
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number is returned, either defined with number
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 48


 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined(CORE_CM0PLUS)
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                               
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                               
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    :                                                                                               
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                      (0UL))))))))))))))))))))
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #else
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 49


 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                       \
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                       \
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    :                                                                                       \
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                       \
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                       \
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   )
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif /* CORE_CM0PLUS */
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from number in decimal format.
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Example:
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 50


1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC internal channel:
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         returned from ADC registers,
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         because internal and external channels share the same channel
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         parameters definitions of driver.
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a value defined from parameter definition of
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 51


1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC registers.
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 52


1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or a value from functions where a channel number is
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         returned from ADC registers,
1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         because internal and external channels share the same channel
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         parameters definitions of driver.
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT))
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example:
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 53


1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         different of 12 bits.
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            (< ADCx param >,
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            );
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 54


1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         different of 12 bits.
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            );
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC common register instance
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (ADC_COMMON)
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC common instance are disabled.
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 55


1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are disabled.
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled.
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   LL_ADC_IsEnabled(ADC)
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (refer to reference manual).
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a resolution to another resolution.
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((__DATA__)                                                                 \
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 56


1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                       (unit: digital value).
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       __ADC_DATA__,\
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         reference VrefInt.
1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         stored in system memory for each device during production.
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         connected to pin Vref+.
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal voltage reference VrefInt.
1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 57


1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         stored in system memory for each device during production.
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calculation formula:
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  parameters are correct (address and data).
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  less accurate than calibrated values),
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor.
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                 sensor voltage has been measured.
1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
1499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?        \
1500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 58


1509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   )                                                                                \
1510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   :                                                                                \
1511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
1512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (refer to device datasheet).
1519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calculation formula:
1520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   (unit: digital value)
1524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  of the current device has characteristics in line with
1530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  datasheet typical values.
1531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                       On STM32WL, refer to device datasheet parameter "Avg_Slop
1545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                       On STM32WL, refer to device datasheet parameter "V30" (co
1547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 59


1566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               * 1000UL)                                                     \
1567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     -                                                                       \
1568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               * 1000UL)                                                     \
1570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                        \
1571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These ADC registers are data registers:
1601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example:
1606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC register address
1620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 60


1623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (void)(Register);
1625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Retrieve address of register DR */
1627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             is set to clock source asynchronous.
1666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 61


1680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             is set to clock source asynchronous.
1696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
1707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         The values not selected are removed from configuration.
1711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor stabilization time.
1715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
1718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
1719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For ADC conversion of internal channels,
1721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a sampling time minimum value is required.
1722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
1732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 62


1737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Add paths to the current configuration.
1750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor stabilization time.
1757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
1760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
1761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For ADC conversion of internal channels,
1763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a sampling time minimum value is required.
1764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
1772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
1773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
1774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
1784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
1786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Remove paths to the current configuration.
1792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 63


1794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
1802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
1803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
1804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
1814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
1816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
1827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 64


1851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
1853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             cycle).
1868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Refer to reference manual.
1869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
1888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             cycle).
1893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Refer to reference manual.
1894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without having to perform a new calibration using
1905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 65


1908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on going on group regular.
1910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
1916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              CalibrationFactor);
1920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC resolution.
1938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
1940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
1943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
1946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
1953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
1955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC resolution.
1959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
1961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
1962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 66


1965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
1970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
1972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
1978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
1981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
1982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
1991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
1997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
1998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC low power mode.
2010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           in order to reduce power consumption.
2014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           has been retrieved by user software.
2017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           other conversion.
2019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 67


2022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           applications.
2023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           How to use this low power mode:
2024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC conversion start.
2035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of delay during which ADC was idle.
2044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC channel.
2047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC low power mode:
2067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           in order to reduce power consumption.
2071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           has been retrieved by user software.
2074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           other conversion.
2076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 68


2079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           applications.
2080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           How to use this low power mode:
2081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC conversion start.
2092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of delay during which ADC was idle.
2101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC channel.
2104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           is discarded.
2133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 69


2136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
2157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Sampling time common to all channels.
2166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         converted:
2169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         setting).
2172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TS_temp, ...).
2174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required.
2183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
2184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 70


2193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                           uint32_t SamplingTime)
2207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Sampling time common to all channels.
2218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
2222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
2239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
2246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 71


2250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         external interrupt line).
2256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         also set trigger polarity to rising edge
2258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function
2265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         depends on timers availability on the selected device.
2268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3
2280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         external interrupt line).
2293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or external, without detail
2295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (equivalent to
2297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         depends on timers availability on the selected device.
2301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 72


2307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3
2310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS -
2320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((trigger_source
2324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR1_EXTSEL)
2325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR1_EXTEN)
2326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          );
2327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or external.
2332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 73


2364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         available:
2384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank
2386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           affectation to a channel are configurable.
2387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are fixed by channel HW number.
2392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         available:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 74


2421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank
2423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           affectation to a channel are configurable.
2424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are fixed by channel HW number.
2429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
2438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are configurable.
2449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function performs configuration of:
2450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are defined by channel number.
2459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function performs configuration of:
2460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             highest channel number).
2467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           To set scan direction differently, refer to function
2470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 75


2478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are configurable.
2521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function retrieves:
2522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are defined by channel number.
2531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function retrieves:
2532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 76


2535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             highest channel number).
2539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *          To set scan direction differently, refer to function
2542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
2569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t channels_ranks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t sequencer_length = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t rank_index;
2573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t rank_shifted;
2574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Value "0xF0UL" corresponds to bitfield of sequencer 2nd rank
2577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            (ADC_CHSELR_SQ2), value "4" to length of end of sequence
2578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            identifier (0xF) */
2579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   for (rank_index = 0U; rank_index <= (28U - 4U); rank_index += 4U)
2580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
2581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     rank_shifted = (uint32_t)(0xF0UL << rank_index);
2582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     if ((channels_ranks & rank_shifted) == rank_shifted)
2583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
2584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       sequencer_length = rank_shifted;
2585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       break;
2586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
2587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
2588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return sequencer_length;
2590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 77


2592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to mode not fully configurable,
2596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the default scan direction is forward.
2599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to mode not fully configurable,
2626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the default scan direction is forward.
2629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number of ranks.
2644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 78


2649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number of ranks.
2665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
2678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         scan sequence rank.
2679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs configuration of:
2680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
2682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         affectation to a channel are configurable.
2685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
2705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 79


2706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
2707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
2708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
2709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
2710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
2711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
2712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
2745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
2752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
2755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
2758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
2759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
2760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 80


2763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
2764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         scan sequence rank.
2765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         affectation to a channel are configurable.
2768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of the returned channel number:
2772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           as parameter for another function.
2779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To get the channel number in decimal format:
2780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           process the returned value with the helper macro
2781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
2783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
2784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
2785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
2786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
2787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
2788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
2789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
2790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 81


2820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
2821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
2822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
2823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
2827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
2828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
2834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
2835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
2836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
2837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    );
2838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
2843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
2844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
2849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
2854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
2855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
2856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
2875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 82


2877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
2919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 83


2934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
2935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
2936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
2941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
2946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
2947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
2948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
2967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
2969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
2970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
2971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
2972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
2973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
2974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
2975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
2976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
2977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
2978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
2979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
2980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
2981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
2982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
2983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
2984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
2985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
2986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
2987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 84


2991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
3018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
3027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
3028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
3033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 85


3048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
3059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 86


3105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
3119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
3120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be retrieved.
3141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 87


3162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
3191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t channels_bitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((((channels_bitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CH
3195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
3196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
3197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
3198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
3199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
3200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
3201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
3202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
3203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
3204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
3205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
3206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
3207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
3208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
3209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
3210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
3211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
3212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          );
3213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - single mode: one conversion per trigger
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 88


3219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           conversions launched successively automatically.
3221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - single mode: one conversion per trigger
3242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           conversions launched successively automatically.
3244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode:
3260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           when number of DMA data transfers (number of
3262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions) is reached.
3263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions).
3267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode non-circular:
3270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 89


3276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode:
3297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           when number of DMA data transfers (number of
3299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions) is reached.
3300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions).
3304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode non-circular:
3307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         data preserved or overwritten.
3328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         other devices without this feature have a behavior
3330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         equivalent to data overwritten.
3331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 90


3333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         overrun should be set to data overwritten.
3334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         data preserved or overwritten.
3352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Unit: ADC clock cycles.
3374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         converted:
3378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         setting).
3381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TS_temp, ...).
3383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
3386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required.
3389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 91


3390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 92


3447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****             );
3454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Unit: ADC clock cycles.
3459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
3464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 93


3504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
3516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       0x1FUL));
3524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
3541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on ADC group regular.
3542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled.
3544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
3546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 94


3561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
3604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
3605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
3610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
3611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
3612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg;
3614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
3616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 95


3618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   else
3620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX
3622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
3626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDChannelGroup & AWDy);
3627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
3631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           as parameter for another function.
3639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To get the channel number in decimal format:
3640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           process the returned value with the helper macro
3641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
3643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           one channel.
3644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
3669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
3670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
3671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
3672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
3673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 96


3675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
3677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
3678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
3680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
3681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             multiple channels are programmed simultaneously
3683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             by bitfield.
3684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
3707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> A
3709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
3710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
3712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
3714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
3715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
3716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* or a single channel.                                                     */
3717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
3718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
3720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
3721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR1_AWD1SGL) == 0UL)
3722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
3725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
3726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     )
3727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     & (~(ADC_CFGR1_AWD1CH))
3728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       else
3731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 97


3732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a single channel */
3733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
3734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
3735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
3738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     else
3739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
3740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
3741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
3744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN)
3745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       else
3748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a single channel */
3750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
3752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
3753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
3754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
3757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return analog_wd_monit_channels;
3760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         high and low.
3765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 98


3789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Examples:
3795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
3809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
3810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
3811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
3812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
3813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
3814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
3825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
3827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameter        */
3828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDy".                                                                  */
3829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
3830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)) >> (
3832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
3835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
3836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         high or low.
3841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 99


3846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Examples:
3871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
3881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
3883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on ADC group regular.
3884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
3885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
3886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
3887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
3888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
3889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
3890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
3902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 100


3903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
3905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
3906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
3907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
3908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
3910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)) >> (ADC_AWD_TRX
3911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy) >> (ADC_AWD_CRX_REGO
3912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDThresholdsHighLow,
3915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
3916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         concatenated.
3922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using helper macro:
3925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
3930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
3931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
3932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
3933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
3934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
3935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
3944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
3947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
3949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
3950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
3951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
3952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
3954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)) >> (ADC_A
3955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy) >> (ADC_AWD_CR
3956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
3958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
3959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 101


3960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
3961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
3968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
3973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
3977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
3979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
3984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
3986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
3990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
3991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
3997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
3999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on the selected ADC group.
4004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are done from 1 trigger)
4007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           needs a trigger)
4009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 102


4017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
4026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on the selected ADC group.
4027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are done from 1 trigger)
4030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           needs a trigger)
4032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
4039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling
4045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
4046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ratio
4047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - shift
4048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 103


4074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
4095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
4115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the voltage regulator:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 104


4131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by enabling it manually
4132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by launching a calibration
4134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by enabling the ADC
4136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADVREGEN);
4157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
4180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
4182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 105


4188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion start.
4189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADEN);
4208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
4216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADDIS);
4228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
  94              		.loc 3 4239 26 view .LVU18
  95              	.LBB49:
4240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
  96              		.loc 3 4241 3 view .LVU19
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 106


  97              		.loc 3 4241 12 is_stmt 0 view .LVU20
  98 0000 074B     		ldr	r3, .L5
  99 0002 9B68     		ldr	r3, [r3, #8]
 100              		.loc 3 4241 68 view .LVU21
 101 0004 13F0010F 		tst	r3, #1
 102 0008 07D1     		bne	.L4
 103              	.LVL5:
 104              		.loc 3 4241 68 view .LVU22
 105              	.LBE49:
 106              	.LBE48:
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Configuration of ADC hierarchical scope:                               */
 255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*  - common to several ADC                                               */
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    (all ADC instances belonging to the same ADC common instance)       */
 257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC clock (conversion clock)                                  */
 258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     LL_ADC_SetCommonClock(ADCxy_COMMON, pADC_CommonInitStruct->CommonClock);
 107              		.loc 1 258 5 is_stmt 1 view .LVU23
 108 000a 0B68     		ldr	r3, [r1]
 109              	.LVL6:
 110              	.LBB50:
 111              	.LBI50:
1669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 112              		.loc 3 1669 22 view .LVU24
 113              	.LBB51:
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 114              		.loc 3 1671 3 view .LVU25
 115 000c 0268     		ldr	r2, [r0]
 116 000e 22F47012 		bic	r2, r2, #3932160
 117 0012 1343     		orrs	r3, r3, r2
 118              	.LVL7:
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 119              		.loc 3 1671 3 is_stmt 0 view .LVU26
 120 0014 0360     		str	r3, [r0]
 121              	.LVL8:
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 122              		.loc 3 1671 3 view .LVU27
 123              	.LBE51:
 124              	.LBE50:
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 125              		.loc 1 241 15 view .LVU28
 126 0016 0120     		movs	r0, #1
 127              	.LVL9:
 128              	.LBB53:
 129              	.LBB52:
1672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 130              		.loc 3 1672 1 view .LVU29
 131 0018 7047     		bx	lr
 132              	.LVL10:
 133              	.L4:
1672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 134              		.loc 3 1672 1 view .LVU30
 135              	.LBE52:
 136              	.LBE53:
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   else
 261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Initialization error: One or several ADC instances belonging to        */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 107


 263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* the same ADC common instance are not disabled.                         */
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     status = ERROR;
 137              		.loc 1 264 12 view .LVU31
 138 001a 0020     		movs	r0, #0
 139              	.LVL11:
 265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   return status;
 140              		.loc 1 267 3 is_stmt 1 view .LVU32
 268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
 141              		.loc 1 268 1 is_stmt 0 view .LVU33
 142 001c 7047     		bx	lr
 143              	.L6:
 144 001e 00BF     		.align	2
 145              	.L5:
 146 0020 00240140 		.word	1073816576
 147              		.cfi_endproc
 148              	.LFE973:
 150              		.section	.text.LL_ADC_CommonStructInit,"ax",%progbits
 151              		.align	1
 152              		.global	LL_ADC_CommonStructInit
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu softvfp
 158              	LL_ADC_CommonStructInit:
 159              	.LVL12:
 160              	.LFB974:
 269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief  Set each @ref LL_ADC_CommonInitTypeDef field to default value.
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  pADC_CommonInitStruct Pointer to a @ref LL_ADC_CommonInitTypeDef structure
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *                              whose fields will be set to default values.
 274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @retval None
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** void LL_ADC_CommonStructInit(LL_ADC_CommonInitTypeDef *pADC_CommonInitStruct)
 277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** {
 161              		.loc 1 277 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Set pADC_CommonInitStruct fields to default values */
 279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Set fields of ADC common */
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* (all ADC instances belonging to the same ADC common instance) */
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_CommonInitStruct->CommonClock = LL_ADC_CLOCK_ASYNC_DIV2;
 166              		.loc 1 281 3 view .LVU35
 167              		.loc 1 281 38 is_stmt 0 view .LVU36
 168 0000 4FF48023 		mov	r3, #262144
 169 0004 0360     		str	r3, [r0]
 282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
 170              		.loc 1 283 1 view .LVU37
 171 0006 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE974:
 175              		.section	.text.LL_ADC_DeInit,"ax",%progbits
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 108


 176              		.align	1
 177              		.global	LL_ADC_DeInit
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	LL_ADC_DeInit:
 184              	.LVL13:
 185              	.LFB975:
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief  De-initialize registers of the selected ADC instance
 287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         to their default reset values.
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   To reset all ADC instances quickly (perform a hard reset),
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         use function @ref LL_ADC_CommonDeInit().
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   If this functions returns error status, it means that ADC instance
 291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         is in an unknown state.
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         In this case, perform a hard reset using high level
 293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         clock source RCC ADC reset.
 294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         Refer to function @ref LL_ADC_CommonDeInit().
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  ADCx ADC instance
 296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
 297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - SUCCESS: ADC registers are de-initialized
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - ERROR: ADC registers are not de-initialized
 299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** ErrorStatus LL_ADC_DeInit(ADC_TypeDef *ADCx)
 301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** {
 186              		.loc 1 301 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 8
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              		.loc 1 301 1 is_stmt 0 view .LVU39
 192 0000 82B0     		sub	sp, sp, #8
 193              		.cfi_def_cfa_offset 8
 194 0002 0346     		mov	r3, r0
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ErrorStatus status = SUCCESS;
 195              		.loc 1 302 3 is_stmt 1 view .LVU40
 196              	.LVL14:
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   __IO uint32_t timeout_cpu_cycles = 0UL;
 197              		.loc 1 304 3 view .LVU41
 198              		.loc 1 304 17 is_stmt 0 view .LVU42
 199 0004 0022     		movs	r2, #0
 200 0006 0192     		str	r2, [sp, #4]
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Check the parameters */
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(ADCx));
 201              		.loc 1 307 3 is_stmt 1 view .LVU43
 308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Disable ADC instance if not already disabled.                            */
 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   if (LL_ADC_IsEnabled(ADCx) == 1UL)
 202              		.loc 1 310 3 view .LVU44
 203              	.LVL15:
 204              	.LBB54:
 205              	.LBI54:
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 109


 206              		.loc 3 4239 26 view .LVU45
 207              	.LBB55:
 208              		.loc 3 4241 3 view .LVU46
 209              		.loc 3 4241 12 is_stmt 0 view .LVU47
 210 0008 8268     		ldr	r2, [r0, #8]
 211              		.loc 3 4241 68 view .LVU48
 212 000a 12F0010F 		tst	r2, #1
 213 000e 3AD0     		beq	.L17
 214              	.LVL16:
 215              		.loc 3 4241 68 view .LVU49
 216              	.LBE55:
 217              	.LBE54:
 311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Set ADC group regular trigger source to SW start to ensure to not      */
 313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* have an external trigger event occurring during the conversion stop    */
 314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* ADC disable process.                                                   */
 315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     LL_ADC_REG_SetTriggerSource(ADCx, LL_ADC_REG_TRIG_SOFTWARE);
 218              		.loc 1 315 5 is_stmt 1 view .LVU50
 219              	.LBB56:
 220              	.LBI56:
2284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 221              		.loc 3 2284 22 view .LVU51
 222              	.LBB57:
2286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 223              		.loc 3 2286 3 view .LVU52
 224 0010 C268     		ldr	r2, [r0, #12]
 225 0012 22F45C62 		bic	r2, r2, #3520
 226 0016 C260     		str	r2, [r0, #12]
 227              	.LVL17:
2286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 228              		.loc 3 2286 3 is_stmt 0 view .LVU53
 229              	.LBE57:
 230              	.LBE56:
 316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Stop potential ADC conversion on going on ADC group regular.           */
 318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     if (LL_ADC_REG_IsConversionOngoing(ADCx) != 0UL)
 231              		.loc 1 318 5 is_stmt 1 view .LVU54
 232              	.LBB58:
 233              	.LBI58:
4242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
4251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 110


4260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         during calibration:
4264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Calibration factor is available in data register
4265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and also transferred by DMA.
4266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         calibration.
4269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This mode must be disabled during calibration
4275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
4276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
4284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADCAL);
4291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC calibration state.
4295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
4300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
4302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
4315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 111


4317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           starts immediately.
4318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           following the ADC start conversion command.
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without ADC disable command on going.
4326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADSTART);
4338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
4345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without ADC disable command on going.
4346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADSTP);
4358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 234              		.loc 3 4366 26 view .LVU55
 235              	.LBB59:
4367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 236              		.loc 3 4368 3 view .LVU56
 237              		.loc 3 4368 12 is_stmt 0 view .LVU57
 238 0018 8268     		ldr	r2, [r0, #8]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 112


 239              		.loc 3 4368 74 view .LVU58
 240 001a 12F0040F 		tst	r2, #4
 241 001e 0BD0     		beq	.L10
 242              	.LVL18:
 243              		.loc 3 4368 74 view .LVU59
 244              	.LBE59:
 245              	.LBE58:
 319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     {
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       if (LL_ADC_REG_IsStopConversionOngoing(ADCx) == 0UL)
 246              		.loc 1 320 7 is_stmt 1 view .LVU60
 247              	.LBB60:
 248              	.LBI60:
4369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
4373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
4376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
 249              		.loc 3 4377 26 view .LVU61
 250              	.LBB61:
4378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
 251              		.loc 3 4379 3 view .LVU62
 252              		.loc 3 4379 12 is_stmt 0 view .LVU63
 253 0020 8268     		ldr	r2, [r0, #8]
 254              		.loc 3 4379 70 view .LVU64
 255 0022 12F0100F 		tst	r2, #16
 256 0026 07D1     		bne	.L10
 257              	.LVL19:
 258              		.loc 3 4379 70 view .LVU65
 259              	.LBE61:
 260              	.LBE60:
 321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       {
 322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         LL_ADC_REG_StopConversion(ADCx);
 261              		.loc 1 322 9 is_stmt 1 view .LVU66
 262              	.LBB62:
 263              	.LBI62:
4350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 264              		.loc 3 4350 22 view .LVU67
 265              	.LBB63:
4355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 266              		.loc 3 4355 3 view .LVU68
 267 0028 8268     		ldr	r2, [r0, #8]
 268 002a 22F00042 		bic	r2, r2, #-2147483648
 269 002e 22F01702 		bic	r2, r2, #23
 270 0032 42F01002 		orr	r2, r2, #16
 271 0036 8260     		str	r2, [r0, #8]
 272              	.LVL20:
 273              	.L10:
4355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 274              		.loc 3 4355 3 is_stmt 0 view .LVU69
 275              	.LBE63:
 276              	.LBE62:
 323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 113


 324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     }
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Wait for ADC conversions are effectively stopped                       */
 327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     timeout_cpu_cycles = ADC_TIMEOUT_STOP_CONVERSION_CPU_CYCLES;
 277              		.loc 1 327 5 is_stmt 1 view .LVU70
 278              		.loc 1 327 24 is_stmt 0 view .LVU71
 279 0038 4FF40042 		mov	r2, #32768
 280 003c 0192     		str	r2, [sp, #4]
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     while (LL_ADC_REG_IsStopConversionOngoing(ADCx) == 1UL)
 281              		.loc 1 328 5 is_stmt 1 view .LVU72
 282              	.L12:
 283              		.loc 1 328 11 view .LVU73
 284              	.LVL21:
 285              	.LBB64:
 286              	.LBI64:
4377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 287              		.loc 3 4377 26 view .LVU74
 288              	.LBB65:
 289              		.loc 3 4379 3 view .LVU75
 290              		.loc 3 4379 12 is_stmt 0 view .LVU76
 291 003e 9A68     		ldr	r2, [r3, #8]
 292              		.loc 3 4379 70 view .LVU77
 293 0040 12F0100F 		tst	r2, #16
 294 0044 07D0     		beq	.L18
 295              	.LVL22:
 296              		.loc 3 4379 70 view .LVU78
 297              	.LBE65:
 298              	.LBE64:
 329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     {
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       timeout_cpu_cycles--;
 299              		.loc 1 330 7 is_stmt 1 view .LVU79
 300              		.loc 1 330 25 is_stmt 0 view .LVU80
 301 0046 019A     		ldr	r2, [sp, #4]
 302 0048 013A     		subs	r2, r2, #1
 303 004a 0192     		str	r2, [sp, #4]
 331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       if (timeout_cpu_cycles == 0UL)
 304              		.loc 1 331 7 is_stmt 1 view .LVU81
 305              		.loc 1 331 30 is_stmt 0 view .LVU82
 306 004c 019A     		ldr	r2, [sp, #4]
 307              		.loc 1 331 10 view .LVU83
 308 004e 002A     		cmp	r2, #0
 309 0050 F5D1     		bne	.L12
 332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       {
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         /* Time-out error */
 334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         status = ERROR;
 310              		.loc 1 334 16 view .LVU84
 311 0052 0020     		movs	r0, #0
 312              	.LVL23:
 313              		.loc 1 334 16 view .LVU85
 314 0054 00E0     		b	.L11
 315              	.LVL24:
 316              	.L18:
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 317              		.loc 1 302 15 view .LVU86
 318 0056 0120     		movs	r0, #1
 319              	.LVL25:
 320              	.L11:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 114


 335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         break;
 336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       }
 337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     }
 338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Disable the ADC instance */
 340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     LL_ADC_Disable(ADCx);
 321              		.loc 1 340 5 is_stmt 1 view .LVU87
 322              	.LBB66:
 323              	.LBI66:
4220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 324              		.loc 3 4220 22 view .LVU88
 325              	.LBB67:
4225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 326              		.loc 3 4225 3 view .LVU89
 327 0058 9A68     		ldr	r2, [r3, #8]
 328 005a 22F00042 		bic	r2, r2, #-2147483648
 329 005e 22F01702 		bic	r2, r2, #23
 330 0062 42F00202 		orr	r2, r2, #2
 331 0066 9A60     		str	r2, [r3, #8]
 332              	.LVL26:
4225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 333              		.loc 3 4225 3 is_stmt 0 view .LVU90
 334              	.LBE67:
 335              	.LBE66:
 341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Wait for ADC instance is effectively disabled */
 343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     timeout_cpu_cycles = ADC_TIMEOUT_DISABLE_CPU_CYCLES;
 336              		.loc 1 343 5 is_stmt 1 view .LVU91
 337              		.loc 1 343 24 is_stmt 0 view .LVU92
 338 0068 4FF40042 		mov	r2, #32768
 339 006c 0192     		str	r2, [sp, #4]
 344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     while (LL_ADC_IsDisableOngoing(ADCx) == 1UL)
 340              		.loc 1 344 5 is_stmt 1 view .LVU93
 341              	.L13:
 342              		.loc 1 344 11 view .LVU94
 343              	.LVL27:
 344              	.LBB68:
 345              	.LBI68:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 346              		.loc 3 4250 26 view .LVU95
 347              	.LBB69:
4252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 348              		.loc 3 4252 3 view .LVU96
4252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 349              		.loc 3 4252 12 is_stmt 0 view .LVU97
 350 006e 9A68     		ldr	r2, [r3, #8]
4252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 351              		.loc 3 4252 70 view .LVU98
 352 0070 12F0020F 		tst	r2, #2
 353 0074 08D0     		beq	.L9
 354              	.LVL28:
4252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 355              		.loc 3 4252 70 view .LVU99
 356              	.LBE69:
 357              	.LBE68:
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     {
 346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       timeout_cpu_cycles--;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 115


 358              		.loc 1 346 7 is_stmt 1 view .LVU100
 359              		.loc 1 346 25 is_stmt 0 view .LVU101
 360 0076 019A     		ldr	r2, [sp, #4]
 361 0078 013A     		subs	r2, r2, #1
 362 007a 0192     		str	r2, [sp, #4]
 347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       if (timeout_cpu_cycles == 0UL)
 363              		.loc 1 347 7 is_stmt 1 view .LVU102
 364              		.loc 1 347 30 is_stmt 0 view .LVU103
 365 007c 019A     		ldr	r2, [sp, #4]
 366              		.loc 1 347 10 view .LVU104
 367 007e 002A     		cmp	r2, #0
 368 0080 F5D1     		bne	.L13
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       {
 349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         /* Time-out error */
 350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         status = ERROR;
 369              		.loc 1 350 16 view .LVU105
 370 0082 0020     		movs	r0, #0
 371              	.LVL29:
 372              		.loc 1 350 16 view .LVU106
 373 0084 00E0     		b	.L9
 374              	.LVL30:
 375              	.L17:
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 376              		.loc 1 302 15 view .LVU107
 377 0086 0120     		movs	r0, #1
 378              	.LVL31:
 379              	.L9:
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         break;
 352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       }
 353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     }
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Check whether ADC state is compliant with expected state */
 357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   if (READ_BIT(ADCx->CR,
 380              		.loc 1 357 3 is_stmt 1 view .LVU108
 381              		.loc 1 357 7 is_stmt 0 view .LVU109
 382 0088 9A68     		ldr	r2, [r3, #8]
 383              		.loc 1 357 6 view .LVU110
 384 008a 12F0170F 		tst	r2, #23
 385 008e 56D1     		bne	.L19
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                (ADC_CR_ADSTP | ADC_CR_ADSTART
 359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                 | ADC_CR_ADDIS | ADC_CR_ADEN)
 360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****               )
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       == 0UL)
 362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* ========== Reset ADC registers ========== */
 364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register IER */
 365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     CLEAR_BIT(ADCx->IER,
 386              		.loc 1 365 5 is_stmt 1 view .LVU111
 387 0090 5A68     		ldr	r2, [r3, #4]
 388 0092 22F42E52 		bic	r2, r2, #11136
 389 0096 22F01F02 		bic	r2, r2, #31
 390 009a 5A60     		str	r2, [r3, #4]
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****               (LL_ADC_IT_ADRDY
 367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_EOC
 368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_EOS
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_OVR
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 116


 370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_EOSMP
 371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_AWD1
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_AWD2
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_AWD3
 374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_EOCAL
 375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | LL_ADC_IT_CCRDY
 376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****               )
 377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              );
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register ISR */
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     SET_BIT(ADCx->ISR,
 391              		.loc 1 380 5 view .LVU112
 392 009c 1A68     		ldr	r2, [r3]
 393 009e 42F42E52 		orr	r2, r2, #11136
 394 00a2 42F01F02 		orr	r2, r2, #31
 395 00a6 1A60     		str	r2, [r3]
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****             (LL_ADC_FLAG_ADRDY
 382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_EOC
 383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_EOS
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_OVR
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_EOSMP
 386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_AWD1
 387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_AWD2
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_AWD3
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_EOCAL
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              | LL_ADC_FLAG_CCRDY
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****             )
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****            );
 393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register CR */
 395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* "read-set": no direct reset applicable.                                */
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     CLEAR_BIT(ADCx->CR, ADC_CR_ADVREGEN);
 396              		.loc 1 397 5 view .LVU113
 397 00a8 9A68     		ldr	r2, [r3, #8]
 398 00aa 22F08052 		bic	r2, r2, #268435456
 399 00ae 9A60     		str	r2, [r3, #8]
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register CFGR1 */
 400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     CLEAR_BIT(ADCx->CFGR1,
 400              		.loc 1 400 5 view .LVU114
 401 00b0 D968     		ldr	r1, [r3, #12]
 402 00b2 244A     		ldr	r2, .L21
 403 00b4 0A40     		ands	r2, r2, r1
 404 00b6 DA60     		str	r2, [r3, #12]
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****               (ADC_CFGR1_AWD1CH  | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL | ADC_CFGR1_DISCEN
 402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT    | ADC_CFGR1_OVRMOD
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN   | ADC_CFGR1_RES
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              );
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register SMPR */
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     CLEAR_BIT(ADCx->SMPR, ADC_SMPR_SMP1 | ADC_SMPR_SMP2 | ADC_SMPR_SMPSEL);
 405              		.loc 1 408 5 view .LVU115
 406 00b8 5A69     		ldr	r2, [r3, #20]
 407 00ba 22F07F72 		bic	r2, r2, #66846720
 408 00be 22F47F32 		bic	r2, r2, #261120
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 117


 409 00c2 22F45D72 		bic	r2, r2, #884
 410 00c6 22F00302 		bic	r2, r2, #3
 411 00ca 5A61     		str	r2, [r3, #20]
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register TR1 */
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     MODIFY_REG(ADCx->TR1, ADC_TR1_HT1 | ADC_TR1_LT1, ADC_TR1_HT1);
 412              		.loc 1 411 5 view .LVU116
 413 00cc 1A6A     		ldr	r2, [r3, #32]
 414 00ce 02F0F022 		and	r2, r2, #-268374016
 415 00d2 42F07F62 		orr	r2, r2, #267386880
 416 00d6 42F47022 		orr	r2, r2, #983040
 417 00da 1A62     		str	r2, [r3, #32]
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register TR2 */
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     MODIFY_REG(ADCx->TR2, ADC_TR2_HT2 | ADC_TR2_LT2, ADC_TR2_HT2);
 418              		.loc 1 414 5 view .LVU117
 419 00dc 5A6A     		ldr	r2, [r3, #36]
 420 00de 02F0F022 		and	r2, r2, #-268374016
 421 00e2 42F07F62 		orr	r2, r2, #267386880
 422 00e6 42F47022 		orr	r2, r2, #983040
 423 00ea 5A62     		str	r2, [r3, #36]
 415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register TR3 */
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     MODIFY_REG(ADCx->TR3, ADC_TR3_HT3 | ADC_TR3_LT3, ADC_TR3_HT3);
 424              		.loc 1 417 5 view .LVU118
 425 00ec DA6A     		ldr	r2, [r3, #44]
 426 00ee 02F0F022 		and	r2, r2, #-268374016
 427 00f2 42F07F62 		orr	r2, r2, #267386880
 428 00f6 42F47022 		orr	r2, r2, #983040
 429 00fa DA62     		str	r2, [r3, #44]
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register CHSELR */
 420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     CLEAR_BIT(ADCx->CHSELR,
 430              		.loc 1 420 5 view .LVU119
 431 00fc 9A6A     		ldr	r2, [r3, #40]
 432 00fe 920C     		lsrs	r2, r2, #18
 433 0100 9204     		lsls	r2, r2, #18
 434 0102 9A62     		str	r2, [r3, #40]
 421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****               (ADC_CHSELR_CHSEL17 | ADC_CHSELR_CHSEL16
 422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CHSELR_CHSEL15 | ADC_CHSELR_CHSEL14 | ADC_CHSELR_CHSEL13 | ADC_CHSELR_CHSEL12
 423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CHSELR_CHSEL11 | ADC_CHSELR_CHSEL10 | ADC_CHSELR_CHSEL9  | ADC_CHSELR_CHSEL8
 424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CHSELR_CHSEL7  | ADC_CHSELR_CHSEL6  | ADC_CHSELR_CHSEL5  | ADC_CHSELR_CHSEL4
 425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CHSELR_CHSEL3  | ADC_CHSELR_CHSEL2  | ADC_CHSELR_CHSEL1  | ADC_CHSELR_CHSEL0)
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              );
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Wait for ADC channel configuration ready */
 429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     timeout_cpu_cycles = ADC_TIMEOUT_CCRDY_CPU_CYCLES;
 435              		.loc 1 429 5 view .LVU120
 436              		.loc 1 429 24 is_stmt 0 view .LVU121
 437 0104 4FF44032 		mov	r2, #196608
 438 0108 0192     		str	r2, [sp, #4]
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     while (LL_ADC_IsActiveFlag_CCRDY(ADCx) == 0UL)
 439              		.loc 1 430 5 is_stmt 1 view .LVU122
 440              	.L16:
 441              		.loc 1 430 11 view .LVU123
 442              	.LVL32:
 443              	.LBB70:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 118


 444              	.LBI70:
4380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
4385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         all oversampling increased data width (for devices
4386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with feature oversampling).
4387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
4388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
4390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
4392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 12 bits.
4399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
4403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
4407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 10 bits.
4414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
4418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
4420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
4422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 8 bits.
4429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
4433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 119


4436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
4437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 6 bits.
4444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
4448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
4450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
4452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
4461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC ready.
4466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
4470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
4474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
4476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
4480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer
4481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
4482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
4483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
4484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
4485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Functions requiring wait for CCRDY flag are:
4486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
4487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks()
4488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChannels()
4489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChAdd()
4490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChRem()
4491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerScanDirection()
4492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerConfigurable()
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 120


4493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
4494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
4495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         has been changed.
4496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
4497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(ADC_TypeDef *ADCx)
 445              		.loc 3 4500 26 view .LVU124
 446              	.LBB71:
4501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
 447              		.loc 3 4502 3 view .LVU125
 448              		.loc 3 4502 12 is_stmt 0 view .LVU126
 449 010a 1A68     		ldr	r2, [r3]
 450              		.loc 3 4502 81 view .LVU127
 451 010c 12F4005F 		tst	r2, #8192
 452 0110 06D1     		bne	.L15
 453              	.LVL33:
 454              		.loc 3 4502 81 view .LVU128
 455              	.LBE71:
 456              	.LBE70:
 431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     {
 432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       timeout_cpu_cycles--;
 457              		.loc 1 432 7 is_stmt 1 view .LVU129
 458              		.loc 1 432 25 is_stmt 0 view .LVU130
 459 0112 019A     		ldr	r2, [sp, #4]
 460 0114 013A     		subs	r2, r2, #1
 461 0116 0192     		str	r2, [sp, #4]
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       if (timeout_cpu_cycles == 0UL)
 462              		.loc 1 433 7 is_stmt 1 view .LVU131
 463              		.loc 1 433 30 is_stmt 0 view .LVU132
 464 0118 019A     		ldr	r2, [sp, #4]
 465              		.loc 1 433 10 view .LVU133
 466 011a 002A     		cmp	r2, #0
 467 011c F5D1     		bne	.L16
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       {
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         /* Time-out error */
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         status = ERROR;
 468              		.loc 1 436 16 view .LVU134
 469 011e 0020     		movs	r0, #0
 470              	.LVL34:
 471              	.L15:
 437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         break;
 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       }
 439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     }
 440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Clear flag ADC channel configuration ready */
 442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     LL_ADC_ClearFlag_CCRDY(ADCx);
 472              		.loc 1 442 5 is_stmt 1 view .LVU135
 473              	.LBB72:
 474              	.LBI72:
4503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
4507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 121


4508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
4512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
4514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
4518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
4519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
4523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
4525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
4529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
4530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
4534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
4536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
4540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
4541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
4545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
4547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
4551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
4552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
4556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
4558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
4562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
4563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 122


4565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
4567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
4569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
4573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
4574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
4578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
4580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
4584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
4585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
4589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
4591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC ready.
4595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
4599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
4603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
4605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
4609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
4610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
 475              		.loc 3 4613 22 view .LVU136
 476              	.LBB73:
4614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
 477              		.loc 3 4615 3 view .LVU137
 478 0120 4FF40052 		mov	r2, #8192
 479 0124 1A60     		str	r2, [r3]
 480              	.LVL35:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 123


 481              		.loc 3 4615 3 is_stmt 0 view .LVU138
 482              	.LBE73:
 483              	.LBE72:
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register DR */
 445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* bits in access mode read only, no direct reset applicable */
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register CALFACT */
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     CLEAR_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT);
 484              		.loc 1 448 5 is_stmt 1 view .LVU139
 485 0126 D3F8B420 		ldr	r2, [r3, #180]
 486 012a 22F07F02 		bic	r2, r2, #127
 487 012e C3F8B420 		str	r2, [r3, #180]
 449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Reset register CFGR2 */
 451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*       already done above.                                              */
 453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Note: ADC clock reset at the end of de-initialization because select   */
 454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*       asynchronous clock source, corresponding to no clock by default  */
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*       on STM32WL. Refer to function "LL_RCC_SetADCClockSource()".      */
 456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     CLEAR_BIT(ADCx->CFGR2,
 488              		.loc 1 456 5 view .LVU140
 489 0132 1969     		ldr	r1, [r3, #16]
 490 0134 044A     		ldr	r2, .L21+4
 491 0136 0A40     		ands	r2, r2, r1
 492 0138 1A61     		str	r2, [r3, #16]
 493              	.LVL36:
 494              	.L14:
 457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****               (ADC_CFGR2_CKMODE
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CFGR2_TOVS   | ADC_CFGR2_OVSS  | ADC_CFGR2_OVSR
 459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CFGR2_OVSE)
 460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****              );
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   else
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* ADC instance is in an unknown state */
 466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Need to performing a hard reset of ADC instance, using high level      */
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* clock source RCC ADC reset.                                            */
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Caution: On this STM32 series, if several ADC instances are available  */
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*          on the selected device, RCC ADC reset will reset              */
 470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*          all ADC instances belonging to the common ADC instance.       */
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     status = ERROR;
 472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   return status;
 495              		.loc 1 474 3 view .LVU141
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
 496              		.loc 1 475 1 is_stmt 0 view .LVU142
 497 013a 02B0     		add	sp, sp, #8
 498              		.cfi_remember_state
 499              		.cfi_def_cfa_offset 0
 500              		@ sp needed
 501 013c 7047     		bx	lr
 502              	.L19:
 503              		.cfi_restore_state
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 124


 504              		.loc 1 471 12 view .LVU143
 505 013e 0020     		movs	r0, #0
 506              	.LVL37:
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 507              		.loc 1 471 12 view .LVU144
 508 0140 FBE7     		b	.L14
 509              	.L22:
 510 0142 00BF     		.align	2
 511              	.L21:
 512 0144 00023E83 		.word	-2093088256
 513 0148 02FCFF3F 		.word	1073740802
 514              		.cfi_endproc
 515              	.LFE975:
 517              		.section	.text.LL_ADC_Init,"ax",%progbits
 518              		.align	1
 519              		.global	LL_ADC_Init
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu softvfp
 525              	LL_ADC_Init:
 526              	.LVL38:
 527              	.LFB976:
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief  Initialize some features of ADC instance.
 479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         Refer to corresponding unitary functions into
 481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         is conditioned to ADC state:
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         ADC instance must be disabled.
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         This condition is applied to all ADC features, for efficiency
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         and compatibility over all STM32 families. However, the different
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         features can be set under different ADC state conditions
 488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         (setting possible with ADC enabled without conversion on going,
 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         ADC enabled with conversion on going, ...)
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         Each feature can be updated afterwards with a unitary function
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         and potentially with ADC in a different state than disabled,
 492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         refer to description of each function for setting
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         conditioned to ADC state.
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   After using this function, some other features must be configured
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         using LL unitary functions.
 496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         The minimum configuration remaining to be done is:
 497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - Set ADC group regular sequencer:
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            Depending on the sequencer mode (refer to
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            function @ref LL_ADC_REG_SetSequencerConfigurable() ):
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            - map channel on the selected sequencer rank.
 501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *              Refer to function @ref LL_ADC_REG_SetSequencerRanks();
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            - map channel on rank corresponding to channel number.
 503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *              Refer to function @ref LL_ADC_REG_SetSequencerChannels();
 504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - Set ADC channel sampling time
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            Refer to function LL_ADC_SetSamplingTimeCommonChannels();
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            Refer to function LL_ADC_SetChannelSamplingTime();
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  ADCx ADC instance
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  pADC_InitStruct Pointer to a @ref LL_ADC_REG_InitTypeDef structure
 509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 125


 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - SUCCESS: ADC registers are initialized
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - ERROR: ADC registers are not initialized
 512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** ErrorStatus LL_ADC_Init(ADC_TypeDef *ADCx, LL_ADC_InitTypeDef *pADC_InitStruct)
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** {
 528              		.loc 1 514 1 is_stmt 1 view -0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ErrorStatus status = SUCCESS;
 533              		.loc 1 515 3 view .LVU146
 516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Check the parameters */
 518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(ADCx));
 534              		.loc 1 518 3 view .LVU147
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_CLOCK(pADC_InitStruct->Clock));
 535              		.loc 1 520 3 view .LVU148
 521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_RESOLUTION(pADC_InitStruct->Resolution));
 536              		.loc 1 521 3 view .LVU149
 522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_DATA_ALIGN(pADC_InitStruct->DataAlignment));
 537              		.loc 1 522 3 view .LVU150
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_LOW_POWER(pADC_InitStruct->LowPowerMode));
 538              		.loc 1 523 3 view .LVU151
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Note: Hardware constraint (refer to description of this function):       */
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /*       ADC instance must be disabled.                                     */
 527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   if (LL_ADC_IsEnabled(ADCx) == 0UL)
 539              		.loc 1 527 3 view .LVU152
 540              	.LBB74:
 541              	.LBI74:
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 542              		.loc 3 4239 26 view .LVU153
 543              	.LBB75:
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 544              		.loc 3 4241 3 view .LVU154
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 545              		.loc 3 4241 12 is_stmt 0 view .LVU155
 546 0000 8368     		ldr	r3, [r0, #8]
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 547              		.loc 3 4241 68 view .LVU156
 548 0002 13F0010F 		tst	r3, #1
 549 0006 15D1     		bne	.L25
 550              	.LBE75:
 551              	.LBE74:
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ErrorStatus status = SUCCESS;
 552              		.loc 1 514 1 view .LVU157
 553 0008 10B4     		push	{r4}
 554              		.cfi_def_cfa_offset 4
 555              		.cfi_offset 4, -4
 556              	.LVL39:
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Configuration of ADC hierarchical scope:                               */
 530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*  - ADC instance                                                        */
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC data resolution                                           */
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC conversion data alignment                                 */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 126


 533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC low power mode                                            */
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     MODIFY_REG(ADCx->CFGR1,
 557              		.loc 1 534 5 is_stmt 1 view .LVU158
 558 000a C368     		ldr	r3, [r0, #12]
 559 000c 23F44043 		bic	r3, r3, #49152
 560 0010 23F03803 		bic	r3, r3, #56
 561 0014 4A68     		ldr	r2, [r1, #4]
 562 0016 8C68     		ldr	r4, [r1, #8]
 563 0018 2243     		orrs	r2, r2, r4
 564 001a CC68     		ldr	r4, [r1, #12]
 565 001c 2243     		orrs	r2, r2, r4
 566 001e 1343     		orrs	r3, r3, r2
 567 0020 C360     		str	r3, [r0, #12]
 535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                ADC_CFGR1_RES
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CFGR1_ALIGN
 537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CFGR1_WAIT
 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | ADC_CFGR1_AUTOFF
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                ,
 540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                pADC_InitStruct->Resolution
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | pADC_InitStruct->DataAlignment
 542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                | pADC_InitStruct->LowPowerMode
 543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****               );
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     MODIFY_REG(ADCx->CFGR2,
 568              		.loc 1 545 5 view .LVU159
 569 0022 0369     		ldr	r3, [r0, #16]
 570 0024 23F04043 		bic	r3, r3, #-1073741824
 571 0028 0A68     		ldr	r2, [r1]
 572 002a 1343     		orrs	r3, r3, r2
 573 002c 0361     		str	r3, [r0, #16]
 515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 574              		.loc 1 515 15 is_stmt 0 view .LVU160
 575 002e 0120     		movs	r0, #1
 576              	.LVL40:
 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                ADC_CFGR2_CKMODE
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                ,
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                pADC_InitStruct->Clock
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****               );
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   else
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Initialization error: ADC instance is not disabled. */
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     status = ERROR;
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   return status;
 577              		.loc 1 557 3 is_stmt 1 view .LVU161
 558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
 578              		.loc 1 558 1 is_stmt 0 view .LVU162
 579 0030 10BC     		pop	{r4}
 580              		.cfi_restore 4
 581              		.cfi_def_cfa_offset 0
 582 0032 7047     		bx	lr
 583              	.LVL41:
 584              	.L25:
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 585              		.loc 1 554 12 view .LVU163
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 127


 586 0034 0020     		movs	r0, #0
 587              	.LVL42:
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
 588              		.loc 1 557 3 is_stmt 1 view .LVU164
 589              		.loc 1 558 1 is_stmt 0 view .LVU165
 590 0036 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE976:
 594              		.section	.text.LL_ADC_StructInit,"ax",%progbits
 595              		.align	1
 596              		.global	LL_ADC_StructInit
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu softvfp
 602              	LL_ADC_StructInit:
 603              	.LVL43:
 604              	.LFB977:
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief  Set each @ref LL_ADC_InitTypeDef field to default value.
 562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  pADC_InitStruct Pointer to a @ref LL_ADC_InitTypeDef structure
 563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *                        whose fields will be set to default values.
 564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @retval None
 565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** void LL_ADC_StructInit(LL_ADC_InitTypeDef *pADC_InitStruct)
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** {
 605              		.loc 1 567 1 is_stmt 1 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Set pADC_InitStruct fields to default values */
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Set fields of ADC instance */
 570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_InitStruct->Clock         = LL_ADC_CLOCK_SYNC_PCLK_DIV2;
 610              		.loc 1 570 3 view .LVU167
 611              		.loc 1 570 34 is_stmt 0 view .LVU168
 612 0000 4FF08043 		mov	r3, #1073741824
 613 0004 0360     		str	r3, [r0]
 571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_InitStruct->Resolution    = LL_ADC_RESOLUTION_12B;
 614              		.loc 1 571 3 is_stmt 1 view .LVU169
 615              		.loc 1 571 34 is_stmt 0 view .LVU170
 616 0006 0023     		movs	r3, #0
 617 0008 4360     		str	r3, [r0, #4]
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_InitStruct->DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 618              		.loc 1 572 3 is_stmt 1 view .LVU171
 619              		.loc 1 572 34 is_stmt 0 view .LVU172
 620 000a 8360     		str	r3, [r0, #8]
 573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_InitStruct->LowPowerMode  = LL_ADC_LP_MODE_NONE;
 621              		.loc 1 573 3 is_stmt 1 view .LVU173
 622              		.loc 1 573 34 is_stmt 0 view .LVU174
 623 000c C360     		str	r3, [r0, #12]
 574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
 624              		.loc 1 575 1 view .LVU175
 625 000e 7047     		bx	lr
 626              		.cfi_endproc
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 128


 627              	.LFE977:
 629              		.section	.text.LL_ADC_REG_Init,"ax",%progbits
 630              		.align	1
 631              		.global	LL_ADC_REG_Init
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu softvfp
 637              	LL_ADC_REG_Init:
 638              	.LVL44:
 639              	.LFB978:
 576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief  Initialize some features of ADC group regular.
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         Refer to corresponding unitary functions into
 581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         (functions with prefix "REG").
 583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         is conditioned to ADC state:
 585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         ADC instance must be disabled.
 586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         This condition is applied to all ADC features, for efficiency
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         and compatibility over all STM32 families. However, the different
 588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         features can be set under different ADC state conditions
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         (setting possible with ADC enabled without conversion on going,
 590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         ADC enabled with conversion on going, ...)
 591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         Each feature can be updated afterwards with a unitary function
 592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         and potentially with ADC in a different state than disabled,
 593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         refer to description of each function for setting
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         conditioned to ADC state.
 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   Before using this function, ADC group regular sequencer
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         must be configured: refer to function
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         @ref LL_ADC_REG_SetSequencerConfigurable().
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @note   After using this function, other features must be configured
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         using LL unitary functions.
 600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *         The minimum configuration remaining to be done is:
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - Set ADC group regular sequencer:
 602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            Depending on the sequencer mode (refer to
 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            function @ref LL_ADC_REG_SetSequencerConfigurable() ):
 604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            - map channel on the selected sequencer rank.
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *              Refer to function @ref LL_ADC_REG_SetSequencerRanks();
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            - map channel on rank corresponding to channel number.
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *              Refer to function @ref LL_ADC_REG_SetSequencerChannels();
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - Set ADC channel sampling time
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            Refer to function LL_ADC_SetSamplingTimeCommonChannels();
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *            Refer to function LL_ADC_SetChannelSamplingTime();
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  ADCx ADC instance
 612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  pADC_RegInitStruct Pointer to a @ref LL_ADC_REG_InitTypeDef structure
 613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @retval An ErrorStatus enumeration value:
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - SUCCESS: ADC registers are initialized
 615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *          - ERROR: ADC registers are not initialized
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** ErrorStatus LL_ADC_REG_Init(ADC_TypeDef *ADCx, LL_ADC_REG_InitTypeDef *pADC_RegInitStruct)
 618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** {
 640              		.loc 1 618 1 is_stmt 1 view -0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 129


 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ErrorStatus status = SUCCESS;
 645              		.loc 1 619 3 view .LVU177
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Check the parameters */
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(ADCx));
 646              		.loc 1 622 3 view .LVU178
 623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_TRIG_SOURCE(pADC_RegInitStruct->TriggerSource));
 647              		.loc 1 623 3 view .LVU179
 624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_CONTINUOUS_MODE(pADC_RegInitStruct->ContinuousMode));
 648              		.loc 1 624 3 view .LVU180
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_DMA_TRANSFER(pADC_RegInitStruct->DMATransfer));
 649              		.loc 1 625 3 view .LVU181
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   assert_param(IS_LL_ADC_REG_OVR_DATA_BEHAVIOR(pADC_RegInitStruct->Overrun));
 650              		.loc 1 626 3 view .LVU182
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   if (LL_ADC_REG_GetSequencerConfigurable(ADCx) != LL_ADC_REG_SEQ_FIXED)
 651              		.loc 1 628 3 view .LVU183
 652              	.LBB76:
 653              	.LBI76:
2437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 654              		.loc 3 2437 26 view .LVU184
 655              	.LBB77:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 656              		.loc 3 2439 3 view .LVU185
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 657              		.loc 3 2439 21 is_stmt 0 view .LVU186
 658 0000 C368     		ldr	r3, [r0, #12]
 659              	.LVL45:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 660              		.loc 3 2439 21 view .LVU187
 661              	.LBE77:
 662              	.LBE76:
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     assert_param(IS_LL_ADC_REG_SEQ_SCAN_LENGTH(pADC_RegInitStruct->SequencerLength));
 663              		.loc 1 630 5 is_stmt 1 view .LVU188
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   if ((LL_ADC_REG_GetSequencerConfigurable(ADCx) == LL_ADC_REG_SEQ_FIXED)
 664              		.loc 1 633 3 view .LVU189
 665              	.LBB78:
 666              	.LBI78:
2437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 667              		.loc 3 2437 26 view .LVU190
 668              	.LBB79:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 669              		.loc 3 2439 3 view .LVU191
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 670              		.loc 3 2439 21 is_stmt 0 view .LVU192
 671 0002 C368     		ldr	r3, [r0, #12]
 672              	.LVL46:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 673              		.loc 3 2439 21 view .LVU193
 674              	.LBE79:
 675              	.LBE78:
 634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       || (pADC_RegInitStruct->SequencerLength != LL_ADC_REG_SEQ_SCAN_DISABLE)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 130


 635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****      )
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     assert_param(IS_LL_ADC_REG_SEQ_SCAN_DISCONT_MODE(pADC_RegInitStruct->SequencerDiscont));
 676              		.loc 1 637 5 is_stmt 1 view .LVU194
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* ADC group regular continuous mode and discontinuous mode                 */
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* can not be enabled simultenaeously                                       */
 641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     assert_param((pADC_RegInitStruct->ContinuousMode == LL_ADC_REG_CONV_SINGLE)
 677              		.loc 1 641 5 view .LVU195
 642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  || (pADC_RegInitStruct->SequencerDiscont == LL_ADC_REG_SEQ_DISCONT_DISABLE));
 643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Note: Hardware constraint (refer to description of this function):       */
 646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /*       ADC instance must be disabled.                                     */
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   if (LL_ADC_IsEnabled(ADCx) == 0UL)
 678              		.loc 1 647 3 view .LVU196
 679              	.LBB80:
 680              	.LBI80:
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 681              		.loc 3 4239 26 view .LVU197
 682              	.LBB81:
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 683              		.loc 3 4241 3 view .LVU198
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 684              		.loc 3 4241 12 is_stmt 0 view .LVU199
 685 0004 8368     		ldr	r3, [r0, #8]
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 686              		.loc 3 4241 68 view .LVU200
 687 0006 13F0010F 		tst	r3, #1
 688 000a 2CD1     		bne	.L36
 689              	.LBE81:
 690              	.LBE80:
 618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   ErrorStatus status = SUCCESS;
 691              		.loc 1 618 1 view .LVU201
 692 000c 10B4     		push	{r4}
 693              		.cfi_def_cfa_offset 4
 694              		.cfi_offset 4, -4
 695              	.LVL47:
 648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Configuration of ADC hierarchical scope:                               */
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*  - ADC group regular                                                   */
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC group regular trigger source                              */
 652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC group regular sequencer length                            */
 653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC group regular sequencer discontinuous mode                */
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC group regular continuous mode                             */
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC group regular conversion data transfer: no transfer or    */
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*      transfer by DMA, and DMA requests mode                            */
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*    - Set ADC group regular overrun behavior                            */
 658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Note: On this STM32 series, ADC trigger edge is set to value 0x0 by    */
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /*       setting of trigger source to SW start.                           */
 660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     if ((LL_ADC_REG_GetSequencerConfigurable(ADCx) == LL_ADC_REG_SEQ_FIXED)
 696              		.loc 1 660 5 is_stmt 1 view .LVU202
 697              	.LBB82:
 698              	.LBI82:
2437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 699              		.loc 3 2437 26 view .LVU203
 700              	.LBB83:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 131


2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 701              		.loc 3 2439 3 view .LVU204
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 702              		.loc 3 2439 21 is_stmt 0 view .LVU205
 703 000e C368     		ldr	r3, [r0, #12]
 704              	.LVL48:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 705              		.loc 3 2439 21 view .LVU206
 706              	.LBE83:
 707              	.LBE82:
 708              		.loc 1 660 8 view .LVU207
 709 0010 13F4001F 		tst	r3, #2097152
 710 0014 02D0     		beq	.L33
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****         || (pADC_RegInitStruct->SequencerLength != LL_ADC_REG_SEQ_SCAN_DISABLE)
 711              		.loc 1 661 31 view .LVU208
 712 0016 4B68     		ldr	r3, [r1, #4]
 713              		.loc 1 661 9 view .LVU209
 714 0018 F02B     		cmp	r3, #240
 715 001a 17D0     		beq	.L34
 716              	.L33:
 662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****        )
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     {
 664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       /* Case of sequencer mode fixed
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****          or sequencer length >= 2 ranks with sequencer mode fully configurable:
 666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****          discontinuous mode configured */
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       MODIFY_REG(ADCx->CFGR1,
 717              		.loc 1 667 7 is_stmt 1 view .LVU210
 718 001c C368     		ldr	r3, [r0, #12]
 719 001e 144A     		ldr	r2, .L42
 720 0020 1A40     		ands	r2, r2, r3
 721 0022 0B68     		ldr	r3, [r1]
 722 0024 8C68     		ldr	r4, [r1, #8]
 723 0026 2343     		orrs	r3, r3, r4
 724 0028 CC68     		ldr	r4, [r1, #12]
 725 002a 2343     		orrs	r3, r3, r4
 726 002c 0C69     		ldr	r4, [r1, #16]
 727 002e 2343     		orrs	r3, r3, r4
 728 0030 4C69     		ldr	r4, [r1, #20]
 729 0032 2343     		orrs	r3, r3, r4
 730 0034 1343     		orrs	r3, r3, r2
 731 0036 C360     		str	r3, [r0, #12]
 732              	.L35:
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  ADC_CFGR1_EXTSEL
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_EXTEN
 670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_DISCEN
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_CONT
 672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_DMAEN
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_DMACFG
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_OVRMOD
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  ,
 676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  pADC_RegInitStruct->TriggerSource
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | pADC_RegInitStruct->SequencerDiscont
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | pADC_RegInitStruct->ContinuousMode
 679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | pADC_RegInitStruct->DMATransfer
 680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | pADC_RegInitStruct->Overrun
 681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                 );
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 132


 683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     else
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     {
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       /* Case of sequencer mode fully configurable
 686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****          and sequencer length 1 rank (sequencer disabled):
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****          discontinuous mode discarded (fixed to disable) */
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       MODIFY_REG(ADCx->CFGR1,
 689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  ADC_CFGR1_EXTSEL
 690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_EXTEN
 691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_DISCEN
 692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_CONT
 693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_DMAEN
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_DMACFG
 695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | ADC_CFGR1_OVRMOD
 696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  ,
 697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  pADC_RegInitStruct->TriggerSource
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | LL_ADC_REG_SEQ_DISCONT_DISABLE
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | pADC_RegInitStruct->ContinuousMode
 700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | pADC_RegInitStruct->DMATransfer
 701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  | pADC_RegInitStruct->Overrun
 702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                 );
 703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     }
 704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Set ADC group regular sequencer length */
 706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     if (LL_ADC_REG_GetSequencerConfigurable(ADCx) != LL_ADC_REG_SEQ_FIXED)
 733              		.loc 1 706 5 view .LVU211
 734              	.LVL49:
 735              	.LBB84:
 736              	.LBI84:
2437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 737              		.loc 3 2437 26 view .LVU212
 738              	.LBB85:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 739              		.loc 3 2439 3 view .LVU213
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 740              		.loc 3 2439 21 is_stmt 0 view .LVU214
 741 0038 C368     		ldr	r3, [r0, #12]
 742              	.LVL50:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 743              		.loc 3 2439 21 view .LVU215
 744              	.LBE85:
 745              	.LBE84:
 746              		.loc 1 706 8 view .LVU216
 747 003a 13F4001F 		tst	r3, #2097152
 748 003e 14D0     		beq	.L37
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     {
 708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****       LL_ADC_REG_SetSequencerLength(ADCx, pADC_RegInitStruct->SequencerLength);
 749              		.loc 1 708 7 is_stmt 1 view .LVU217
 750 0040 4B68     		ldr	r3, [r1, #4]
 751              	.LVL51:
 752              	.LBB86:
 753              	.LBI86:
2509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 754              		.loc 3 2509 22 view .LVU218
 755              	.LBB87:
2511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 756              		.loc 3 2511 3 view .LVU219
 757 0042 826A     		ldr	r2, [r0, #40]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 133


 758 0044 1343     		orrs	r3, r3, r2
 759              	.LVL52:
2511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 760              		.loc 3 2511 3 is_stmt 0 view .LVU220
 761 0046 8362     		str	r3, [r0, #40]
 762              	.LVL53:
2511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 763              		.loc 3 2511 3 view .LVU221
 764              	.LBE87:
 765              	.LBE86:
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 766              		.loc 1 619 15 view .LVU222
 767 0048 0120     		movs	r0, #1
 768              	.LVL54:
 769              	.LBB89:
 770              	.LBB88:
2512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 771              		.loc 3 2512 1 view .LVU223
 772 004a 0FE0     		b	.L32
 773              	.LVL55:
 774              	.L34:
2512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 775              		.loc 3 2512 1 view .LVU224
 776              	.LBE88:
 777              	.LBE89:
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****                  ADC_CFGR1_EXTSEL
 778              		.loc 1 688 7 is_stmt 1 view .LVU225
 779 004c C368     		ldr	r3, [r0, #12]
 780 004e 084A     		ldr	r2, .L42
 781 0050 1A40     		ands	r2, r2, r3
 782 0052 0B68     		ldr	r3, [r1]
 783 0054 CC68     		ldr	r4, [r1, #12]
 784 0056 2343     		orrs	r3, r3, r4
 785 0058 0C69     		ldr	r4, [r1, #16]
 786 005a 2343     		orrs	r3, r3, r4
 787 005c 4C69     		ldr	r4, [r1, #20]
 788 005e 2343     		orrs	r3, r3, r4
 789 0060 1343     		orrs	r3, r3, r2
 790 0062 C360     		str	r3, [r0, #12]
 791 0064 E8E7     		b	.L35
 792              	.LVL56:
 793              	.L36:
 794              		.cfi_def_cfa_offset 0
 795              		.cfi_restore 4
 709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     }
 710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   else
 712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   {
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     /* Initialization error: ADC instance is not disabled. */
 714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****     status = ERROR;
 796              		.loc 1 714 12 is_stmt 0 view .LVU226
 797 0066 0020     		movs	r0, #0
 798              	.LVL57:
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   }
 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   return status;
 799              		.loc 1 716 3 is_stmt 1 view .LVU227
 717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 134


 800              		.loc 1 717 1 is_stmt 0 view .LVU228
 801 0068 7047     		bx	lr
 802              	.LVL58:
 803              	.L37:
 804              		.cfi_def_cfa_offset 4
 805              		.cfi_offset 4, -4
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 806              		.loc 1 619 15 view .LVU229
 807 006a 0120     		movs	r0, #1
 808              	.LVL59:
 809              	.L32:
 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
 810              		.loc 1 716 3 is_stmt 1 view .LVU230
 811              		.loc 1 717 1 is_stmt 0 view .LVU231
 812 006c 10BC     		pop	{r4}
 813              		.cfi_restore 4
 814              		.cfi_def_cfa_offset 0
 815 006e 7047     		bx	lr
 816              	.L43:
 817              		.align	2
 818              	.L42:
 819 0070 3CC2FEFF 		.word	-81348
 820              		.cfi_endproc
 821              	.LFE978:
 823              		.section	.text.LL_ADC_REG_StructInit,"ax",%progbits
 824              		.align	1
 825              		.global	LL_ADC_REG_StructInit
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 829              		.fpu softvfp
 831              	LL_ADC_REG_StructInit:
 832              	.LVL60:
 833              	.LFB979:
 718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** 
 719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** /**
 720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @brief  Set each @ref LL_ADC_REG_InitTypeDef field to default value.
 721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @param  pADC_RegInitStruct Pointer to a @ref LL_ADC_REG_InitTypeDef structure
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   *                            whose fields will be set to default values.
 723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   * @retval None
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   */
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** void LL_ADC_REG_StructInit(LL_ADC_REG_InitTypeDef *pADC_RegInitStruct)
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** {
 834              		.loc 1 726 1 is_stmt 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Set pADC_RegInitStruct fields to default values */
 728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Set fields of ADC group regular */
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /* Note: On this STM32 series, ADC trigger edge is set to value 0x0 by      */
 730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   /*       setting of trigger source to SW start.                             */
 731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_RegInitStruct->TriggerSource    = LL_ADC_REG_TRIG_SOFTWARE;
 839              		.loc 1 731 3 view .LVU233
 840              		.loc 1 731 40 is_stmt 0 view .LVU234
 841 0000 0023     		movs	r3, #0
 842 0002 0360     		str	r3, [r0]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 135


 732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_RegInitStruct->SequencerLength  = LL_ADC_REG_SEQ_SCAN_DISABLE;
 843              		.loc 1 732 3 is_stmt 1 view .LVU235
 844              		.loc 1 732 40 is_stmt 0 view .LVU236
 845 0004 F022     		movs	r2, #240
 846 0006 4260     		str	r2, [r0, #4]
 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_RegInitStruct->SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 847              		.loc 1 733 3 is_stmt 1 view .LVU237
 848              		.loc 1 733 40 is_stmt 0 view .LVU238
 849 0008 8360     		str	r3, [r0, #8]
 734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_RegInitStruct->ContinuousMode   = LL_ADC_REG_CONV_SINGLE;
 850              		.loc 1 734 3 is_stmt 1 view .LVU239
 851              		.loc 1 734 40 is_stmt 0 view .LVU240
 852 000a C360     		str	r3, [r0, #12]
 735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_RegInitStruct->DMATransfer      = LL_ADC_REG_DMA_TRANSFER_NONE;
 853              		.loc 1 735 3 is_stmt 1 view .LVU241
 854              		.loc 1 735 40 is_stmt 0 view .LVU242
 855 000c 0361     		str	r3, [r0, #16]
 736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c ****   pADC_RegInitStruct->Overrun          = LL_ADC_REG_OVR_DATA_OVERWRITTEN;
 856              		.loc 1 736 3 is_stmt 1 view .LVU243
 857              		.loc 1 736 40 is_stmt 0 view .LVU244
 858 000e 4FF48053 		mov	r3, #4096
 859 0012 4361     		str	r3, [r0, #20]
 737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_adc.c **** }
 860              		.loc 1 737 1 view .LVU245
 861 0014 7047     		bx	lr
 862              		.cfi_endproc
 863              	.LFE979:
 865              		.text
 866              	.Letext0:
 867              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 868              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 869              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 870              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wlxx.h"
 871              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s 			page 136


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wlxx_ll_adc.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:16     .text.LL_ADC_CommonDeInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:24     .text.LL_ADC_CommonDeInit:0000000000000000 LL_ADC_CommonDeInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:72     .text.LL_ADC_CommonInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:79     .text.LL_ADC_CommonInit:0000000000000000 LL_ADC_CommonInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:146    .text.LL_ADC_CommonInit:0000000000000020 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:151    .text.LL_ADC_CommonStructInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:158    .text.LL_ADC_CommonStructInit:0000000000000000 LL_ADC_CommonStructInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:176    .text.LL_ADC_DeInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:183    .text.LL_ADC_DeInit:0000000000000000 LL_ADC_DeInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:512    .text.LL_ADC_DeInit:0000000000000144 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:518    .text.LL_ADC_Init:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:525    .text.LL_ADC_Init:0000000000000000 LL_ADC_Init
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:595    .text.LL_ADC_StructInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:602    .text.LL_ADC_StructInit:0000000000000000 LL_ADC_StructInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:630    .text.LL_ADC_REG_Init:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:637    .text.LL_ADC_REG_Init:0000000000000000 LL_ADC_REG_Init
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:819    .text.LL_ADC_REG_Init:0000000000000070 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:824    .text.LL_ADC_REG_StructInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccP2dq1a.s:831    .text.LL_ADC_REG_StructInit:0000000000000000 LL_ADC_REG_StructInit

NO UNDEFINED SYMBOLS
