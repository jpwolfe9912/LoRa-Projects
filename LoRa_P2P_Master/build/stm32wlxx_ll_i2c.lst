ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32wlxx_ll_i2c.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LL_I2C_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	LL_I2C_DeInit
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	LL_I2C_DeInit:
  25              	.LVL0:
  26              	.LFB978:
  27              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c"
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @file    stm32wlxx_ll_i2c.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @brief   I2C LL module driver.
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #if defined(USE_FULL_LL_DRIVER)
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /* Includes ------------------------------------------------------------------*/
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #include "stm32wlxx_ll_i2c.h"
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #include "stm32wlxx_ll_bus.h"
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #ifdef  USE_FULL_ASSERT
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #include "stm32_assert.h"
  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #else
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #define assert_param(expr) ((void)0U)
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #endif /* USE_FULL_ASSERT */
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /** @addtogroup STM32WLxx_LL_Driver
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @{
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 2


  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #if defined (I2C1) || defined (I2C2) || defined (I2C3)
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /** @defgroup I2C_LL I2C
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @{
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /* Private types -------------------------------------------------------------*/
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /* Private variables ---------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /* Private constants ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /* Private macros ------------------------------------------------------------*/
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /** @addtogroup I2C_LL_Private_Macros
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @{
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #define IS_LL_I2C_PERIPHERAL_MODE(__VALUE__)    (((__VALUE__) == LL_I2C_MODE_I2C)          || \
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_MODE_SMBUS_HOST)   || \
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_MODE_SMBUS_DEVICE) || \
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_MODE_SMBUS_DEVICE_ARP))
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #define IS_LL_I2C_ANALOG_FILTER(__VALUE__)      (((__VALUE__) == LL_I2C_ANALOGFILTER_ENABLE) || \
  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_ANALOGFILTER_DISABLE))
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #define IS_LL_I2C_DIGITAL_FILTER(__VALUE__)     ((__VALUE__) <= 0x0000000FU)
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #define IS_LL_I2C_OWN_ADDRESS1(__VALUE__)       ((__VALUE__) <= 0x000003FFU)
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #define IS_LL_I2C_TYPE_ACKNOWLEDGE(__VALUE__)   (((__VALUE__) == LL_I2C_ACK) || \
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_NACK))
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** #define IS_LL_I2C_OWN_ADDRSIZE(__VALUE__)       (((__VALUE__) == LL_I2C_OWNADDRESS1_7BIT) || \
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****                                                  ((__VALUE__) == LL_I2C_OWNADDRESS1_10BIT))
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /**
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @}
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /* Private function prototypes -----------------------------------------------*/
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /* Exported functions --------------------------------------------------------*/
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /** @addtogroup I2C_LL_Exported_Functions
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @{
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /** @addtogroup I2C_LL_EF_Init
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @{
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /**
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @brief  De-initialize the I2C registers to their default reset values.
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @param  I2Cx I2C Instance.
  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @retval An ErrorStatus enumeration value:
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   *          - SUCCESS: I2C registers are de-initialized
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   *          - ERROR: I2C registers are not de-initialized
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** ErrorStatus LL_I2C_DeInit(I2C_TypeDef *I2Cx)
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** {
  28              		.loc 1 87 1 view -0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 3


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   ErrorStatus status = SUCCESS;
  33              		.loc 1 88 3 view .LVU1
  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /* Check the I2C Instance I2Cx */
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(I2Cx));
  34              		.loc 1 91 3 view .LVU2
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   if (I2Cx == I2C1)
  35              		.loc 1 93 3 view .LVU3
  36              		.loc 1 93 6 is_stmt 0 view .LVU4
  37 0000 174B     		ldr	r3, .L9
  38 0002 9842     		cmp	r0, r3
  39 0004 07D0     		beq	.L6
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   {
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     /* Force reset of I2C clock */
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_I2C1);
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     /* Release reset of I2C clock */
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_I2C1);
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   }
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   else if (I2Cx == I2C2)
  40              		.loc 1 101 8 is_stmt 1 view .LVU5
  41              		.loc 1 101 11 is_stmt 0 view .LVU6
  42 0006 174B     		ldr	r3, .L9+4
  43 0008 9842     		cmp	r0, r3
  44 000a 10D0     		beq	.L7
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   {
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     /* Force reset of I2C clock */
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_I2C2);
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     /* Release reset of I2C clock */
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_I2C2);
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   }
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   else if (I2Cx == I2C3)
  45              		.loc 1 110 8 is_stmt 1 view .LVU7
  46              		.loc 1 110 11 is_stmt 0 view .LVU8
  47 000c 164B     		ldr	r3, .L9+8
  48 000e 9842     		cmp	r0, r3
  49 0010 19D0     		beq	.L8
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   {
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     /* Force reset of I2C clock */
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_I2C3);
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     /* Release reset of I2C clock */
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_I2C3);
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   }
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   else
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   {
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     status = ERROR;
  50              		.loc 1 120 12 view .LVU9
  51 0012 0020     		movs	r0, #0
  52              	.LVL1:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 4


 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   }
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   return status;
  53              		.loc 1 123 3 is_stmt 1 view .LVU10
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** }
  54              		.loc 1 124 1 is_stmt 0 view .LVU11
  55 0014 7047     		bx	lr
  56              	.LVL2:
  57              	.L6:
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  58              		.loc 1 96 5 is_stmt 1 view .LVU12
  59              	.LBB32:
  60              	.LBI32:
  61              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @file    stm32wlxx_ll_bus.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @verbatim
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****                       ##### RCC Limitations #####
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ==============================================================================
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       from/to registers.w<
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       Workarounds:
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @endverbatim
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifndef __STM32WLxx_LL_BUS_H
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define __STM32WLxx_LL_BUS_H
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifdef __cplusplus
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** extern "C" {
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 5


  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #include "stm32wlxx.h"
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @addtogroup STM32WLxx_LL_Driver
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(RCC)
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL BUS
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOH          RCC_AHB2ENR_GPIOHEN
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_PKA            RCC_AHB3ENR_PKAEN
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_AES            RCC_AHB3ENR_AESEN
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 6


 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_RNG            RCC_AHB3ENR_RNGEN
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_HSEM           RCC_AHB3ENR_HSEMEN
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_IPCC           RCC_AHB3ENR_IPCCEN
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM1          RCC_AHB3SMENR_SRAM1SMEN
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM2          RCC_AHB3SMENR_SRAM2SMEN
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FLASH          RCC_AHB3ENR_FLASHEN
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC            RCC_APB1ENR1_DACEN
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (0xFFFFFFFFU)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM2         RCC_APB1ENR2_LPTIM2EN
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM3         RCC_APB1ENR2_LPTIM3EN
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC            RCC_APB2ENR_ADCEN
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB3_GRP1_PERIPH  APB3 GRP1 PERIPH
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 7


 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_SUBGHZSPI      RCC_APB3ENR_SUBGHZSPIEN
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB1_GRP1_PERIPH  C2 AHB1 GRP1 PERIPH
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA1         RCC_C2AHB1ENR_DMA1EN
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA2         RCC_C2AHB1ENR_DMA2EN
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMAMUX1      RCC_C2AHB1ENR_DMAMUX1EN
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_CRC          RCC_C2AHB1ENR_CRCEN
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB2_GRP1_PERIPH  C2 AHB2 GRP1 PERIPH
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOA        RCC_C2AHB2ENR_GPIOAEN
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOB        RCC_C2AHB2ENR_GPIOBEN
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOC        RCC_C2AHB2ENR_GPIOCEN
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOH        RCC_C2AHB2ENR_GPIOHEN
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB3_GRP1_PERIPH  C2 AHB3 GRP1 PERIPH
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_PKA          RCC_C2AHB3ENR_PKAEN
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_AES          RCC_C2AHB3ENR_AESEN
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_RNG          RCC_C2AHB3ENR_RNGEN
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_HSEM         RCC_C2AHB3ENR_HSEMEN
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_IPCC         RCC_C2AHB3ENR_IPCCEN
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_FLASH        RCC_C2AHB3ENR_FLASHEN
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM1        RCC_C2AHB3SMENR_SRAM1SMEN
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM2        RCC_C2AHB3SMENR_SRAM2SMEN
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP1_PERIPH  C2 APB1 GRP1 PERIPH
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_TIM2         RCC_C2APB1ENR1_TIM2EN
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_RTCAPB       RCC_C2APB1ENR1_RTCAPBEN
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_SPI2         RCC_C2APB1ENR1_SPI2EN
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_USART2       RCC_C2APB1ENR1_USART2EN
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C1         RCC_C2APB1ENR1_I2C1EN
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 8


 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C2         RCC_C2APB1ENR1_I2C2EN
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C3         RCC_C2APB1ENR1_I2C3EN
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_DAC          RCC_C2APB1ENR1_DACEN
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_LPTIM1       RCC_C2APB1ENR1_LPTIM1EN
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP2_PERIPH  C2 APB1 GRP2 PERIPH
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPUART1      RCC_C2APB1ENR2_LPUART1EN
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM2       RCC_C2APB1ENR2_LPTIM2EN
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM3       RCC_C2APB1ENR2_LPTIM3EN
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB2_GRP1_PERIPH  C2 APB2 GRP1 PERIPH
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_ADC          RCC_C2APB2ENR_ADCEN
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM1         RCC_C2APB2ENR_TIM1EN
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_SPI1         RCC_C2APB2ENR_SPI1EN
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_USART1       RCC_C2APB2ENR_USART1EN
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM16        RCC_C2APB2ENR_TIM16EN
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM17        RCC_C2APB2ENR_TIM17EN
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB3_GRP1_PERIPH  C2 APB3 GRP1 PERIPH
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB3_GRP1_PERIPH_SUBGHZSPI    RCC_C2APB3ENR_SUBGHZSPIEN
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 9


 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_EnableClock\n
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock\n
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_IsEnabledClock\n
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_DisableClock\n
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock\n
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 10


 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST    LL_AHB1_GRP1_ForceReset\n
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ReleaseReset\n
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_EnableClockSleep\n
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 11


 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1SMENR, Periphs);
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1SMENR, Periphs);
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_IsEnabledClockSleep\n
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_IsEnabledClockSleep
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_DisableClockSleep\n
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1SMENR, Periphs);
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_EnableClock\n
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_EnableClock\n
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_EnableClock\n
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_EnableClock\n
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 12


 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled or not
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_IsEnabledClock\n
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_IsEnabledClock\n
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_IsEnabledClock\n
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_IsEnabledClock\n
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClock(uint32_t Periphs)
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock.
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_DisableClock\n
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_DisableClock\n
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_DisableClock\n
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_DisableClock\n
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2ENR, Periphs);
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB2 peripherals reset.
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ForceReset\n
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ForceReset\n
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ForceReset\n
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ForceReset
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 13


 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ForceReset(uint32_t Periphs)
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2RSTR, Periphs);
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB2 peripherals reset.
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ReleaseReset\n
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ReleaseReset\n
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ReleaseReset\n
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ReleaseReset\n
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ReleaseReset(uint32_t Periphs)
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2RSTR, Periphs);
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock during Low Power (Sleep) mode.
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_EnableClockSleep\n
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClockSleep(uint32_t Periphs)
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2SMENR, Periphs);
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2SMENR, Periphs);
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 14


 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_IsEnabledClockSleep
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock during Low Power (Sleep) mode.
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_DisableClockSleep\n
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClockSleep(uint32_t Periphs)
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2SMENR, Periphs);
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB3 AHB3
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_EnableClock\n
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_EnableClock\n
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_EnableClock\n
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_EnableClock\n
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_EnableClock\n
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_EnableClock
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 15


 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_EnableClock\n
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_EnableClock\n
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_EnableClock\n
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_EnableClock\n
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_EnableClock
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClock(uint32_t Periphs)
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3ENR, Periphs);
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_IsEnabledClock\n
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_IsEnabledClock\n
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_IsEnabledClock\n
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_IsEnabledClock\n
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_IsEnabledClock\n
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_IsEnabledClock
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_IsEnabledClock\n
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_IsEnabledClock\n
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_IsEnabledClock\n
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_IsEnabledClock\n
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_IsEnabledClock
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 16


 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClock(uint32_t Periphs)
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_DisableClock\n
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_DisableClock\n
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_DisableClock\n
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_DisableClock\n
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_DisableClock\n
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_DisableClock
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_DisableClock\n
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_DisableClock\n
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_DisableClock\n
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_DisableClock\n
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_DisableClock
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClock(uint32_t Periphs)
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3ENR, Periphs);
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 17


 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ForceReset\n
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ForceReset\n
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ForceReset\n
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ForceReset\n
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     IPCCRST       LL_AHB3_GRP1_ForceReset\n
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ForceReset
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ForceReset\n
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ForceReset\n
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ForceReset\n
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ForceReset\n
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ForceReset
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ForceReset(uint32_t Periphs)
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3RSTR, Periphs);
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ReleaseReset\n
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ReleaseReset\n
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ReleaseReset\n
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ReleaseReset\n
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     IPCCRST       LL_AHB3_GRP1_ReleaseReset\n
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ReleaseReset
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 18


 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ReleaseReset\n
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ReleaseReset\n
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ReleaseReset\n
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ReleaseReset\n
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ReleaseReset
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ReleaseReset(uint32_t Periphs)
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3RSTR, Periphs);
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock during Low Power (Sleep) mode.
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_EnableClockSleep\n
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_EnableClockSleep\n
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_EnableClockSleep\n
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_EnableClockSleep\n
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_EnableClockSleep\n
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_EnableClockSleep
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClockSleep(uint32_t Periphs)
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3SMENR, Periphs);
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3SMENR, Periphs);
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 19


 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB3_GRP1_IsEnabledClockSleep\n
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_IsEnabledClockSleep\n
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_IsEnabledClockSleep
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock during Low Power (Sleep) mode.
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_DisableClockSleep\n
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_DisableClockSleep\n
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_DisableClockSleep\n
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM1SMEN     LL_AHB3_GRP1_DisableClockSleep\n
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_DisableClockSleep\n
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_DisableClockSleep
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClockSleep(uint32_t Periphs)
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3SMENR, Periphs);
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_EnableClock\n
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_EnableClock\n
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_EnableClock\n
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_EnableClock\n
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_EnableClock\n
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_EnableClock\n
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_EnableClock\n
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_EnableClock\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 20


 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     DACEN         LL_APB1_GRP1_EnableClock\n
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_EnableClock
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1ENR1, Periphs);
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_EnableClock\n
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_EnableClock
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM3EN      LL_APB1_GRP2_EnableClock
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1ENR2, Periphs);
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR2, Periphs);
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_IsEnabledClock\n
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 21


 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR1, Periphs) == (Periphs)) ? 1UL : 0UL);
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_IsEnabledClock\n
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_IsEnabledClock
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM3EN      LL_APB1_GRP2_IsEnabledClock
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP2_IsEnabledClock(uint32_t Periphs)
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR2, Periphs) == (Periphs)) ? 1UL : 0UL);
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_DisableClock\n
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_DisableClock\n
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_DisableClock\n
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_DisableClock\n
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_DisableClock\n
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_DisableClock\n
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_DisableClock\n
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     DACEN         LL_APB1_GRP1_DisableClock\n
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_DisableClock
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 22


1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR1, Periphs);
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_DisableClock\n
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_DisableClock
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR2     LPTIM3EN      LL_APB1_GRP2_DisableClock
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClock(uint32_t Periphs)
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR2, Periphs);
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1RSTR1    TIM2RST       LL_APB1_GRP1_ForceReset\n
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    SPI2RST       LL_APB1_GRP1_ForceReset\n
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    USART2RST     LL_APB1_GRP1_ForceReset\n
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C1RST       LL_APB1_GRP1_ForceReset\n
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C2RST       LL_APB1_GRP1_ForceReset\n
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C3RST       LL_APB1_GRP1_ForceReset\n
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    DACRST        LL_APB1_GRP1_ForceReset\n
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    LPTIM1RST     LL_APB1_GRP1_ForceReset
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
  62              		.loc 2 1062 22 view .LVU13
  63              	.LBB33:
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR1, Periphs);
  64              		.loc 2 1064 3 view .LVU14
  65 0016 4FF0B043 		mov	r3, #1476395008
  66 001a 9A6B     		ldr	r2, [r3, #56]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 23


  67 001c 42F40012 		orr	r2, r2, #2097152
  68 0020 9A63     		str	r2, [r3, #56]
  69              	.LVL3:
  70              		.loc 2 1064 3 is_stmt 0 view .LVU15
  71              	.LBE33:
  72              	.LBE32:
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   }
  73              		.loc 1 99 5 is_stmt 1 view .LVU16
  74              	.LBB34:
  75              	.LBI34:
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1RSTR2    LPUART1RST    LL_APB1_GRP2_ForceReset\n
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR2    LPTIM2RST     LL_APB1_GRP2_ForceReset
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR2    LPTIM3RST     LL_APB1_GRP2_ForceReset
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ForceReset(uint32_t Periphs)
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR2, Periphs);
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1RSTR1    TIM2RST       LL_APB1_GRP1_ReleaseReset\n
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    SPI2RST       LL_APB1_GRP1_ReleaseReset\n
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    DACRST        LL_APB1_GRP1_ReleaseReset\n
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C1RST       LL_APB1_GRP1_ReleaseReset\n
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C2RST       LL_APB1_GRP1_ReleaseReset\n
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    I2C3RST       LL_APB1_GRP1_ReleaseReset\n
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    DACRST        LL_APB1_GRP1_ReleaseReset\n
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1RSTR1    LPTIM1RST     LL_APB1_GRP1_ReleaseReset
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
  76              		.loc 2 1107 22 view .LVU17
  77              	.LBB35:
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR1, Periphs);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 24


  78              		.loc 2 1109 3 view .LVU18
  79 0022 9A6B     		ldr	r2, [r3, #56]
  80 0024 22F40012 		bic	r2, r2, #2097152
  81 0028 9A63     		str	r2, [r3, #56]
  82              	.LBE35:
  83              	.LBE34:
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  84              		.loc 1 88 15 is_stmt 0 view .LVU19
  85 002a 0120     		movs	r0, #1
  86              	.LVL4:
  87              	.LBB37:
  88              	.LBB36:
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
  89              		.loc 2 1110 1 view .LVU20
  90 002c 7047     		bx	lr
  91              	.LVL5:
  92              	.L7:
  93              		.loc 2 1110 1 view .LVU21
  94              	.LBE36:
  95              	.LBE37:
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
  96              		.loc 1 104 5 is_stmt 1 view .LVU22
  97              	.LBB38:
  98              	.LBI38:
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
  99              		.loc 2 1062 22 view .LVU23
 100              	.LBB39:
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 101              		.loc 2 1064 3 view .LVU24
 102 002e 4FF0B043 		mov	r3, #1476395008
 103 0032 9A6B     		ldr	r2, [r3, #56]
 104 0034 42F48002 		orr	r2, r2, #4194304
 105 0038 9A63     		str	r2, [r3, #56]
 106              	.LVL6:
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 107              		.loc 2 1064 3 is_stmt 0 view .LVU25
 108              	.LBE39:
 109              	.LBE38:
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 110              		.loc 1 107 5 is_stmt 1 view .LVU26
 111              	.LBB40:
 112              	.LBI40:
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 113              		.loc 2 1107 22 view .LVU27
 114              	.LBB41:
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 115              		.loc 2 1109 3 view .LVU28
 116 003a 9A6B     		ldr	r2, [r3, #56]
 117 003c 22F48002 		bic	r2, r2, #4194304
 118 0040 9A63     		str	r2, [r3, #56]
 119              	.LBE41:
 120              	.LBE40:
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 121              		.loc 1 88 15 is_stmt 0 view .LVU29
 122 0042 0120     		movs	r0, #1
 123              	.LVL7:
 124              	.LBB43:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 25


 125              	.LBB42:
 126              		.loc 2 1110 1 view .LVU30
 127 0044 7047     		bx	lr
 128              	.LVL8:
 129              	.L8:
 130              		.loc 2 1110 1 view .LVU31
 131              	.LBE42:
 132              	.LBE43:
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 133              		.loc 1 113 5 is_stmt 1 view .LVU32
 134              	.LBB44:
 135              	.LBI44:
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 136              		.loc 2 1062 22 view .LVU33
 137              	.LBB45:
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 138              		.loc 2 1064 3 view .LVU34
 139 0046 4FF0B043 		mov	r3, #1476395008
 140 004a 9A6B     		ldr	r2, [r3, #56]
 141 004c 42F40002 		orr	r2, r2, #8388608
 142 0050 9A63     		str	r2, [r3, #56]
 143              	.LVL9:
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 144              		.loc 2 1064 3 is_stmt 0 view .LVU35
 145              	.LBE45:
 146              	.LBE44:
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   }
 147              		.loc 1 116 5 is_stmt 1 view .LVU36
 148              	.LBB46:
 149              	.LBI46:
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 150              		.loc 2 1107 22 view .LVU37
 151              	.LBB47:
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 152              		.loc 2 1109 3 view .LVU38
 153 0052 9A6B     		ldr	r2, [r3, #56]
 154 0054 22F40002 		bic	r2, r2, #8388608
 155 0058 9A63     		str	r2, [r3, #56]
 156              	.LBE47:
 157              	.LBE46:
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 158              		.loc 1 88 15 is_stmt 0 view .LVU39
 159 005a 0120     		movs	r0, #1
 160              	.LVL10:
 161              	.LBB49:
 162              	.LBB48:
 163              		.loc 2 1110 1 view .LVU40
 164 005c 7047     		bx	lr
 165              	.L10:
 166 005e 00BF     		.align	2
 167              	.L9:
 168 0060 00540040 		.word	1073763328
 169 0064 00580040 		.word	1073764352
 170 0068 005C0040 		.word	1073765376
 171              	.LBE48:
 172              	.LBE49:
 173              		.cfi_endproc
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 26


 174              	.LFE978:
 176              		.section	.text.LL_I2C_Init,"ax",%progbits
 177              		.align	1
 178              		.global	LL_I2C_Init
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	LL_I2C_Init:
 185              	.LVL11:
 186              	.LFB979:
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /**
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @brief  Initialize the I2C registers according to the specified parameters in I2C_InitStruct.
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @param  I2Cx I2C Instance.
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @param  I2C_InitStruct pointer to a @ref LL_I2C_InitTypeDef structure.
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @retval An ErrorStatus enumeration value:
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   *          - SUCCESS: I2C registers are initialized
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   *          - ERROR: Not applicable
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** ErrorStatus LL_I2C_Init(I2C_TypeDef *I2Cx, LL_I2C_InitTypeDef *I2C_InitStruct)
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** {
 187              		.loc 1 135 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192              		.loc 1 135 1 is_stmt 0 view .LVU42
 193 0000 10B4     		push	{r4}
 194              		.cfi_def_cfa_offset 4
 195              		.cfi_offset 4, -4
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /* Check the I2C Instance I2Cx */
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(I2Cx));
 196              		.loc 1 137 3 is_stmt 1 view .LVU43
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /* Check the I2C parameters from I2C_InitStruct */
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   assert_param(IS_LL_I2C_PERIPHERAL_MODE(I2C_InitStruct->PeripheralMode));
 197              		.loc 1 140 3 view .LVU44
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   assert_param(IS_LL_I2C_ANALOG_FILTER(I2C_InitStruct->AnalogFilter));
 198              		.loc 1 141 3 view .LVU45
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   assert_param(IS_LL_I2C_DIGITAL_FILTER(I2C_InitStruct->DigitalFilter));
 199              		.loc 1 142 3 view .LVU46
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   assert_param(IS_LL_I2C_OWN_ADDRESS1(I2C_InitStruct->OwnAddress1));
 200              		.loc 1 143 3 view .LVU47
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   assert_param(IS_LL_I2C_TYPE_ACKNOWLEDGE(I2C_InitStruct->TypeAcknowledge));
 201              		.loc 1 144 3 view .LVU48
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   assert_param(IS_LL_I2C_OWN_ADDRSIZE(I2C_InitStruct->OwnAddrSize));
 202              		.loc 1 145 3 view .LVU49
 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /* Disable the selected I2Cx Peripheral */
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   LL_I2C_Disable(I2Cx);
 203              		.loc 1 148 3 view .LVU50
 204              	.LVL12:
 205              	.LBB50:
 206              	.LBI50:
 207              		.file 3 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 27


   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @file    stm32wlxx_ll_i2c.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief   Header file of I2C LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #ifndef STM32WLxx_LL_I2C_H
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define STM32WLxx_LL_I2C_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #ifdef __cplusplus
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** extern "C" {
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #endif
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #include "stm32wlxx.h"
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @addtogroup STM32WLxx_LL_Driver
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #if defined (I2C1) || defined (I2C2) || defined (I2C3)
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL I2C
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Constants I2C Private Constants
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Macros I2C Private Macros
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 28


  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Exported types ------------------------------------------------------------*/
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_ES_INIT I2C Exported Init structure
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** typedef struct
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t PeripheralMode;      /*!< Specifies the peripheral mode.
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_PERIPHERAL_MOD
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetMode(). */
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t Timing;              /*!< Specifies the SDA setup, hold time and the SCL high, low perio
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter must be set by referring to the STM32CubeMX Too
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      the helper macro @ref __LL_I2C_CONVERT_TIMINGS().
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetTiming(). */
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t AnalogFilter;        /*!< Enables or disables analog noise filter.
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_ANALOGFILTER_S
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_EnableAnalogFilter() or LL_I2C_DisableAnalogFilter
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t DigitalFilter;       /*!< Configures the digital noise filter.
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a number between Min_Data = 0x00 and Max
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetDigitalFilter(). */
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t OwnAddress1;         /*!< Specifies the device own address 1.
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter must be a value between Min_Data = 0x00 and Max
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t TypeAcknowledge;     /*!< Specifies the ACKnowledge or Non ACKnowledge condition after t
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      match code or next received byte.
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_I2C_ACKNOWLEDG
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_AcknowledgeNextData(). */
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t OwnAddrSize;         /*!< Specifies the device own address 1 size (7-bit or 10-bit).
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_OWNADDRESS1.
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** } LL_I2C_InitTypeDef;
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 29


 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Exported constants --------------------------------------------------------*/
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Constants I2C Exported Constants
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_CLEAR_FLAG Clear Flags Defines
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_WriteReg function
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_ADDRCF                   I2C_ICR_ADDRCF          /*!< Address Matched flag   */
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_NACKCF                   I2C_ICR_NACKCF          /*!< Not Acknowledge flag   */
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_STOPCF                   I2C_ICR_STOPCF          /*!< Stop detection flag    */
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_BERRCF                   I2C_ICR_BERRCF          /*!< Bus error flag         */
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_ARLOCF                   I2C_ICR_ARLOCF          /*!< Arbitration Lost flag  */
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_OVRCF                    I2C_ICR_OVRCF           /*!< Overrun/Underrun flag  */
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_PECCF                    I2C_ICR_PECCF           /*!< PEC error flag         */
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_TIMOUTCF                 I2C_ICR_TIMOUTCF        /*!< Timeout detection flag */
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_ALERTCF                  I2C_ICR_ALERTCF         /*!< Alert flag             */
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GET_FLAG Get Flags Defines
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_ReadReg function
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TXE                      I2C_ISR_TXE             /*!< Transmit data register emp
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TXIS                     I2C_ISR_TXIS            /*!< Transmit interrupt status 
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_RXNE                     I2C_ISR_RXNE            /*!< Receive data register not 
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_ADDR                     I2C_ISR_ADDR            /*!< Address matched (slave mod
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_NACKF                    I2C_ISR_NACKF           /*!< Not Acknowledge received f
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_STOPF                    I2C_ISR_STOPF           /*!< Stop detection flag       
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TC                       I2C_ISR_TC              /*!< Transfer Complete (master 
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TCR                      I2C_ISR_TCR             /*!< Transfer Complete Reload  
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_BERR                     I2C_ISR_BERR            /*!< Bus error                 
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_ARLO                     I2C_ISR_ARLO            /*!< Arbitration lost          
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_OVR                      I2C_ISR_OVR             /*!< Overrun/Underrun (slave mo
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_PECERR                   I2C_ISR_PECERR          /*!< PEC Error in reception (SM
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TIMEOUT                  I2C_ISR_TIMEOUT         /*!< Timeout detection flag (SM
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_ALERT                    I2C_ISR_ALERT           /*!< SMBus alert (SMBus mode)  
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_BUSY                     I2C_ISR_BUSY            /*!< Bus busy                  
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_IT IT Defines
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief    IT defines which can be used with LL_I2C_ReadReg and  LL_I2C_WriteReg functions
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_TXIE                     I2C_CR1_TXIE            /*!< TX Interrupt enable       
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_RXIE                     I2C_CR1_RXIE            /*!< RX Interrupt enable       
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_ADDRIE                   I2C_CR1_ADDRIE          /*!< Address match Interrupt en
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_NACKIE                   I2C_CR1_NACKIE          /*!< Not acknowledge received I
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_STOPIE                   I2C_CR1_STOPIE          /*!< STOP detection Interrupt e
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_TCIE                     I2C_CR1_TCIE            /*!< Transfer Complete interrup
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_ERRIE                    I2C_CR1_ERRIE           /*!< Error interrupts enable   
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 30


 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_PERIPHERAL_MODE Peripheral Mode
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_I2C                    0x00000000U              /*!< I2C Master or Slave mode  
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_HOST             I2C_CR1_SMBHEN           /*!< SMBus Host address acknowl
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE           0x00000000U              /*!< SMBus Device default mode
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                          (Default address not ackno
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE_ARP       I2C_CR1_SMBDEN           /*!< SMBus Device Default addre
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ANALOGFILTER_SELECTION Analog Filter Selection
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_ENABLE          0x00000000U             /*!< Analog filter is enabled. 
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_DISABLE         I2C_CR1_ANFOFF          /*!< Analog filter is disabled.
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRESSING_MODE Master Addressing Mode
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_7BIT         0x00000000U              /*!< Master operates in 7-bit 
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_10BIT        I2C_CR2_ADD10            /*!< Master operates in 10-bit
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS1 Own Address 1 Length
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_7BIT             0x00000000U             /*!< Own address 1 is a 7-bit a
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_10BIT            I2C_OAR1_OA1MODE        /*!< Own address 1 is a 10-bit 
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS2 Own Address 2 Masks
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_NOMASK           I2C_OAR2_OA2NOMASK      /*!< Own Address2 No mask.     
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK01           I2C_OAR2_OA2MASK01      /*!< Only Address2 bits[7:2] ar
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK02           I2C_OAR2_OA2MASK02      /*!< Only Address2 bits[7:3] ar
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK03           I2C_OAR2_OA2MASK03      /*!< Only Address2 bits[7:4] ar
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK04           I2C_OAR2_OA2MASK04      /*!< Only Address2 bits[7:5] ar
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK05           I2C_OAR2_OA2MASK05      /*!< Only Address2 bits[7:6] ar
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK06           I2C_OAR2_OA2MASK06      /*!< Only Address2 bits[7] are 
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK07           I2C_OAR2_OA2MASK07      /*!< No comparison is done.
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                          All Address2 are acknowled
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 31


 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_I2C_ACKNOWLEDGE Acknowledge Generation
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ACK                          0x00000000U              /*!< ACK is sent after current
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_NACK                         I2C_CR2_NACK             /*!< NACK is sent after curren
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRSLAVE Slave Address Length
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_7BIT               0x00000000U              /*!< Slave Address in 7-bit. *
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_10BIT              I2C_CR2_ADD10            /*!< Slave Address in 10-bit.*
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_REQUEST Transfer Request Direction
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_REQUEST_WRITE                0x00000000U              /*!< Master request a write tr
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_REQUEST_READ                 I2C_CR2_RD_WRN           /*!< Master request a read tra
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_MODE Transfer End Mode
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_RELOAD                  I2C_CR2_RELOAD           /*!< Enable I2C Reload mode.  
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_AUTOEND                 I2C_CR2_AUTOEND          /*!< Enable I2C Automatic end 
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with no HW PEC comparison
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SOFTEND                 0x00000000U              /*!< Enable I2C Software end m
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with no HW PEC comparison
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_RELOAD            LL_I2C_MODE_RELOAD       /*!< Enable SMBUS Automatic en
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC    LL_I2C_MODE_AUTOEND      /*!< Enable SMBUS Automatic en
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC    LL_I2C_MODE_SOFTEND      /*!< Enable SMBUS Software end
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_AUTOEND | I2C_CR2_PECBYTE)
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Enable SMBUS Automatic end mode with HW PEC comparison.   */
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_SOFTEND | I2C_CR2_PECBYTE)
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Enable SMBUS Software end mode with HW PEC comparison.    */
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GENERATE Start And Stop Generation
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_NOSTARTSTOP         0x00000000U
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Don't Generate Stop and Start condition. */
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_STOP                (uint32_t)(0x80000000U | I2C_CR2_STOP)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 32


 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Stop condition (Size should be set to 0).      */
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_START_READ          (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Start for read request. */
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_START_WRITE         (uint32_t)(0x80000000U | I2C_CR2_START)
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Start for write request. */
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_READ   (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Restart for read request, slave 7Bit address.  */
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_WRITE  (uint32_t)(0x80000000U | I2C_CR2_START)
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Restart for write request, slave 7Bit address. */
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_READ  (uint32_t)(0x80000000U | I2C_CR2_START | \
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                        I2C_CR2_RD_WRN | I2C_CR2_HEAD10R)
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Restart for read request, slave 10Bit address. */
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_WRITE (uint32_t)(0x80000000U | I2C_CR2_START)
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Restart for write request, slave 10Bit address.*/
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DIRECTION Read Write Direction
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_DIRECTION_WRITE              0x00000000U              /*!< Write transfer request by
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           slave enters receiver mod
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_DIRECTION_READ               I2C_ISR_DIR              /*!< Read transfer request by 
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           slave enters transmitter 
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DMA_REG_DATA DMA Register Data
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_TRANSMIT        0x00000000U              /*!< Get address of data regis
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           transmission */
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_RECEIVE         0x00000001U              /*!< Get address of data regis
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           reception */
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUTA_MODE SMBus TimeoutA Mode SCL SDA Timeout
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW      0x00000000U          /*!< TimeoutA is used to detec
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           SCL low level timeout.   
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH I2C_TIMEOUTR_TIDLE   /*!< TimeoutA is used to detec
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           both SCL and SDA high lev
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUT_SELECTION SMBus Timeout Selection
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA               I2C_TIMEOUTR_TIMOUTEN                 /*!< TimeoutA ena
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTB               I2C_TIMEOUTR_TEXTEN                   /*!< TimeoutB (ex
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                                        enable bit  
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 33


 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_ALL_TIMEOUT            (uint32_t)(I2C_TIMEOUTR_TIMOUTEN | \
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                        I2C_TIMEOUTR_TEXTEN)       /*!< TimeoutA and
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** (extended clock) enable bits */
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Exported macro ------------------------------------------------------------*/
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Macros I2C Exported Macros
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EM_WRITE_READ Common Write and read registers Macros
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Write a value in I2C register
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __REG__ Register to be written
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __VALUE__ Value to be written in the register
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Read a value in I2C register
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __REG__ Register to be read
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Register value
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EM_CONVERT_TIMINGS Convert SDA SCL timings
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __PRESCALER__ This parameter must be a value between  Min_Data=0 and Max_Data=0xF.
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __SETUP_TIME__ This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                            (tscldel = (SCLDEL+1)xtpresc)
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __HOLD_TIME__  This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                            (tsdadel = SDADELxtpresc)
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __SCLH_PERIOD__ This parameter must be a value between Min_Data=0 and Max_Data=0xFF.
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                             (tsclh = (SCLH+1)xtpresc)
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __SCLL_PERIOD__ This parameter must be a value between  Min_Data=0 and Max_Data=0xFF.
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                             (tscll = (SCLL+1)xtpresc)
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFFFFFFF
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define __LL_I2C_CONVERT_TIMINGS(__PRESCALER__, __SETUP_TIME__, __HOLD_TIME__, __SCLH_PERIOD__, __S
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 34


 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   ((((uint32_t)(__PRESCALER__)    << I2C_TIMINGR_PRESC_Pos)  & I2C_TIMINGR_PRESC)   | \
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****    (((uint32_t)(__SETUP_TIME__)   << I2C_TIMINGR_SCLDEL_Pos) & I2C_TIMINGR_SCLDEL)  | \
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****    (((uint32_t)(__HOLD_TIME__)    << I2C_TIMINGR_SDADEL_Pos) & I2C_TIMINGR_SDADEL)  | \
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****    (((uint32_t)(__SCLH_PERIOD__)  << I2C_TIMINGR_SCLH_Pos)   & I2C_TIMINGR_SCLH)    | \
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****    (((uint32_t)(__SCLL_PERIOD__)  << I2C_TIMINGR_SCLL_Pos)   & I2C_TIMINGR_SCLL))
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Exported functions --------------------------------------------------------*/
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Functions I2C Exported Functions
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Configuration Configuration
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable I2C peripheral (PE = 1).
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Enable
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Enable(I2C_TypeDef *I2Cx)
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PE);
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable I2C peripheral (PE = 0).
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   When PE = 0, the I2C SCL and SDA lines are released.
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Internal state machines and status bits are put back to their reset value.
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         When cleared, PE must be kept low for at least 3 APB clock cycles.
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Disable
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Disable(I2C_TypeDef *I2Cx)
 208              		.loc 3 443 22 view .LVU51
 209              	.LBB51:
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PE);
 210              		.loc 3 445 3 view .LVU52
 211 0002 0368     		ldr	r3, [r0]
 212 0004 23F00103 		bic	r3, r3, #1
 213 0008 0360     		str	r3, [r0]
 214              	.LVL13:
 215              		.loc 3 445 3 is_stmt 0 view .LVU53
 216              	.LBE51:
 217              	.LBE50:
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ------------------------
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 35


 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * Configure the analog and digital noise filters with parameters :
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * - AnalogFilter: I2C_CR1_ANFOFF bit
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * - DigitalFilter: I2C_CR1_DNF[3:0] bits
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    */
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   LL_I2C_ConfigFilters(I2Cx, I2C_InitStruct->AnalogFilter, I2C_InitStruct->DigitalFilter);
 218              		.loc 1 155 3 is_stmt 1 view .LVU54
 219 000a 8A68     		ldr	r2, [r1, #8]
 220              	.LVL14:
 221              	.LBB52:
 222              	.LBI52:
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if the I2C peripheral is enabled or disabled.
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_IsEnabled
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabled(I2C_TypeDef *I2Cx)
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PE) == (I2C_CR1_PE)) ? 1UL : 0UL);
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure Noise Filters (Analog and Digital).
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         The filters can only be programmed when the I2C is disabled (PE = 0).
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_ConfigFilters\n
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         CR1          DNF           LL_I2C_ConfigFilters
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  AnalogFilter This parameter can be one of the following values:
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_ENABLE
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_DISABLE
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigFilters(I2C_TypeDef *I2Cx, uint32_t AnalogFilter, uint32_t Digita
 223              		.loc 3 475 22 view .LVU55
 224              	.LBB53:
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_ANFOFF | I2C_CR1_DNF, AnalogFilter | (DigitalFilter << I2C_CR1_DNF_
 225              		.loc 3 477 3 view .LVU56
 226 000c 0368     		ldr	r3, [r0]
 227 000e 23F4F853 		bic	r3, r3, #7936
 228 0012 CC68     		ldr	r4, [r1, #12]
 229 0014 42EA0422 		orr	r2, r2, r4, lsl #8
 230              	.LVL15:
 231              		.loc 3 477 3 is_stmt 0 view .LVU57
 232 0018 1343     		orrs	r3, r3, r2
 233 001a 0360     		str	r3, [r0]
 234              	.LVL16:
 235              		.loc 3 477 3 view .LVU58
 236              	.LBE53:
 237              	.LBE52:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 36


 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration --------------------
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * Configure the SDA setup, hold time and the SCL high, low period with parameter :
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * - Timing: I2C_TIMINGR_PRESC[3:0], I2C_TIMINGR_SCLDEL[3:0], I2C_TIMINGR_SDADEL[3:0],
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    *           I2C_TIMINGR_SCLH[7:0] and I2C_TIMINGR_SCLL[7:0] bits
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    */
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   LL_I2C_SetTiming(I2Cx, I2C_InitStruct->Timing);
 238              		.loc 1 162 3 is_stmt 1 view .LVU59
 239 001c 4B68     		ldr	r3, [r1, #4]
 240              	.LVL17:
 241              	.LBB54:
 242              	.LBI54:
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure Digital Noise Filter.
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         This filter can only be programmed when the I2C is disabled (PE = 0).
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_SetDigitalFilter
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetDigitalFilter(I2C_TypeDef *I2Cx, uint32_t DigitalFilter)
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_DNF, DigitalFilter << I2C_CR1_DNF_Pos);
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the current Digital Noise Filter configuration.
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_GetDigitalFilter
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDigitalFilter(I2C_TypeDef *I2Cx)
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_DNF) >> I2C_CR1_DNF_Pos);
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Analog Noise Filter.
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_EnableAnalogFilter
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAnalogFilter(I2C_TypeDef *I2Cx)
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Analog Noise Filter.
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 37


 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_DisableAnalogFilter
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAnalogFilter(I2C_TypeDef *I2Cx)
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Analog Noise Filter is enabled or disabled.
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_IsEnabledAnalogFilter
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAnalogFilter(I2C_TypeDef *I2Cx)
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ANFOFF) != (I2C_CR1_ANFOFF)) ? 1UL : 0UL);
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable DMA transmission requests.
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_EnableDMAReq_TX
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_TX(I2C_TypeDef *I2Cx)
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable DMA transmission requests.
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_DisableDMAReq_TX
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_TX(I2C_TypeDef *I2Cx)
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if DMA transmission requests are enabled or disabled.
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_IsEnabledDMAReq_TX
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_TX(I2C_TypeDef *I2Cx)
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN) == (I2C_CR1_TXDMAEN)) ? 1UL : 0UL);
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable DMA reception requests.
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_EnableDMAReq_RX
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 38


 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_RX(I2C_TypeDef *I2Cx)
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable DMA reception requests.
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_DisableDMAReq_RX
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_RX(I2C_TypeDef *I2Cx)
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if DMA reception requests are enabled or disabled.
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_IsEnabledDMAReq_RX
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_RX(I2C_TypeDef *I2Cx)
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN) == (I2C_CR1_RXDMAEN)) ? 1UL : 0UL);
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the data register address used for DMA transfer
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TXDR         TXDATA        LL_I2C_DMA_GetRegAddr\n
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         RXDR         RXDATA        LL_I2C_DMA_GetRegAddr
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  Direction This parameter can be one of the following values:
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_TRANSMIT
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_RECEIVE
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Address of data register
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_DMA_GetRegAddr(I2C_TypeDef *I2Cx, uint32_t Direction)
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t data_reg_addr;
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   if (Direction == LL_I2C_DMA_REG_DATA_TRANSMIT)
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   {
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****     /* return address of TXDR register */
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->TXDR);
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   }
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   else
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   {
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****     /* return address of RXDR register */
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->RXDR);
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   }
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return data_reg_addr;
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 39


 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Clock stretching.
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_EnableClockStretching
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableClockStretching(I2C_TypeDef *I2Cx)
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Clock stretching.
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_DisableClockStretching
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableClockStretching(I2C_TypeDef *I2Cx)
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Clock stretching is enabled or disabled.
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_IsEnabledClockStretching
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledClockStretching(I2C_TypeDef *I2Cx)
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH) != (I2C_CR1_NOSTRETCH)) ? 1UL : 0UL);
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable hardware byte control in slave mode.
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_EnableSlaveByteControl
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSlaveByteControl(I2C_TypeDef *I2Cx)
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_SBC);
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable hardware byte control in slave mode.
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_DisableSlaveByteControl
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSlaveByteControl(I2C_TypeDef *I2Cx)
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_SBC);
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 40


 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if hardware byte control in slave mode is enabled or disabled.
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_IsEnabledSlaveByteControl
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSlaveByteControl(I2C_TypeDef *I2Cx)
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_SBC) == (I2C_CR1_SBC)) ? 1UL : 0UL);
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Wakeup from STOP.
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when Digital Filter is disabled.
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_EnableWakeUpFromStop
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableWakeUpFromStop(I2C_TypeDef *I2Cx)
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Wakeup from STOP.
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_DisableWakeUpFromStop
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableWakeUpFromStop(I2C_TypeDef *I2Cx)
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Wakeup from STOP is enabled or disabled.
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_IsEnabledWakeUpFromStop
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledWakeUpFromStop(I2C_TypeDef *I2Cx)
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_WUPEN) == (I2C_CR1_WUPEN)) ? 1UL : 0UL);
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable General Call.
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   When enabled the Address 0x00 is ACKed.
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_EnableGeneralCall
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 41


 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableGeneralCall(I2C_TypeDef *I2Cx)
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable General Call.
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   When disabled the Address 0x00 is NACKed.
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_DisableGeneralCall
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableGeneralCall(I2C_TypeDef *I2Cx)
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if General Call is enabled or disabled.
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_IsEnabledGeneralCall
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledGeneralCall(I2C_TypeDef *I2Cx)
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_GCEN) == (I2C_CR1_GCEN)) ? 1UL : 0UL);
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the Master to operate in 7-bit or 10-bit addressing mode.
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Changing this bit is not allowed, when the START bit is set.
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_SetMasterAddressingMode
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  AddressingMode This parameter can be one of the following values:
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMasterAddressingMode(I2C_TypeDef *I2Cx, uint32_t AddressingMode)
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_ADD10, AddressingMode);
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the Master addressing mode.
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_GetMasterAddressingMode
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMasterAddressingMode(I2C_TypeDef *I2Cx)
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_ADD10));
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 42


 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Set the Own Address1.
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR1         OA1           LL_I2C_SetOwnAddress1\n
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         OAR1         OA1MODE       LL_I2C_SetOwnAddress1
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  OwnAddress1 This parameter must be a value between Min_Data=0 and Max_Data=0x3FF.
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  OwnAddrSize This parameter can be one of the following values:
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_7BIT
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_10BIT
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress1(I2C_TypeDef *I2Cx, uint32_t OwnAddress1, uint32_t OwnAdd
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR1, I2C_OAR1_OA1 | I2C_OAR1_OA1MODE, OwnAddress1 | OwnAddrSize);
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address1 match address.
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_EnableOwnAddress1
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress1(I2C_TypeDef *I2Cx)
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable acknowledge on Own Address1 match address.
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_DisableOwnAddress1
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress1(I2C_TypeDef *I2Cx)
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_IsEnabledOwnAddress1
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress1(I2C_TypeDef *I2Cx)
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN) == (I2C_OAR1_OA1EN)) ? 1UL : 0UL);
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Set the 7bits Own Address2.
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This action has no effect if own address2 is enabled.
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR2         OA2           LL_I2C_SetOwnAddress2\n
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         OAR2         OA2MSK        LL_I2C_SetOwnAddress2
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  OwnAddress2 Value between Min_Data=0 and Max_Data=0x7F.
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  OwnAddrMask This parameter can be one of the following values:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 43


 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_NOMASK
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK01
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK02
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK03
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK04
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK05
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK06
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK07
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress2(I2C_TypeDef *I2Cx, uint32_t OwnAddress2, uint32_t OwnAdd
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR2, I2C_OAR2_OA2 | I2C_OAR2_OA2MSK, OwnAddress2 | OwnAddrMask);
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address2 match address.
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_EnableOwnAddress2
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress2(I2C_TypeDef *I2Cx)
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable  acknowledge on Own Address2 match address.
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_DisableOwnAddress2
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress2(I2C_TypeDef *I2Cx)
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_IsEnabledOwnAddress2
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress2(I2C_TypeDef *I2Cx)
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN) == (I2C_OAR2_OA2EN)) ? 1UL : 0UL);
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      TIMINGR       LL_I2C_SetTiming
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  Timing This parameter must be a value between Min_Data=0 and Max_Data=0xFFFFFFFF.
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This parameter is computed with the STM32CubeMX Tool.
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 44


 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTiming(I2C_TypeDef *I2Cx, uint32_t Timing)
 243              		.loc 3 922 22 view .LVU60
 244              	.LBB55:
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMINGR, Timing);
 245              		.loc 3 924 3 view .LVU61
 246 001e 0361     		str	r3, [r0, #16]
 247              	.LVL18:
 248              		.loc 3 924 3 is_stmt 0 view .LVU62
 249              	.LBE55:
 250              	.LBE54:
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /* Enable the selected I2Cx Peripheral */
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   LL_I2C_Enable(I2Cx);
 251              		.loc 1 165 3 is_stmt 1 view .LVU63
 252              	.LBB56:
 253              	.LBI56:
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 254              		.loc 3 429 22 view .LVU64
 255              	.LBB57:
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 256              		.loc 3 431 3 view .LVU65
 257 0020 0368     		ldr	r3, [r0]
 258 0022 43F00103 		orr	r3, r3, #1
 259 0026 0360     		str	r3, [r0]
 260              	.LVL19:
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 261              		.loc 3 431 3 is_stmt 0 view .LVU66
 262              	.LBE57:
 263              	.LBE56:
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration -----------------------
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * Disable, Configure and Enable I2Cx device own address 1 with parameters :
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * - OwnAddress1:  I2C_OAR1_OA1[9:0] bits
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * - OwnAddrSize:  I2C_OAR1_OA1MODE bit
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    */
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   LL_I2C_DisableOwnAddress1(I2Cx);
 264              		.loc 1 172 3 is_stmt 1 view .LVU67
 265              	.LBB58:
 266              	.LBI58:
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 267              		.loc 3 841 22 view .LVU68
 268              	.LBB59:
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 269              		.loc 3 843 3 view .LVU69
 270 0028 8368     		ldr	r3, [r0, #8]
 271 002a 23F40043 		bic	r3, r3, #32768
 272 002e 8360     		str	r3, [r0, #8]
 273              	.LVL20:
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 274              		.loc 3 843 3 is_stmt 0 view .LVU70
 275              	.LBE59:
 276              	.LBE58:
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   LL_I2C_SetOwnAddress1(I2Cx, I2C_InitStruct->OwnAddress1, I2C_InitStruct->OwnAddrSize);
 277              		.loc 1 173 3 is_stmt 1 view .LVU71
 278 0030 0A69     		ldr	r2, [r1, #16]
 279              	.LVL21:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 45


 280              	.LBB60:
 281              	.LBI60:
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 282              		.loc 3 819 22 view .LVU72
 283              	.LBB61:
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 284              		.loc 3 821 3 view .LVU73
 285 0032 8368     		ldr	r3, [r0, #8]
 286 0034 23F4FF63 		bic	r3, r3, #2040
 287 0038 23F00703 		bic	r3, r3, #7
 288 003c 8C69     		ldr	r4, [r1, #24]
 289 003e 2243     		orrs	r2, r2, r4
 290              	.LVL22:
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 291              		.loc 3 821 3 is_stmt 0 view .LVU74
 292 0040 1343     		orrs	r3, r3, r2
 293 0042 8360     		str	r3, [r0, #8]
 294              	.LVL23:
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 295              		.loc 3 821 3 view .LVU75
 296              	.LBE61:
 297              	.LBE60:
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /* OwnAdress1 == 0 is reserved for General Call address */
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   if (I2C_InitStruct->OwnAddress1 != 0U)
 298              		.loc 1 176 3 is_stmt 1 view .LVU76
 299              		.loc 1 176 21 is_stmt 0 view .LVU77
 300 0044 0B69     		ldr	r3, [r1, #16]
 301              		.loc 1 176 6 view .LVU78
 302 0046 1BB1     		cbz	r3, .L12
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   {
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****     LL_I2C_EnableOwnAddress1(I2Cx);
 303              		.loc 1 178 5 is_stmt 1 view .LVU79
 304              	.LVL24:
 305              	.LBB62:
 306              	.LBI62:
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 307              		.loc 3 830 22 view .LVU80
 308              	.LBB63:
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 309              		.loc 3 832 3 view .LVU81
 310 0048 8368     		ldr	r3, [r0, #8]
 311 004a 43F40043 		orr	r3, r3, #32768
 312 004e 8360     		str	r3, [r0, #8]
 313              	.LVL25:
 314              	.L12:
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 315              		.loc 3 832 3 is_stmt 0 view .LVU82
 316              	.LBE63:
 317              	.LBE62:
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   }
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /*---------------------------- I2Cx MODE Configuration -----------------------
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * Configure I2Cx peripheral mode with parameter :
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * - PeripheralMode: I2C_CR1_SMBDEN and I2C_CR1_SMBHEN bits
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    */
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   LL_I2C_SetMode(I2Cx, I2C_InitStruct->PeripheralMode);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 46


 318              		.loc 1 185 3 is_stmt 1 view .LVU83
 319 0050 0B68     		ldr	r3, [r1]
 320              	.LVL26:
 321              	.LBB64:
 322              	.LBI64:
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the Timing Prescaler setting.
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      PRESC         LL_I2C_GetTimingPrescaler
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTimingPrescaler(I2C_TypeDef *I2Cx)
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_PRESC) >> I2C_TIMINGR_PRESC_Pos);
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SCL low period setting.
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLL          LL_I2C_GetClockLowPeriod
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockLowPeriod(I2C_TypeDef *I2Cx)
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLL) >> I2C_TIMINGR_SCLL_Pos);
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SCL high period setting.
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLH          LL_I2C_GetClockHighPeriod
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockHighPeriod(I2C_TypeDef *I2Cx)
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLH) >> I2C_TIMINGR_SCLH_Pos);
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SDA hold time.
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      SDADEL        LL_I2C_GetDataHoldTime
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataHoldTime(I2C_TypeDef *I2Cx)
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SDADEL) >> I2C_TIMINGR_SDADEL_Pos);
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SDA setup time.
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLDEL        LL_I2C_GetDataSetupTime
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 47


 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataSetupTime(I2C_TypeDef *I2Cx)
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLDEL) >> I2C_TIMINGR_SCLDEL_Pos);
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure peripheral mode.
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_SetMode\n
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_SetMode
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  PeripheralMode This parameter can be one of the following values:
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMode(I2C_TypeDef *I2Cx, uint32_t PeripheralMode)
 323              		.loc 3 996 22 view .LVU84
 324              	.LBB65:
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN, PeripheralMode);
 325              		.loc 3 998 3 view .LVU85
 326 0052 0268     		ldr	r2, [r0]
 327 0054 22F44012 		bic	r2, r2, #3145728
 328 0058 1343     		orrs	r3, r3, r2
 329              	.LVL27:
 330              		.loc 3 998 3 is_stmt 0 view .LVU86
 331 005a 0360     		str	r3, [r0]
 332              	.LVL28:
 333              		.loc 3 998 3 view .LVU87
 334              	.LBE65:
 335              	.LBE64:
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ------------------------
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * Configure the ACKnowledge or Non ACKnowledge condition
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * after the address receive match code or next received byte with parameter :
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    * - TypeAcknowledge: I2C_CR2_NACK bit
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****    */
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   LL_I2C_AcknowledgeNextData(I2Cx, I2C_InitStruct->TypeAcknowledge);
 336              		.loc 1 192 3 is_stmt 1 view .LVU88
 337 005c 4B69     		ldr	r3, [r1, #20]
 338              	.LVL29:
 339              	.LBB66:
 340              	.LBI66:
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get peripheral mode.
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_GetMode\n
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_GetMode
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 48


1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMode(I2C_TypeDef *I2Cx)
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN));
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable SMBus alert (Host or Device mode)
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   SMBus Device mode:
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         - SMBus Alert pin is drived low and
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is enabled.
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Host mode:
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         - SMBus Alert pin management is supported.
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_EnableSMBusAlert
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusAlert(I2C_TypeDef *I2Cx)
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable SMBus alert (Host or Device mode)
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   SMBus Device mode:
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         - SMBus Alert pin is not drived (can be used as a standard GPIO) and
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is disabled.
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Host mode:
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         - SMBus Alert pin management is not supported.
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_DisableSMBusAlert
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusAlert(I2C_TypeDef *I2Cx)
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if SMBus alert (Host or Device mode) is enabled or disabled.
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_IsEnabledSMBusAlert
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusAlert(I2C_TypeDef *I2Cx)
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ALERTEN) == (I2C_CR1_ALERTEN)) ? 1UL : 0UL);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 49


1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable SMBus Packet Error Calculation (PEC).
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_EnableSMBusPEC
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusPEC(I2C_TypeDef *I2Cx)
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable SMBus Packet Error Calculation (PEC).
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_DisableSMBusPEC
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusPEC(I2C_TypeDef *I2Cx)
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if SMBus Packet Error Calculation (PEC) is enabled or disabled.
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_IsEnabledSMBusPEC
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusPEC(I2C_TypeDef *I2Cx)
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PECEN) == (I2C_CR1_PECEN)) ? 1UL : 0UL);
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SMBus Clock Timeout.
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This configuration can only be programmed when associated Timeout is disabled (TimeoutA
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_ConfigSMBusTimeout\n
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TIDLE         LL_I2C_ConfigSMBusTimeout\n
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TIMEOUTB      LL_I2C_ConfigSMBusTimeout
1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutB
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 50


1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t TimeoutA, uint32_t Timeo
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                uint32_t TimeoutB)
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA | I2C_TIMEOUTR_TIDLE | I2C_TIMEOUTR_TIMEOUTB,
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****              TimeoutA | TimeoutAMode | (TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos));
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SMBus Clock TimeoutA (SCL low timeout or SCL and SDA high timeout depends
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutA is disabled.
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_SetSMBusTimeoutA
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutA(I2C_TypeDef *I2Cx, uint32_t TimeoutA)
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutA);
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA setting.
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_GetSMBusTimeoutA
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutA(I2C_TypeDef *I2Cx)
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA));
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Set the SMBus Clock TimeoutA mode.
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when TimeoutA is disabled.
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_SetSMBusTimeoutAMode
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutAMode(I2C_TypeDef *I2Cx, uint32_t TimeoutAMode)
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutAMode);
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA mode.
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_GetSMBusTimeoutAMode
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 51


1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutAMode(I2C_TypeDef *I2Cx)
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIDLE));
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SMBus Extended Cumulative Clock TimeoutB (Master or Slave mode).
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutB is disabled.
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_SetSMBusTimeoutB
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutB This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutB(I2C_TypeDef *I2Cx, uint32_t TimeoutB)
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos);
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SMBus Extended Cumulative Clock TimeoutB setting.
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_GetSMBusTimeoutB
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutB(I2C_TypeDef *I2Cx)
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTB) >> I2C_TIMEOUTR_TIMEOUTB_Pos);
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable the SMBus Clock Timeout.
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_EnableSMBusTimeout\n
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_EnableSMBusTimeout
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 52


1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable the SMBus Clock Timeout.
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_DisableSMBusTimeout\n
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_DisableSMBusTimeout
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if the SMBus Clock Timeout is enabled or disabled.
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_IsEnabledSMBusTimeout\n
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_IsEnabledSMBusTimeout
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->TIMEOUTR, (I2C_TIMEOUTR_TIMOUTEN | I2C_TIMEOUTR_TEXTEN)) == \
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****            (ClockTimeout)) ? 1UL : 0UL);
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EF_IT_Management IT_Management
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable TXIS interrupt.
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_EnableIT_TX
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TX(I2C_TypeDef *I2Cx)
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable TXIS interrupt.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 53


1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_DisableIT_TX
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TX(I2C_TypeDef *I2Cx)
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if the TXIS Interrupt is enabled or disabled.
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_IsEnabledIT_TX
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TX(I2C_TypeDef *I2Cx)
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXIE) == (I2C_CR1_TXIE)) ? 1UL : 0UL);
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable RXNE interrupt.
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_EnableIT_RX
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_RX(I2C_TypeDef *I2Cx)
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable RXNE interrupt.
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_DisableIT_RX
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_RX(I2C_TypeDef *I2Cx)
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if the RXNE Interrupt is enabled or disabled.
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_IsEnabledIT_RX
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_RX(I2C_TypeDef *I2Cx)
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXIE) == (I2C_CR1_RXIE)) ? 1UL : 0UL);
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Address match interrupt (slave mode only).
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_EnableIT_ADDR
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 54


1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ADDR(I2C_TypeDef *I2Cx)
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Address match interrupt (slave mode only).
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_DisableIT_ADDR
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ADDR(I2C_TypeDef *I2Cx)
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Address match interrupt is enabled or disabled.
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_IsEnabledIT_ADDR
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ADDR(I2C_TypeDef *I2Cx)
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ADDRIE) == (I2C_CR1_ADDRIE)) ? 1UL : 0UL);
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Not acknowledge received interrupt.
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_EnableIT_NACK
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_NACK(I2C_TypeDef *I2Cx)
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Not acknowledge received interrupt.
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_DisableIT_NACK
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_NACK(I2C_TypeDef *I2Cx)
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Not acknowledge received interrupt is enabled or disabled.
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_IsEnabledIT_NACK
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 55


1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_NACK(I2C_TypeDef *I2Cx)
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NACKIE) == (I2C_CR1_NACKIE)) ? 1UL : 0UL);
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable STOP detection interrupt.
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_EnableIT_STOP
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_STOP(I2C_TypeDef *I2Cx)
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable STOP detection interrupt.
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_DisableIT_STOP
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_STOP(I2C_TypeDef *I2Cx)
1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if STOP detection interrupt is enabled or disabled.
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_IsEnabledIT_STOP
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_STOP(I2C_TypeDef *I2Cx)
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_STOPIE) == (I2C_CR1_STOPIE)) ? 1UL : 0UL);
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Transfer Complete interrupt.
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Transfer Complete (TC)
1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_EnableIT_TC
1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TC(I2C_TypeDef *I2Cx)
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Transfer Complete interrupt.
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Transfer Complete (TC)
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 56


1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_DisableIT_TC
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TC(I2C_TypeDef *I2Cx)
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Transfer Complete interrupt is enabled or disabled.
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_IsEnabledIT_TC
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TC(I2C_TypeDef *I2Cx)
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TCIE) == (I2C_CR1_TCIE)) ? 1UL : 0UL);
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Error interrupts.
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Bus Error detection (BERR)
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_EnableIT_ERR
1497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ERR(I2C_TypeDef *I2Cx)
1501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Error interrupts.
1507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Bus Error detection (BERR)
1512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_DisableIT_ERR
1517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ERR(I2C_TypeDef *I2Cx)
1521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 57


1522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Error interrupts are enabled or disabled.
1527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_IsEnabledIT_ERR
1528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ERR(I2C_TypeDef *I2Cx)
1532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ERRIE) == (I2C_CR1_ERRIE)) ? 1UL : 0UL);
1534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
1538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EF_FLAG_management FLAG_management
1541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
1542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Transmit data register empty flag.
1546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_IsActiveFlag_TXE
1549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXE(I2C_TypeDef *I2Cx)
1553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXE) == (I2C_ISR_TXE)) ? 1UL : 0UL);
1555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Transmit interrupt flag.
1559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TXIS          LL_I2C_IsActiveFlag_TXIS
1562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXIS(I2C_TypeDef *I2Cx)
1566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXIS) == (I2C_ISR_TXIS)) ? 1UL : 0UL);
1568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Receive data register not empty flag.
1572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: When Receive data register is read.
1573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When the received data is copied in Receive data register.
1574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          RXNE          LL_I2C_IsActiveFlag_RXNE
1575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_RXNE(I2C_TypeDef *I2Cx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 58


1579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_RXNE) == (I2C_ISR_RXNE)) ? 1UL : 0UL);
1581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Address matched flag (slave mode).
1585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When the received slave address matched with one of the enabled slave address.
1587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          ADDR          LL_I2C_IsActiveFlag_ADDR
1588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ADDR(I2C_TypeDef *I2Cx)
1592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ADDR) == (I2C_ISR_ADDR)) ? 1UL : 0UL);
1594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Not Acknowledge received flag.
1598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a NACK is received after a byte transmission.
1600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          NACKF         LL_I2C_IsActiveFlag_NACK
1601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_NACK(I2C_TypeDef *I2Cx)
1605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_NACKF) == (I2C_ISR_NACKF)) ? 1UL : 0UL);
1607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Stop detection flag.
1611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a Stop condition is detected.
1613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          STOPF         LL_I2C_IsActiveFlag_STOP
1614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_STOP(I2C_TypeDef *I2Cx)
1618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_STOPF) == (I2C_ISR_STOPF)) ? 1UL : 0UL);
1620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When RELOAD=0, AUTOEND=0 and NBYTES date have been transferred.
1626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TC            LL_I2C_IsActiveFlag_TC
1627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TC(I2C_TypeDef *I2Cx)
1631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TC) == (I2C_ISR_TC)) ? 1UL : 0UL);
1633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 59


1636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When RELOAD=1 and NBYTES date have been transferred.
1639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TCR           LL_I2C_IsActiveFlag_TCR
1640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TCR(I2C_TypeDef *I2Cx)
1644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TCR) == (I2C_ISR_TCR)) ? 1UL : 0UL);
1646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Bus error flag.
1650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a misplaced Start or Stop condition is detected.
1652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          BERR          LL_I2C_IsActiveFlag_BERR
1653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BERR(I2C_TypeDef *I2Cx)
1657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BERR) == (I2C_ISR_BERR)) ? 1UL : 0UL);
1659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Arbitration lost flag.
1663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When arbitration lost.
1665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          ARLO          LL_I2C_IsActiveFlag_ARLO
1666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ARLO(I2C_TypeDef *I2Cx)
1670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ARLO) == (I2C_ISR_ARLO)) ? 1UL : 0UL);
1672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Overrun/Underrun flag (slave mode).
1676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When an overrun/underrun error occurs (Clock Stretching Disabled).
1678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          OVR           LL_I2C_IsActiveFlag_OVR
1679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_OVR(I2C_TypeDef *I2Cx)
1683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_OVR) == (I2C_ISR_OVR)) ? 1UL : 0UL);
1685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of SMBus PEC error flag in reception.
1689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When the received PEC does not match with the PEC register content.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 60


1693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          PECERR        LL_I2C_IsActiveSMBusFlag_PECERR
1694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_PECERR) == (I2C_ISR_PECERR)) ? 1UL : 0UL);
1700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of SMBus Timeout detection flag.
1704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a timeout or extended clock timeout occurs.
1708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TIMEOUT       LL_I2C_IsActiveSMBusFlag_TIMEOUT
1709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TIMEOUT) == (I2C_ISR_TIMEOUT)) ? 1UL : 0UL);
1715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of SMBus alert flag.
1719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When SMBus host configuration, SMBus alert enabled and
1723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *              a falling edge event occurs on SMBA pin.
1724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          ALERT         LL_I2C_IsActiveSMBusFlag_ALERT
1725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ALERT) == (I2C_ISR_ALERT)) ? 1UL : 0UL);
1731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Bus Busy flag.
1735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a Start condition is detected.
1737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          BUSY          LL_I2C_IsActiveFlag_BUSY
1738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BUSY(I2C_TypeDef *I2Cx)
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BUSY) == (I2C_ISR_BUSY)) ? 1UL : 0UL);
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Address Matched flag.
1748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          ADDRCF        LL_I2C_ClearFlag_ADDR
1749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 61


1750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ADDR(I2C_TypeDef *I2Cx)
1753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ADDRCF);
1755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Not Acknowledge flag.
1759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          NACKCF        LL_I2C_ClearFlag_NACK
1760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_NACK(I2C_TypeDef *I2Cx)
1764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_NACKCF);
1766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Stop detection flag.
1770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          STOPCF        LL_I2C_ClearFlag_STOP
1771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_STOP(I2C_TypeDef *I2Cx)
1775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_STOPCF);
1777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Transmit data register empty flag (TXE).
1781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can be clear by software in order to flush the transmit data register (TXDR).
1782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_ClearFlag_TXE
1783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_TXE(I2C_TypeDef *I2Cx)
1787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->ISR, I2C_ISR_TXE);
1789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Bus error flag.
1793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          BERRCF        LL_I2C_ClearFlag_BERR
1794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_BERR(I2C_TypeDef *I2Cx)
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_BERRCF);
1800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Arbitration lost flag.
1804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          ARLOCF        LL_I2C_ClearFlag_ARLO
1805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 62


1807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ARLO(I2C_TypeDef *I2Cx)
1809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ARLOCF);
1811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Overrun/Underrun flag.
1815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          OVRCF         LL_I2C_ClearFlag_OVR
1816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_OVR(I2C_TypeDef *I2Cx)
1820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_OVRCF);
1822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear SMBus PEC error flag.
1826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          PECCF         LL_I2C_ClearSMBusFlag_PECERR
1829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_PECCF);
1835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear SMBus Timeout detection flag.
1839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          TIMOUTCF      LL_I2C_ClearSMBusFlag_TIMEOUT
1842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_TIMOUTCF);
1848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear SMBus Alert flag.
1852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          ALERTCF       LL_I2C_ClearSMBusFlag_ALERT
1855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ALERTCF);
1861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 63


1864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
1865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Data_Management Data_Management
1868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
1869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable automatic STOP condition generation (master mode).
1873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Automatic end mode : a STOP condition is automatically sent when NBYTES data are transf
1874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         This bit has no effect in slave mode or when RELOAD bit is set.
1875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_EnableAutoEndMode
1876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAutoEndMode(I2C_TypeDef *I2Cx)
1880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
1882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable automatic STOP condition generation (master mode).
1886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Software end mode : TC flag is set when NBYTES data are transferre, stretching SCL low.
1887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_DisableAutoEndMode
1888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAutoEndMode(I2C_TypeDef *I2Cx)
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
1894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if automatic STOP condition is enabled or disabled.
1898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_IsEnabledAutoEndMode
1899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAutoEndMode(I2C_TypeDef *I2Cx)
1903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_AUTOEND) == (I2C_CR2_AUTOEND)) ? 1UL : 0UL);
1905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable reload mode (master mode).
1909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The transfer is not completed after the NBYTES data transfer, NBYTES will be reloaded w
1910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_EnableReloadMode
1911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableReloadMode(I2C_TypeDef *I2Cx)
1915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_RELOAD);
1917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable reload mode (master mode).
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 64


1921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The transfer is completed after the NBYTES data transfer(STOP or RESTART will follow).
1922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_DisableReloadMode
1923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableReloadMode(I2C_TypeDef *I2Cx)
1927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR2, I2C_CR2_RELOAD);
1929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if reload mode is enabled or disabled.
1933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          RELOAD       LL_I2C_IsEnabledReloadMode
1934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledReloadMode(I2C_TypeDef *I2Cx)
1938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR2, I2C_CR2_RELOAD) == (I2C_CR2_RELOAD)) ? 1UL : 0UL);
1940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the number of bytes for transfer.
1944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Changing these bits when START bit is set is not allowed.
1945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          NBYTES           LL_I2C_SetTransferSize
1946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TransferSize This parameter must be a value between Min_Data=0x00 and Max_Data=0xFF.
1948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTransferSize(I2C_TypeDef *I2Cx, uint32_t TransferSize)
1951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_NBYTES, TransferSize << I2C_CR2_NBYTES_Pos);
1953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the number of bytes configured for transfer.
1957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          NBYTES           LL_I2C_GetTransferSize
1958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xFF
1960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTransferSize(I2C_TypeDef *I2Cx)
1962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_NBYTES) >> I2C_CR2_NBYTES_Pos);
1964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Prepare the generation of a ACKnowledge or Non ACKnowledge condition after the address 
1968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****             or next received byte.
1969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Usage in Slave mode only.
1970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          NACK          LL_I2C_AcknowledgeNextData
1971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TypeAcknowledge This parameter can be one of the following values:
1973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ACK
1974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_NACK
1975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_AcknowledgeNextData(I2C_TypeDef *I2Cx, uint32_t TypeAcknowledge)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 65


 341              		.loc 3 1977 22 view .LVU89
 342              	.LBB67:
1978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_NACK, TypeAcknowledge);
 343              		.loc 3 1979 3 view .LVU90
 344 005e 4268     		ldr	r2, [r0, #4]
 345 0060 22F40042 		bic	r2, r2, #32768
 346 0064 1343     		orrs	r3, r3, r2
 347              	.LVL30:
 348              		.loc 3 1979 3 is_stmt 0 view .LVU91
 349 0066 4360     		str	r3, [r0, #4]
 350              	.LVL31:
 351              		.loc 3 1979 3 view .LVU92
 352              	.LBE67:
 353              	.LBE66:
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   return SUCCESS;
 354              		.loc 1 194 3 is_stmt 1 view .LVU93
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** }
 355              		.loc 1 195 1 is_stmt 0 view .LVU94
 356 0068 0120     		movs	r0, #1
 357              	.LVL32:
 358              		.loc 1 195 1 view .LVU95
 359 006a 10BC     		pop	{r4}
 360              		.cfi_restore 4
 361              		.cfi_def_cfa_offset 0
 362 006c 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE979:
 366              		.section	.text.LL_I2C_StructInit,"ax",%progbits
 367              		.align	1
 368              		.global	LL_I2C_StructInit
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu softvfp
 374              	LL_I2C_StructInit:
 375              	.LVL33:
 376              	.LFB980:
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** 
 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** /**
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @brief  Set each @ref LL_I2C_InitTypeDef field to default value.
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @param  I2C_InitStruct Pointer to a @ref LL_I2C_InitTypeDef structure.
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   * @retval None
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   */
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** void LL_I2C_StructInit(LL_I2C_InitTypeDef *I2C_InitStruct)
 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** {
 377              		.loc 1 203 1 is_stmt 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   /* Set I2C_InitStruct fields to default values */
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   I2C_InitStruct->PeripheralMode  = LL_I2C_MODE_I2C;
 382              		.loc 1 205 3 view .LVU97
 383              		.loc 1 205 35 is_stmt 0 view .LVU98
 384 0000 0023     		movs	r3, #0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 66


 385 0002 0360     		str	r3, [r0]
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   I2C_InitStruct->Timing          = 0U;
 386              		.loc 1 206 3 is_stmt 1 view .LVU99
 387              		.loc 1 206 35 is_stmt 0 view .LVU100
 388 0004 4360     		str	r3, [r0, #4]
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   I2C_InitStruct->AnalogFilter    = LL_I2C_ANALOGFILTER_ENABLE;
 389              		.loc 1 207 3 is_stmt 1 view .LVU101
 390              		.loc 1 207 35 is_stmt 0 view .LVU102
 391 0006 8360     		str	r3, [r0, #8]
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   I2C_InitStruct->DigitalFilter   = 0U;
 392              		.loc 1 208 3 is_stmt 1 view .LVU103
 393              		.loc 1 208 35 is_stmt 0 view .LVU104
 394 0008 C360     		str	r3, [r0, #12]
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   I2C_InitStruct->OwnAddress1     = 0U;
 395              		.loc 1 209 3 is_stmt 1 view .LVU105
 396              		.loc 1 209 35 is_stmt 0 view .LVU106
 397 000a 0361     		str	r3, [r0, #16]
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   I2C_InitStruct->TypeAcknowledge = LL_I2C_NACK;
 398              		.loc 1 210 3 is_stmt 1 view .LVU107
 399              		.loc 1 210 35 is_stmt 0 view .LVU108
 400 000c 4FF40042 		mov	r2, #32768
 401 0010 4261     		str	r2, [r0, #20]
 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c ****   I2C_InitStruct->OwnAddrSize     = LL_I2C_OWNADDRESS1_7BIT;
 402              		.loc 1 211 3 is_stmt 1 view .LVU109
 403              		.loc 1 211 35 is_stmt 0 view .LVU110
 404 0012 8361     		str	r3, [r0, #24]
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_ll_i2c.c **** }
 405              		.loc 1 212 1 view .LVU111
 406 0014 7047     		bx	lr
 407              		.cfi_endproc
 408              	.LFE980:
 410              		.text
 411              	.Letext0:
 412              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 413              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 414              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 415              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wlxx.h"
 416              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wlxx_ll_i2c.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s:16     .text.LL_I2C_DeInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s:24     .text.LL_I2C_DeInit:0000000000000000 LL_I2C_DeInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s:168    .text.LL_I2C_DeInit:0000000000000060 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s:177    .text.LL_I2C_Init:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s:184    .text.LL_I2C_Init:0000000000000000 LL_I2C_Init
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s:367    .text.LL_I2C_StructInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cc9iz9WL.s:374    .text.LL_I2C_StructInit:0000000000000000 LL_I2C_StructInit

NO UNDEFINED SYMBOLS
