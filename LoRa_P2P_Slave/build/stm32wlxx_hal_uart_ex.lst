ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32wlxx_hal_uart_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UARTEx_Wakeup_AddressConfig,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	UARTEx_Wakeup_AddressConfig:
  24              	.LVL0:
  25              	.LFB859:
  26              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c"
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @file    stm32wlxx_hal_uart_ex.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief   Extended UART HAL module driver.
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          This file provides firmware functions to manage the following extended
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *           + Peripheral Control functions
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   ******************************************************************************
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @attention
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * Copyright (c) 2020 STMicroelectronics.
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * All rights reserved.
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   ******************************************************************************
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   @verbatim
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   ==============================================================================
  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****                ##### UART peripheral extended features  #####
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   ==============================================================================
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) For the UART RS485 Driver Enable mode, initialize the UART registers
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         by calling the HAL_RS485Ex_Init() API.
  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 2


  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) FIFO mode enabling/disabling and RX/TX FIFO threshold programming.
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         -@- When UART operates in FIFO mode, FIFO mode must be enabled prior
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****             starting RX/TX transfers. Also RX/TX FIFO thresholds must be
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****             configured prior starting RX/TX transfers.
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   @endverbatim
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   ******************************************************************************
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #include "stm32wlxx_hal.h"
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @addtogroup STM32WLxx_HAL_Driver
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @defgroup UARTEx UARTEx
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief UART Extended HAL module driver
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #ifdef HAL_UART_MODULE_ENABLED
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* Private typedef -----------------------------------------------------------*/
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* Private define ------------------------------------------------------------*/
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @defgroup UARTEX_Private_Constants UARTEx Private Constants
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* UART RX FIFO depth */
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #define RX_FIFO_DEPTH 8U
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* UART TX FIFO depth */
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #define TX_FIFO_DEPTH 8U
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @}
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* Private macros ------------------------------------------------------------*/
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* Private variables ---------------------------------------------------------*/
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* Private function prototypes -----------------------------------------------*/
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @defgroup UARTEx_Private_Functions UARTEx Private Functions
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart);
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @}
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /* Exported functions --------------------------------------------------------*/
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions  UARTEx Exported Functions
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group1 Initialization and de-initialization functions
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 3


  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief    Extended Initialization and Configuration Functions
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** @verbatim
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** ===============================================================================
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****             ##### Initialization and Configuration functions #####
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****  ===============================================================================
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     [..]
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     in asynchronous mode.
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       (+) For the asynchronous mode the parameters below can be configured:
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) Baud Rate
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) Word Length
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) Stop Bit
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****              in the data register is transmitted but is changed by the parity bit.
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) Hardware flow control
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) Receiver/transmitter modes
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) Over Sampling Method
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) One-Bit Sampling Method
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) TX and/or RX pin level inversion
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) data logical level inversion
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) RX and TX pins swap
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) RX overrun detection disabling
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) DMA disabling on RX error
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) MSB first on communication line
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (++) auto Baud rate detection
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     [..]
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     The HAL_RS485Ex_Init() API follows the UART RS485 mode configuration
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      procedures (details for the procedures are available in reference manual).
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** @endverbatim
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   following table.
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     Table 1. UART frame format.
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 4


 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart            UART handle.
 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param Polarity         Select the driver enable polarity.
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param AssertionTime    Driver Enable assertion time:
 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       5-bit value defining the time between the activation of the DE (Driver Enable)
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       signal and the beginning of the start bit. It is expressed in sample time
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       units (1/8 or 1/16 bit time, depending on the oversampling rate)
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param DeassertionTime  Driver Enable deassertion time:
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       5-bit value defining the time between the end of the last stop bit, in a
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       transmitted message, and the de-activation of the DE (Driver Enable) signal.
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       It is expressed in sample time units (1/8 or 1/16 bit time, depending on the
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       oversampling rate).
 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****                                    uint32_t DeassertionTime)
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t temp;
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (huart == NULL)
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return HAL_ERROR;
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the Driver Enable UART instance */
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the Driver Enable polarity */
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the Driver Enable assertion time */
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the Driver Enable deassertion time */
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Allocate lock resource and initialize it */
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->Lock = HAL_UNLOCKED;
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     UART_InitCallbacksToDefault(huart);
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if (huart->MspInitCallback == NULL)
 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Init the low level hardware */
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->MspInitCallback(huart);
 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #else
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 5


 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     HAL_UART_MspInit(huart);
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Disable the Peripheral */
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Set the UART Communication parameters */
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return HAL_ERROR;
 218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     UART_AdvFeatureConfig(huart);
 223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Set the Driver Enable polarity */
 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Set the Driver Enable assertion and deassertion times */
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Enable the Peripheral */
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @}
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group2 IO operation functions
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *  @brief Extended functions
 249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *
 250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** @verbatim
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****  ===============================================================================
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****                       ##### IO operation functions #####
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****  ===============================================================================
 254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     This subsection provides a set of Wakeup and FIFO mode related callback functions.
 255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) Wakeup from Stop mode Callback:
 257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (+) HAL_UARTEx_WakeupCallback()
 258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) TX/RX Fifos Callbacks:
 260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (+) HAL_UARTEx_RxFifoFullCallback()
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 6


 261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (+) HAL_UARTEx_TxFifoEmptyCallback()
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** @endverbatim
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
 265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief UART wakeup from Stop mode callback.
 269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart UART handle.
 270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval None
 271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** __weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   UNUSED(huart);
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****             the HAL_UARTEx_WakeupCallback can be implemented in the user file.
 279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****    */
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief  UART RX Fifo full callback.
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param  huart UART handle.
 285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval None
 286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** __weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   UNUSED(huart);
 291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****             the HAL_UARTEx_RxFifoFullCallback can be implemented in the user file.
 294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****    */
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief  UART TX Fifo empty callback.
 299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param  huart UART handle.
 300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval None
 301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** __weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   UNUSED(huart);
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****             the HAL_UARTEx_TxFifoEmptyCallback can be implemented in the user file.
 309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****    */
 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @}
 314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group3 Peripheral Control functions
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief    Extended Peripheral Control functions
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 7


 318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *
 319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** @verbatim
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****  ===============================================================================
 321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****                       ##### Peripheral Control functions #####
 322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****  ===============================================================================
 323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     [..] This section provides the following functions:
 324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
 326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      (+) HAL_UARTEx_StopModeWakeUpSourceConfig() API defines the wake-up from stop mode
 327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****          trigger: address match, Start Bit detection or RXNE bit status.
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableStopMode() API enables the UART to wake up the MCU from stop mode
 329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableStopMode() API disables the above functionality
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableFifoMode() API enables the FIFO mode
 331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableFifoMode() API disables the FIFO mode
 332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetTxFifoThreshold() API sets the TX FIFO threshold
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetRxFifoThreshold() API sets the RX FIFO threshold
 334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     services to user. (For example, these functions allow application to handle use cases
 337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     where number of data to be received is unknown).
 338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) Compared to standard reception services which only consider number of received
 340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         data elements as reception completion criteria, these functions also consider additional ev
 341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         as triggers for updating reception status to caller :
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****                for 1 frame time, after last received byte.
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           (++) RX inactivity detected by RTO, i.e. line has been in idle state
 346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****                for a programmable time, after last received byte.
 347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        (+) Detection that a specific character has been received.
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) There are two mode of transfer:
 350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            or till IDLE event occurs. Reception is handled only during function execution.
 352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            are returned by function after finishing transfer.
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            These API's return the HAL status.
 356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            The end of the data processing will be indicated through the
 357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) Blocking mode API:
 362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) Non-Blocking mode API with Interrupt:
 365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     (#) Non-Blocking mode API with DMA:
 368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** @endverbatim
 371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 8


 375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
 376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
 377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *        long).
 379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart         UART handle.
 382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param AddressLength This parameter can be one of the following values:
 383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (huart == NULL)
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return HAL_ERROR;
 393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the address length parameter */
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Disable the Peripheral */
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Set the address length */
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Enable the Peripheral */
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Set Wakeup from Stop mode interrupt flag selection.
 415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note It is the application responsibility to enable the interrupt used as
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       usart_wkup interrupt source before entering low-power mode.
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart           UART handle.
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param WakeUpSelection Address match, Start Bit detection or RXNE/RXFNE bit status.
 419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_ADDRESS
 421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_STARTBIT
 422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_READDATA_NONEMPTY
 423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_StopModeWakeUpSourceConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeD
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tickstart;
 429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* check the wake-up from stop mode UART instance */
 431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance));
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 9


 432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_SELECTION(WakeUpSelection.WakeUpEvent));
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Disable the Peripheral */
 441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Set the wake-up selection scheme */
 444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_WUS, WakeUpSelection.WakeUpEvent);
 445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (WakeUpSelection.WakeUpEvent == UART_WAKEUP_ON_ADDRESS)
 447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     UARTEx_Wakeup_AddressConfig(huart, WakeUpSelection);
 449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Enable the Peripheral */
 452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Init tickstart for timeout management */
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   tickstart = HAL_GetTick();
 456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Wait until REACK flag is set */
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE)
 459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     status = HAL_TIMEOUT;
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   else
 463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Initialize the UART State */
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->gState = HAL_UART_STATE_READY;
 466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Unlocked */
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return status;
 472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Enable UART Stop Mode.
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note The UART is able to wake up the MCU from Stop 1 mode as long as UART clock is HSI or LSE.
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart UART handle.
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableStopMode(UART_HandleTypeDef *huart)
 481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Set UESM bit */
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_UESM);
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Unlocked */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 10


 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return HAL_OK;
 492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Disable UART Stop Mode.
 496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart UART handle.
 497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableStopMode(UART_HandleTypeDef *huart)
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Clear UESM bit */
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_UESM);
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Unlocked */
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return HAL_OK;
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief  Enable the FIFO mode.
 515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart      UART handle.
 516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableFifoMode(UART_HandleTypeDef *huart)
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check parameters */
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Save actual UART configuration */
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Disable UART */
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Enable FIFO mode */
 537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   SET_BIT(tmpcr1, USART_CR1_FIFOEN);
 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_ENABLE;
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Restore UART configuration */
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 11


 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Unlocked */
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return HAL_OK;
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief  Disable the FIFO mode.
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart      UART handle.
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check parameters */
 564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Save actual UART configuration */
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Disable UART */
 575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Enable FIFO mode */
 578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_DISABLE;
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Restore UART configuration */
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Unlocked */
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return HAL_OK;
 590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief  Set the TXFIFO threshold.
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart      UART handle.
 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param Threshold  TX FIFO threshold value
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_8
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_4
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_2
 600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_3_4
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
 602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 12


 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check parameters */
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Save actual UART configuration */
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Disable UART */
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Update TX threshold configuration */
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Restore UART configuration */
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Unlocked */
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return HAL_OK;
 639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief  Set the RXFIFO threshold.
 643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart      UART handle.
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param Threshold  RX FIFO threshold value
 645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_8
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_4
 648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_2
 649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_3_4
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
 652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the parameters */
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 13


 660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Save actual UART configuration */
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Disable UART */
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Update RX threshold configuration */
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Restore UART configuration */
 680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Unlocked */
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   return HAL_OK;
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
 692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
 693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
 695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
 697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         of uint16_t available through pData.
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       is not empty. Read operations from the RDR register are performed when
 700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
 701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       RXNE are mapped on the same bit-field.
 702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   Dual core specific: there is no support for unaligned accesses on the Cortex-M0+ proces
 703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         (as received data will be handled using uint16_t pointer cast). Depending on compilatio
 706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart   UART handle.
 708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
 709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
 710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
 711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
 712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 14


 717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint16_t *pdata16bits;
 718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint16_t uhMask;
 719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tickstart;
 720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       return  HAL_ERROR;
 727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #if defined(CORE_CM0PLUS)
 730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
 731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        should be aligned on a uint16_t frontier, as data to be received from RDR will be
 732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        handled through a uint16_t cast. */
 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         return  HAL_ERROR;
 738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #endif /* CORE_CM0PLUS */
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Init tickstart for timeout management */
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     tickstart = HAL_GetTick();
 750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxXferSize  = Size;
 752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Computation of UART mask to apply to RDR register */
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     UART_MASK_COMPUTATION(huart);
 756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       pdata8bits  = NULL;
 762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 764:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     else
 765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       pdata8bits  = pData;
 767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       pdata16bits = NULL;
 768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 769:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     __HAL_UNLOCK(huart);
 771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Initialize output number of received elements */
 773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     *RxLen = 0U;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 15


 774:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* as long as data have to be received */
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     while (huart->RxXferCount > 0U)
 777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       /* Check if IDLE flag is set */
 779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 780:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         /* Clear IDLE flag in ISR */
 782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 784:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
 785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
 786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         if (*RxLen > 0U)
 787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           return HAL_OK;
 791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       /* Check if RXNE flag is set */
 795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         if (pdata8bits == NULL)
 798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata16bits++;
 801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         else
 803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata8bits++;
 806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         /* Increment number of received elements */
 808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         *RxLen += 1U;
 809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         huart->RxXferCount--;
 810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 811:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       /* Check for the Timeout */
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       if (Timeout != HAL_MAX_DELAY)
 814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           return HAL_TIMEOUT;
 820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 822:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Set number of received elements in output parameter : RxLen */
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_READY;
 828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return HAL_OK;
 830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 16


 831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   else
 832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return HAL_BUSY;
 834:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
 839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
 840:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
 841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         number of received data elements.
 842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         of uint16_t available through pData.
 845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   Dual core specific: there is no support for unaligned accesses on the Cortex-M0+ proces
 846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 848:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         (as received data will be handled using uint16_t pointer cast). Depending on compilatio
 849:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart UART handle.
 851:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
 852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
 853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
 856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 861:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 863:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       return HAL_ERROR;
 865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #if defined(CORE_CM0PLUS)
 868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
 869:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        should be aligned on a uint16_t frontier, as data to be received from RDR will be
 870:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        handled through a uint16_t cast. */
 871:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 873:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         return  HAL_ERROR;
 876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #endif /* CORE_CM0PLUS */
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 881:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Set Reception type to reception till IDLE Event*/
 883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 886:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Check Rx process has been successfully started */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 17


 888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if (status == HAL_OK)
 889:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 891:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 894:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       else
 896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         /* In case of errors already pending when reception is started,
 898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            Interrupts may have already been raised and lead to reception abortion.
 899:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            (Overrun error for instance).
 900:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
 901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         status = HAL_ERROR;
 902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 903:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return status;
 906:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 907:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   else
 908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return HAL_BUSY;
 910:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 913:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
 915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
 916:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
 917:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
 918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
 919:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
 920:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         the parity bit (MSB position).
 921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
 923:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         of uint16_t available through pData.
 924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note   Dual core specific: there is no support for unaligned accesses on the Cortex-M0+ proces
 925:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
 928:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart UART handle.
 930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
 931:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
 932:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval HAL status
 933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 934:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
 935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
 936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 938:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 942:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       return HAL_ERROR;
 944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 18


 945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 946:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #if defined(CORE_CM0PLUS)
 947:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
 948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        should be aligned on a uint16_t frontier, as data copy from RDR will be
 949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****        handled by DMA from a uint16_t frontier. */
 950:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 951:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 953:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         return  HAL_ERROR;
 955:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 956:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #endif /* CORE_CM0PLUS */
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 960:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 961:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Set Reception type to reception till IDLE Event*/
 962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 963:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 965:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* Check Rx process has been successfully started */
 967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     if (status == HAL_OK)
 968:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 970:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 971:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 973:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 974:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       else
 975:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 976:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         /* In case of errors already pending when reception is started,
 977:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            Interrupts may have already been raised and lead to reception abortion.
 978:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            (Overrun error for instance).
 979:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
 980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         status = HAL_ERROR;
 981:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 982:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return status;
 985:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 986:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   else
 987:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 988:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     return HAL_BUSY;
 989:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 990:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 991:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 993:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @}
 994:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 995:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 996:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
 997:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @}
 998:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
 999:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
1000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /** @addtogroup UARTEx_Private_Functions
1001:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 19


1002:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
1003:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
1004:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
1005:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
1006:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart           UART handle.
1007:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
1008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval None
1009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
1010:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
1011:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
  27              		.loc 1 1011 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              		.loc 1 1011 1 is_stmt 0 view .LVU1
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
  35 0002 02AB     		add	r3, sp, #8
  36 0004 03E90600 		stmdb	r3, {r1, r2}
1012:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
  37              		.loc 1 1012 3 is_stmt 1 view .LVU2
1013:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
1014:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Set the USART address length */
1015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
  38              		.loc 1 1015 3 view .LVU3
  39 0008 0268     		ldr	r2, [r0]
  40 000a 5368     		ldr	r3, [r2, #4]
  41 000c 23F01003 		bic	r3, r3, #16
  42 0010 BDF80410 		ldrh	r1, [sp, #4]
  43 0014 0B43     		orrs	r3, r3, r1
  44 0016 5360     		str	r3, [r2, #4]
1016:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
1017:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Set the USART address node */
1018:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
  45              		.loc 1 1018 3 view .LVU4
  46 0018 0268     		ldr	r2, [r0]
  47 001a 5368     		ldr	r3, [r2, #4]
  48 001c 23F07F43 		bic	r3, r3, #-16777216
  49 0020 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
  50 0024 43EA0163 		orr	r3, r3, r1, lsl #24
  51 0028 5360     		str	r3, [r2, #4]
1019:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
  52              		.loc 1 1019 1 is_stmt 0 view .LVU5
  53 002a 02B0     		add	sp, sp, #8
  54              		.cfi_def_cfa_offset 0
  55              		@ sp needed
  56 002c 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE859:
  60              		.section	.text.UARTEx_SetNbDataToProcess,"ax",%progbits
  61              		.align	1
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu softvfp
  67              	UARTEx_SetNbDataToProcess:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 20


  68              	.LVL1:
  69              	.LFB860:
1020:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
1021:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** /**
1022:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @brief Calculate the number of data to process in RX/TX ISR.
1023:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @note The RX FIFO depth and the TX FIFO depth is extracted from
1024:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   *       the UART configuration registers.
1025:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @param huart UART handle.
1026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   * @retval None
1027:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   */
1028:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
1029:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** {
  70              		.loc 1 1029 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
1030:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint8_t rx_fifo_depth;
  75              		.loc 1 1030 3 view .LVU7
1031:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint8_t tx_fifo_depth;
  76              		.loc 1 1031 3 view .LVU8
1032:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint8_t rx_fifo_threshold;
  77              		.loc 1 1032 3 view .LVU9
1033:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint8_t tx_fifo_threshold;
  78              		.loc 1 1033 3 view .LVU10
1034:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  79              		.loc 1 1034 3 view .LVU11
1035:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
  80              		.loc 1 1035 3 view .LVU12
1036:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
1037:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   if (huart->FifoMode == UART_FIFOMODE_DISABLE)
  81              		.loc 1 1037 3 view .LVU13
  82              		.loc 1 1037 12 is_stmt 0 view .LVU14
  83 0000 436E     		ldr	r3, [r0, #100]
  84              		.loc 1 1037 6 view .LVU15
  85 0002 2BB9     		cbnz	r3, .L4
1038:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
1039:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->NbTxDataToProcess = 1U;
  86              		.loc 1 1039 5 is_stmt 1 view .LVU16
  87              		.loc 1 1039 30 is_stmt 0 view .LVU17
  88 0004 0123     		movs	r3, #1
  89 0006 A0F86A30 		strh	r3, [r0, #106]	@ movhi
1040:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->NbRxDataToProcess = 1U;
  90              		.loc 1 1040 5 is_stmt 1 view .LVU18
  91              		.loc 1 1040 30 is_stmt 0 view .LVU19
  92 000a A0F86830 		strh	r3, [r0, #104]	@ movhi
  93 000e 7047     		bx	lr
  94              	.L4:
1029:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint8_t rx_fifo_depth;
  95              		.loc 1 1029 1 view .LVU20
  96 0010 30B4     		push	{r4, r5}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 5, -4
1041:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
1042:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   else
1043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 21


1044:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     rx_fifo_depth = RX_FIFO_DEPTH;
 100              		.loc 1 1044 5 is_stmt 1 view .LVU21
 101              	.LVL2:
1045:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     tx_fifo_depth = TX_FIFO_DEPTH;
 102              		.loc 1 1045 5 view .LVU22
1046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RX
 103              		.loc 1 1046 5 view .LVU23
 104              		.loc 1 1046 35 is_stmt 0 view .LVU24
 105 0012 0368     		ldr	r3, [r0]
 106 0014 9A68     		ldr	r2, [r3, #8]
 107              		.loc 1 1046 23 view .LVU25
 108 0016 C2F34262 		ubfx	r2, r2, #25, #3
 109              	.LVL3:
1047:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 110              		.loc 1 1047 5 is_stmt 1 view .LVU26
 111              		.loc 1 1047 35 is_stmt 0 view .LVU27
 112 001a 9968     		ldr	r1, [r3, #8]
 113              		.loc 1 1047 23 view .LVU28
 114 001c 490F     		lsrs	r1, r1, #29
 115              	.LVL4:
1048:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 116              		.loc 1 1048 5 is_stmt 1 view .LVU29
 117              		.loc 1 1048 68 is_stmt 0 view .LVU30
 118 001e 094D     		ldr	r5, .L9
 119 0020 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 120              		.loc 1 1048 57 view .LVU31
 121 0022 DB00     		lsls	r3, r3, #3
1049:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 122              		.loc 1 1049 53 view .LVU32
 123 0024 084C     		ldr	r4, .L9+4
 124 0026 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 125              	.LVL5:
1048:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 126              		.loc 1 1048 89 view .LVU33
 127 0028 93FBF1F3 		sdiv	r3, r3, r1
1048:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 128              		.loc 1 1048 30 view .LVU34
 129 002c A0F86A30 		strh	r3, [r0, #106]	@ movhi
1050:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 130              		.loc 1 1050 5 is_stmt 1 view .LVU35
 131              		.loc 1 1050 68 is_stmt 0 view .LVU36
 132 0030 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 133              		.loc 1 1050 57 view .LVU37
 134 0032 DB00     		lsls	r3, r3, #3
1051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 135              		.loc 1 1051 53 view .LVU38
 136 0034 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 137              	.LVL6:
1050:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 138              		.loc 1 1050 89 view .LVU39
 139 0036 93FBF2F3 		sdiv	r3, r3, r2
1050:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 140              		.loc 1 1050 30 view .LVU40
 141 003a A0F86830 		strh	r3, [r0, #104]	@ movhi
1052:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
1053:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 142              		.loc 1 1053 1 view .LVU41
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 22


 143 003e 30BC     		pop	{r4, r5}
 144              		.cfi_restore 5
 145              		.cfi_restore 4
 146              		.cfi_def_cfa_offset 0
 147 0040 7047     		bx	lr
 148              	.L10:
 149 0042 00BF     		.align	2
 150              	.L9:
 151 0044 00000000 		.word	.LANCHOR0
 152 0048 00000000 		.word	.LANCHOR1
 153              		.cfi_endproc
 154              	.LFE860:
 156              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 157              		.align	1
 158              		.global	HAL_RS485Ex_Init
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	HAL_RS485Ex_Init:
 165              	.LVL7:
 166              	.LFB844:
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t temp;
 167              		.loc 1 168 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 171              		.loc 1 169 3 view .LVU43
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 172              		.loc 1 172 3 view .LVU44
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 173              		.loc 1 172 6 is_stmt 0 view .LVU45
 174 0000 0028     		cmp	r0, #0
 175 0002 3ED0     		beq	.L15
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t temp;
 176              		.loc 1 168 1 view .LVU46
 177 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 178              		.cfi_def_cfa_offset 24
 179              		.cfi_offset 3, -24
 180              		.cfi_offset 4, -20
 181              		.cfi_offset 5, -16
 182              		.cfi_offset 6, -12
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0006 0F46     		mov	r7, r1
 186 0008 1646     		mov	r6, r2
 187 000a 1D46     		mov	r5, r3
 188 000c 0446     		mov	r4, r0
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 189              		.loc 1 177 3 is_stmt 1 view .LVU47
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 190              		.loc 1 180 3 view .LVU48
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 191              		.loc 1 183 3 view .LVU49
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 192              		.loc 1 186 3 view .LVU50
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 23


 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 193              		.loc 1 188 3 view .LVU51
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 194              		.loc 1 188 12 is_stmt 0 view .LVU52
 195 000e D0F88430 		ldr	r3, [r0, #132]
 196              	.LVL8:
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 197              		.loc 1 188 6 view .LVU53
 198 0012 6BB3     		cbz	r3, .L20
 199              	.LVL9:
 200              	.L13:
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 201              		.loc 1 209 3 is_stmt 1 view .LVU54
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 202              		.loc 1 209 17 is_stmt 0 view .LVU55
 203 0014 2423     		movs	r3, #36
 204 0016 C4F88430 		str	r3, [r4, #132]
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 205              		.loc 1 212 3 is_stmt 1 view .LVU56
 206 001a 2268     		ldr	r2, [r4]
 207 001c 1368     		ldr	r3, [r2]
 208 001e 23F00103 		bic	r3, r3, #1
 209 0022 1360     		str	r3, [r2]
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 210              		.loc 1 215 3 view .LVU57
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 211              		.loc 1 215 7 is_stmt 0 view .LVU58
 212 0024 2046     		mov	r0, r4
 213 0026 FFF7FEFF 		bl	UART_SetConfig
 214              	.LVL10:
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 215              		.loc 1 215 6 view .LVU59
 216 002a 0128     		cmp	r0, #1
 217 002c 1FD0     		beq	.L12
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 218              		.loc 1 220 3 is_stmt 1 view .LVU60
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 219              		.loc 1 220 26 is_stmt 0 view .LVU61
 220 002e A36A     		ldr	r3, [r4, #40]
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 221              		.loc 1 220 6 view .LVU62
 222 0030 1BBB     		cbnz	r3, .L21
 223              	.L14:
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 224              		.loc 1 226 3 is_stmt 1 view .LVU63
 225 0032 2268     		ldr	r2, [r4]
 226 0034 9368     		ldr	r3, [r2, #8]
 227 0036 43F48043 		orr	r3, r3, #16384
 228 003a 9360     		str	r3, [r2, #8]
 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 229              		.loc 1 229 3 view .LVU64
 230 003c 2268     		ldr	r2, [r4]
 231 003e 9368     		ldr	r3, [r2, #8]
 232 0040 23F40043 		bic	r3, r3, #32768
 233 0044 3B43     		orrs	r3, r3, r7
 234 0046 9360     		str	r3, [r2, #8]
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 24


 235              		.loc 1 232 3 view .LVU65
 236              	.LVL11:
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 237              		.loc 1 233 3 view .LVU66
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 238              		.loc 1 233 28 is_stmt 0 view .LVU67
 239 0048 2D04     		lsls	r5, r5, #16
 240              	.LVL12:
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 241              		.loc 1 233 8 view .LVU68
 242 004a 45EA4655 		orr	r5, r5, r6, lsl #21
 243              	.LVL13:
 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 244              		.loc 1 234 3 is_stmt 1 view .LVU69
 245 004e 2368     		ldr	r3, [r4]
 246 0050 1A68     		ldr	r2, [r3]
 247 0052 22F07F72 		bic	r2, r2, #66846720
 248 0056 22F44032 		bic	r2, r2, #196608
 249 005a 2A43     		orrs	r2, r2, r5
 250 005c 1A60     		str	r2, [r3]
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 251              		.loc 1 237 3 view .LVU70
 252 005e 2268     		ldr	r2, [r4]
 253 0060 1368     		ldr	r3, [r2]
 254 0062 43F00103 		orr	r3, r3, #1
 255 0066 1360     		str	r3, [r2]
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 256              		.loc 1 240 3 view .LVU71
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 257              		.loc 1 240 11 is_stmt 0 view .LVU72
 258 0068 2046     		mov	r0, r4
 259 006a FFF7FEFF 		bl	UART_CheckIdleState
 260              	.LVL14:
 261              	.L12:
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 262              		.loc 1 241 1 view .LVU73
 263 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 264              	.LVL15:
 265              	.L20:
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 266              		.loc 1 191 5 is_stmt 1 view .LVU74
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 267              		.loc 1 191 17 is_stmt 0 view .LVU75
 268 0070 80F88030 		strb	r3, [r0, #128]
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 269              		.loc 1 205 5 is_stmt 1 view .LVU76
 270 0074 FFF7FEFF 		bl	HAL_UART_MspInit
 271              	.LVL16:
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 272              		.loc 1 205 5 is_stmt 0 view .LVU77
 273 0078 CCE7     		b	.L13
 274              	.L21:
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 275              		.loc 1 222 5 is_stmt 1 view .LVU78
 276 007a 2046     		mov	r0, r4
 277 007c FFF7FEFF 		bl	UART_AdvFeatureConfig
 278              	.LVL17:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 25


 279 0080 D7E7     		b	.L14
 280              	.LVL18:
 281              	.L15:
 282              		.cfi_def_cfa_offset 0
 283              		.cfi_restore 3
 284              		.cfi_restore 4
 285              		.cfi_restore 5
 286              		.cfi_restore 6
 287              		.cfi_restore 7
 288              		.cfi_restore 14
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 289              		.loc 1 174 12 is_stmt 0 view .LVU79
 290 0082 0120     		movs	r0, #1
 291              	.LVL19:
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 292              		.loc 1 241 1 view .LVU80
 293 0084 7047     		bx	lr
 294              		.cfi_endproc
 295              	.LFE844:
 297              		.section	.text.HAL_UARTEx_WakeupCallback,"ax",%progbits
 298              		.align	1
 299              		.weak	HAL_UARTEx_WakeupCallback
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	HAL_UARTEx_WakeupCallback:
 306              	.LVL20:
 307              	.LFB845:
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 308              		.loc 1 273 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 313              		.loc 1 275 3 view .LVU82
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 314              		.loc 1 280 1 is_stmt 0 view .LVU83
 315 0000 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE845:
 319              		.section	.text.HAL_UARTEx_RxFifoFullCallback,"ax",%progbits
 320              		.align	1
 321              		.weak	HAL_UARTEx_RxFifoFullCallback
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu softvfp
 327              	HAL_UARTEx_RxFifoFullCallback:
 328              	.LVL21:
 329              	.LFB846:
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 330              		.loc 1 288 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 26


 334              		@ link register save eliminated.
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 335              		.loc 1 290 3 view .LVU85
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 336              		.loc 1 295 1 is_stmt 0 view .LVU86
 337 0000 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE846:
 341              		.section	.text.HAL_UARTEx_TxFifoEmptyCallback,"ax",%progbits
 342              		.align	1
 343              		.weak	HAL_UARTEx_TxFifoEmptyCallback
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu softvfp
 349              	HAL_UARTEx_TxFifoEmptyCallback:
 350              	.LVL22:
 351              	.LFB847:
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 352              		.loc 1 303 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 357              		.loc 1 305 3 view .LVU88
 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 358              		.loc 1 310 1 is_stmt 0 view .LVU89
 359 0000 7047     		bx	lr
 360              		.cfi_endproc
 361              	.LFE847:
 363              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 364              		.align	1
 365              		.global	HAL_MultiProcessorEx_AddressLength_Set
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	HAL_MultiProcessorEx_AddressLength_Set:
 372              	.LVL23:
 373              	.LFB848:
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 374              		.loc 1 388 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 378              		.loc 1 390 3 view .LVU91
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 379              		.loc 1 390 6 is_stmt 0 view .LVU92
 380 0000 C0B1     		cbz	r0, .L27
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 381              		.loc 1 388 1 view .LVU93
 382 0002 08B5     		push	{r3, lr}
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 3, -8
 385              		.cfi_offset 14, -4
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 27


 386 0004 0346     		mov	r3, r0
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 387              		.loc 1 396 3 is_stmt 1 view .LVU94
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 388              		.loc 1 398 3 view .LVU95
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 389              		.loc 1 398 17 is_stmt 0 view .LVU96
 390 0006 2422     		movs	r2, #36
 391 0008 C0F88420 		str	r2, [r0, #132]
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 392              		.loc 1 401 3 is_stmt 1 view .LVU97
 393 000c 0068     		ldr	r0, [r0]
 394              	.LVL24:
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 395              		.loc 1 401 3 is_stmt 0 view .LVU98
 396 000e 0268     		ldr	r2, [r0]
 397 0010 22F00102 		bic	r2, r2, #1
 398 0014 0260     		str	r2, [r0]
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 399              		.loc 1 404 3 is_stmt 1 view .LVU99
 400 0016 1868     		ldr	r0, [r3]
 401 0018 4268     		ldr	r2, [r0, #4]
 402 001a 22F01002 		bic	r2, r2, #16
 403 001e 1143     		orrs	r1, r1, r2
 404              	.LVL25:
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 405              		.loc 1 404 3 is_stmt 0 view .LVU100
 406 0020 4160     		str	r1, [r0, #4]
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 407              		.loc 1 407 3 is_stmt 1 view .LVU101
 408 0022 1968     		ldr	r1, [r3]
 409 0024 0A68     		ldr	r2, [r1]
 410 0026 42F00102 		orr	r2, r2, #1
 411 002a 0A60     		str	r2, [r1]
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 412              		.loc 1 410 3 view .LVU102
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 413              		.loc 1 410 11 is_stmt 0 view .LVU103
 414 002c 1846     		mov	r0, r3
 415 002e FFF7FEFF 		bl	UART_CheckIdleState
 416              	.LVL26:
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 417              		.loc 1 411 1 view .LVU104
 418 0032 08BD     		pop	{r3, pc}
 419              	.LVL27:
 420              	.L27:
 421              		.cfi_def_cfa_offset 0
 422              		.cfi_restore 3
 423              		.cfi_restore 14
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 424              		.loc 1 392 12 view .LVU105
 425 0034 0120     		movs	r0, #1
 426              	.LVL28:
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 427              		.loc 1 411 1 view .LVU106
 428 0036 7047     		bx	lr
 429              		.cfi_endproc
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 28


 430              	.LFE848:
 432              		.section	.text.HAL_UARTEx_StopModeWakeUpSourceConfig,"ax",%progbits
 433              		.align	1
 434              		.global	HAL_UARTEx_StopModeWakeUpSourceConfig
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu softvfp
 440              	HAL_UARTEx_StopModeWakeUpSourceConfig:
 441              	.LVL29:
 442              	.LFB849:
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 443              		.loc 1 426 1 is_stmt 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 447              		.loc 1 426 1 is_stmt 0 view .LVU108
 448 0000 10B5     		push	{r4, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 4, -8
 451              		.cfi_offset 14, -4
 452 0002 84B0     		sub	sp, sp, #16
 453              		.cfi_def_cfa_offset 24
 454 0004 04AB     		add	r3, sp, #16
 455 0006 03E90600 		stmdb	r3, {r1, r2}
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tickstart;
 456              		.loc 1 427 3 is_stmt 1 view .LVU109
 457              	.LVL30:
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 458              		.loc 1 428 3 view .LVU110
 431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 459              		.loc 1 431 3 view .LVU111
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 460              		.loc 1 433 3 view .LVU112
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 461              		.loc 1 436 3 view .LVU113
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 462              		.loc 1 436 3 view .LVU114
 463 000a 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 464 000e 012B     		cmp	r3, #1
 465 0010 35D0     		beq	.L36
 466 0012 0446     		mov	r4, r0
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 467              		.loc 1 436 3 discriminator 2 view .LVU115
 468 0014 0123     		movs	r3, #1
 469 0016 80F88030 		strb	r3, [r0, #128]
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 470              		.loc 1 436 3 discriminator 2 view .LVU116
 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 471              		.loc 1 438 3 discriminator 2 view .LVU117
 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 472              		.loc 1 438 17 is_stmt 0 discriminator 2 view .LVU118
 473 001a 2423     		movs	r3, #36
 474 001c C0F88430 		str	r3, [r0, #132]
 441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 475              		.loc 1 441 3 is_stmt 1 discriminator 2 view .LVU119
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 29


 476 0020 0268     		ldr	r2, [r0]
 477 0022 1368     		ldr	r3, [r2]
 478 0024 23F00103 		bic	r3, r3, #1
 479 0028 1360     		str	r3, [r2]
 444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 480              		.loc 1 444 3 discriminator 2 view .LVU120
 481 002a 0168     		ldr	r1, [r0]
 482 002c 8B68     		ldr	r3, [r1, #8]
 483 002e 23F44013 		bic	r3, r3, #3145728
 484 0032 029A     		ldr	r2, [sp, #8]
 485 0034 1343     		orrs	r3, r3, r2
 486 0036 8B60     		str	r3, [r1, #8]
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 487              		.loc 1 446 3 discriminator 2 view .LVU121
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 488              		.loc 1 446 6 is_stmt 0 discriminator 2 view .LVU122
 489 0038 AAB1     		cbz	r2, .L39
 490              	.LVL31:
 491              	.L34:
 452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 492              		.loc 1 452 3 is_stmt 1 view .LVU123
 493 003a 2268     		ldr	r2, [r4]
 494 003c 1368     		ldr	r3, [r2]
 495 003e 43F00103 		orr	r3, r3, #1
 496 0042 1360     		str	r3, [r2]
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 497              		.loc 1 455 3 view .LVU124
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 498              		.loc 1 455 15 is_stmt 0 view .LVU125
 499 0044 FFF7FEFF 		bl	HAL_GetTick
 500              	.LVL32:
 501 0048 0346     		mov	r3, r0
 502              	.LVL33:
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 503              		.loc 1 458 3 is_stmt 1 view .LVU126
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 504              		.loc 1 458 7 is_stmt 0 view .LVU127
 505 004a 6FF07E42 		mvn	r2, #-33554432
 506 004e 0092     		str	r2, [sp]
 507 0050 0022     		movs	r2, #0
 508 0052 4FF48001 		mov	r1, #4194304
 509 0056 2046     		mov	r0, r4
 510              	.LVL34:
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 511              		.loc 1 458 7 view .LVU128
 512 0058 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 513              	.LVL35:
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 514              		.loc 1 458 6 view .LVU129
 515 005c 48B9     		cbnz	r0, .L37
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 516              		.loc 1 465 5 is_stmt 1 view .LVU130
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 517              		.loc 1 465 19 is_stmt 0 view .LVU131
 518 005e 2023     		movs	r3, #32
 519 0060 C4F88430 		str	r3, [r4, #132]
 520 0064 06E0     		b	.L35
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 30


 521              	.LVL36:
 522              	.L39:
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 523              		.loc 1 448 5 is_stmt 1 view .LVU132
 524 0066 04AB     		add	r3, sp, #16
 525 0068 13E90600 		ldmdb	r3, {r1, r2}
 526 006c FFF7FEFF 		bl	UARTEx_Wakeup_AddressConfig
 527              	.LVL37:
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 528              		.loc 1 448 5 is_stmt 0 view .LVU133
 529 0070 E3E7     		b	.L34
 530              	.L37:
 460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 531              		.loc 1 460 12 view .LVU134
 532 0072 0320     		movs	r0, #3
 533              	.L35:
 534              	.LVL38:
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 535              		.loc 1 469 3 is_stmt 1 view .LVU135
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 536              		.loc 1 469 3 view .LVU136
 537 0074 0023     		movs	r3, #0
 538 0076 84F88030 		strb	r3, [r4, #128]
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 539              		.loc 1 469 3 view .LVU137
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 540              		.loc 1 471 3 view .LVU138
 541              	.LVL39:
 542              	.L33:
 472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 543              		.loc 1 472 1 is_stmt 0 view .LVU139
 544 007a 04B0     		add	sp, sp, #16
 545              		.cfi_remember_state
 546              		.cfi_def_cfa_offset 8
 547              		@ sp needed
 548 007c 10BD     		pop	{r4, pc}
 549              	.LVL40:
 550              	.L36:
 551              		.cfi_restore_state
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 552              		.loc 1 436 3 view .LVU140
 553 007e 0220     		movs	r0, #2
 554              	.LVL41:
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 555              		.loc 1 436 3 view .LVU141
 556 0080 FBE7     		b	.L33
 557              		.cfi_endproc
 558              	.LFE849:
 560              		.section	.text.HAL_UARTEx_EnableStopMode,"ax",%progbits
 561              		.align	1
 562              		.global	HAL_UARTEx_EnableStopMode
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu softvfp
 568              	HAL_UARTEx_EnableStopMode:
 569              	.LVL42:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 31


 570              	.LFB850:
 481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 571              		.loc 1 481 1 is_stmt 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 576              		.loc 1 483 3 view .LVU143
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 577              		.loc 1 483 3 view .LVU144
 578 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 579 0004 012B     		cmp	r3, #1
 580 0006 10D0     		beq	.L43
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 581              		.loc 1 483 3 discriminator 2 view .LVU145
 582 0008 0123     		movs	r3, #1
 583 000a 80F88030 		strb	r3, [r0, #128]
 584              	.L42:
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 585              		.loc 1 483 3 discriminator 1 view .LVU146
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 586              		.loc 1 486 3 discriminator 1 view .LVU147
 587              	.LBB22:
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 588              		.loc 1 486 3 discriminator 1 view .LVU148
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 589              		.loc 1 486 3 discriminator 1 view .LVU149
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 590              		.loc 1 486 3 discriminator 1 view .LVU150
 591 000e 0268     		ldr	r2, [r0]
 592              	.LVL43:
 593              	.LBB23:
 594              	.LBI23:
 595              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 32


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 33


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 34


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 35


 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 36


 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 37


 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 38


 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 39


 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 40


 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 41


 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 42


 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 43


 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 44


 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 45


 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 46


 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 47


 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 48


 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 49


 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 50


1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1095:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1096:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1097:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 51


1106:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1107:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1131:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1139:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1141:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1143:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 596              		.loc 2 1151 31 discriminator 1 view .LVU151
 597              	.LBB24:
1152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1153:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 598              		.loc 2 1153 5 discriminator 1 view .LVU152
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 599              		.loc 2 1155 4 discriminator 1 view .LVU153
 600              		.syntax unified
 601              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 602 0010 52E8003F 		ldrex r3, [r2]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 52


 603              	@ 0 "" 2
 604              	.LVL44:
1156:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 605              		.loc 2 1156 4 discriminator 1 view .LVU154
 606              		.loc 2 1156 4 is_stmt 0 discriminator 1 view .LVU155
 607              		.thumb
 608              		.syntax unified
 609              	.LBE24:
 610              	.LBE23:
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 611              		.loc 1 486 3 discriminator 1 view .LVU156
 612 0014 43F00203 		orr	r3, r3, #2
 613              	.LVL45:
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 614              		.loc 1 486 3 is_stmt 1 discriminator 1 view .LVU157
 615              	.LBB25:
 616              	.LBI25:
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1170:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1174:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1177:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1187:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1188:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 53


1197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 617              		.loc 2 1202 31 discriminator 1 view .LVU158
 618              	.LBB26:
1203:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1204:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 619              		.loc 2 1204 4 discriminator 1 view .LVU159
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 620              		.loc 2 1206 4 discriminator 1 view .LVU160
 621              		.syntax unified
 622              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 623 0018 42E80031 		strex r1, r3, [r2]
 624              	@ 0 "" 2
 625              	.LVL46:
1207:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 626              		.loc 2 1207 4 discriminator 1 view .LVU161
 627              		.loc 2 1207 4 is_stmt 0 discriminator 1 view .LVU162
 628              		.thumb
 629              		.syntax unified
 630              	.LBE26:
 631              	.LBE25:
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 632              		.loc 1 486 3 discriminator 1 view .LVU163
 633 001c 0029     		cmp	r1, #0
 634 001e F6D1     		bne	.L42
 635              	.LBE22:
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 636              		.loc 1 486 3 is_stmt 1 discriminator 2 view .LVU164
 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 637              		.loc 1 489 3 discriminator 2 view .LVU165
 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 638              		.loc 1 489 3 discriminator 2 view .LVU166
 639 0020 0023     		movs	r3, #0
 640              	.LVL47:
 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 641              		.loc 1 489 3 is_stmt 0 discriminator 2 view .LVU167
 642 0022 80F88030 		strb	r3, [r0, #128]
 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 643              		.loc 1 489 3 is_stmt 1 discriminator 2 view .LVU168
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 644              		.loc 1 491 3 discriminator 2 view .LVU169
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 645              		.loc 1 491 10 is_stmt 0 discriminator 2 view .LVU170
 646 0026 1846     		mov	r0, r3
 647              	.LVL48:
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 648              		.loc 1 491 10 discriminator 2 view .LVU171
 649 0028 7047     		bx	lr
 650              	.LVL49:
 651              	.L43:
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 652              		.loc 1 483 3 view .LVU172
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 54


 653 002a 0220     		movs	r0, #2
 654              	.LVL50:
 492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 655              		.loc 1 492 1 view .LVU173
 656 002c 7047     		bx	lr
 657              		.cfi_endproc
 658              	.LFE850:
 660              		.section	.text.HAL_UARTEx_DisableStopMode,"ax",%progbits
 661              		.align	1
 662              		.global	HAL_UARTEx_DisableStopMode
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu softvfp
 668              	HAL_UARTEx_DisableStopMode:
 669              	.LVL51:
 670              	.LFB851:
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   /* Process Locked */
 671              		.loc 1 500 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 676              		.loc 1 502 3 view .LVU175
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 677              		.loc 1 502 3 view .LVU176
 678 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 679 0004 012B     		cmp	r3, #1
 680 0006 10D0     		beq	.L47
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 681              		.loc 1 502 3 discriminator 2 view .LVU177
 682 0008 0123     		movs	r3, #1
 683 000a 80F88030 		strb	r3, [r0, #128]
 684              	.L46:
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 685              		.loc 1 502 3 discriminator 1 view .LVU178
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 686              		.loc 1 505 3 discriminator 1 view .LVU179
 687              	.LBB27:
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 688              		.loc 1 505 3 discriminator 1 view .LVU180
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 689              		.loc 1 505 3 discriminator 1 view .LVU181
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 690              		.loc 1 505 3 discriminator 1 view .LVU182
 691 000e 0268     		ldr	r2, [r0]
 692              	.LVL52:
 693              	.LBB28:
 694              	.LBI28:
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 695              		.loc 2 1151 31 discriminator 1 view .LVU183
 696              	.LBB29:
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 697              		.loc 2 1153 5 discriminator 1 view .LVU184
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 698              		.loc 2 1155 4 discriminator 1 view .LVU185
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 55


 699              		.syntax unified
 700              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 701 0010 52E8003F 		ldrex r3, [r2]
 702              	@ 0 "" 2
 703              	.LVL53:
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 704              		.loc 2 1156 4 discriminator 1 view .LVU186
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 705              		.loc 2 1156 4 is_stmt 0 discriminator 1 view .LVU187
 706              		.thumb
 707              		.syntax unified
 708              	.LBE29:
 709              	.LBE28:
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 710              		.loc 1 505 3 discriminator 1 view .LVU188
 711 0014 23F00203 		bic	r3, r3, #2
 712              	.LVL54:
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 713              		.loc 1 505 3 is_stmt 1 discriminator 1 view .LVU189
 714              	.LBB30:
 715              	.LBI30:
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 716              		.loc 2 1202 31 discriminator 1 view .LVU190
 717              	.LBB31:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 718              		.loc 2 1204 4 discriminator 1 view .LVU191
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 719              		.loc 2 1206 4 discriminator 1 view .LVU192
 720              		.syntax unified
 721              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 722 0018 42E80031 		strex r1, r3, [r2]
 723              	@ 0 "" 2
 724              	.LVL55:
 725              		.loc 2 1207 4 discriminator 1 view .LVU193
 726              		.loc 2 1207 4 is_stmt 0 discriminator 1 view .LVU194
 727              		.thumb
 728              		.syntax unified
 729              	.LBE31:
 730              	.LBE30:
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 731              		.loc 1 505 3 discriminator 1 view .LVU195
 732 001c 0029     		cmp	r1, #0
 733 001e F6D1     		bne	.L46
 734              	.LBE27:
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 735              		.loc 1 505 3 is_stmt 1 discriminator 2 view .LVU196
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 736              		.loc 1 508 3 discriminator 2 view .LVU197
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 737              		.loc 1 508 3 discriminator 2 view .LVU198
 738 0020 0023     		movs	r3, #0
 739              	.LVL56:
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 740              		.loc 1 508 3 is_stmt 0 discriminator 2 view .LVU199
 741 0022 80F88030 		strb	r3, [r0, #128]
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 742              		.loc 1 508 3 is_stmt 1 discriminator 2 view .LVU200
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 56


 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 743              		.loc 1 510 3 discriminator 2 view .LVU201
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 744              		.loc 1 510 10 is_stmt 0 discriminator 2 view .LVU202
 745 0026 1846     		mov	r0, r3
 746              	.LVL57:
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 747              		.loc 1 510 10 discriminator 2 view .LVU203
 748 0028 7047     		bx	lr
 749              	.LVL58:
 750              	.L47:
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 751              		.loc 1 502 3 view .LVU204
 752 002a 0220     		movs	r0, #2
 753              	.LVL59:
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 754              		.loc 1 511 1 view .LVU205
 755 002c 7047     		bx	lr
 756              		.cfi_endproc
 757              	.LFE851:
 759              		.section	.text.HAL_UARTEx_EnableFifoMode,"ax",%progbits
 760              		.align	1
 761              		.global	HAL_UARTEx_EnableFifoMode
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu softvfp
 767              	HAL_UARTEx_EnableFifoMode:
 768              	.LVL60:
 769              	.LFB852:
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 770              		.loc 1 519 1 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 774              		.loc 1 520 3 view .LVU207
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 775              		.loc 1 523 3 view .LVU208
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 776              		.loc 1 526 3 view .LVU209
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 777              		.loc 1 526 3 view .LVU210
 778 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 779 0004 012B     		cmp	r3, #1
 780 0006 1DD0     		beq	.L50
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 781              		.loc 1 519 1 is_stmt 0 discriminator 2 view .LVU211
 782 0008 10B5     		push	{r4, lr}
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 4, -8
 785              		.cfi_offset 14, -4
 786 000a 0446     		mov	r4, r0
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 787              		.loc 1 526 3 is_stmt 1 discriminator 2 view .LVU212
 788 000c 0123     		movs	r3, #1
 789 000e 80F88030 		strb	r3, [r0, #128]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 57


 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 790              		.loc 1 526 3 discriminator 2 view .LVU213
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 791              		.loc 1 528 3 discriminator 2 view .LVU214
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 792              		.loc 1 528 17 is_stmt 0 discriminator 2 view .LVU215
 793 0012 2423     		movs	r3, #36
 794 0014 C0F88430 		str	r3, [r0, #132]
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 795              		.loc 1 531 3 is_stmt 1 discriminator 2 view .LVU216
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 796              		.loc 1 531 12 is_stmt 0 discriminator 2 view .LVU217
 797 0018 0268     		ldr	r2, [r0]
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 798              		.loc 1 531 10 discriminator 2 view .LVU218
 799 001a 1368     		ldr	r3, [r2]
 800              	.LVL61:
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 801              		.loc 1 534 3 is_stmt 1 discriminator 2 view .LVU219
 802 001c 1168     		ldr	r1, [r2]
 803 001e 21F00101 		bic	r1, r1, #1
 804 0022 1160     		str	r1, [r2]
 537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_ENABLE;
 805              		.loc 1 537 3 discriminator 2 view .LVU220
 806 0024 43F00053 		orr	r3, r3, #536870912
 807              	.LVL62:
 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 808              		.loc 1 538 3 discriminator 2 view .LVU221
 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 809              		.loc 1 538 19 is_stmt 0 discriminator 2 view .LVU222
 810 0028 4FF00052 		mov	r2, #536870912
 811 002c 4266     		str	r2, [r0, #100]
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 812              		.loc 1 541 3 is_stmt 1 discriminator 2 view .LVU223
 813 002e 0268     		ldr	r2, [r0]
 814 0030 1360     		str	r3, [r2]
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 815              		.loc 1 544 3 discriminator 2 view .LVU224
 816 0032 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 817              	.LVL63:
 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 818              		.loc 1 546 3 discriminator 2 view .LVU225
 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 819              		.loc 1 546 17 is_stmt 0 discriminator 2 view .LVU226
 820 0036 2023     		movs	r3, #32
 821 0038 C4F88430 		str	r3, [r4, #132]
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 822              		.loc 1 549 3 is_stmt 1 discriminator 2 view .LVU227
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 823              		.loc 1 549 3 discriminator 2 view .LVU228
 824 003c 0020     		movs	r0, #0
 825 003e 84F88000 		strb	r0, [r4, #128]
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 826              		.loc 1 549 3 discriminator 2 view .LVU229
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 827              		.loc 1 551 3 discriminator 2 view .LVU230
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 58


 828              		.loc 1 552 1 is_stmt 0 discriminator 2 view .LVU231
 829 0042 10BD     		pop	{r4, pc}
 830              	.LVL64:
 831              	.L50:
 832              		.cfi_def_cfa_offset 0
 833              		.cfi_restore 4
 834              		.cfi_restore 14
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 835              		.loc 1 526 3 view .LVU232
 836 0044 0220     		movs	r0, #2
 837              	.LVL65:
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 838              		.loc 1 552 1 view .LVU233
 839 0046 7047     		bx	lr
 840              		.cfi_endproc
 841              	.LFE852:
 843              		.section	.text.HAL_UARTEx_DisableFifoMode,"ax",%progbits
 844              		.align	1
 845              		.global	HAL_UARTEx_DisableFifoMode
 846              		.syntax unified
 847              		.thumb
 848              		.thumb_func
 849              		.fpu softvfp
 851              	HAL_UARTEx_DisableFifoMode:
 852              	.LVL66:
 853              	.LFB853:
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 854              		.loc 1 560 1 is_stmt 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 859              		.loc 1 561 3 view .LVU235
 564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 860              		.loc 1 564 3 view .LVU236
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 861              		.loc 1 567 3 view .LVU237
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 862              		.loc 1 567 3 view .LVU238
 863 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 864 0004 012B     		cmp	r3, #1
 865 0006 18D0     		beq	.L57
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 866              		.loc 1 567 3 discriminator 2 view .LVU239
 867 0008 0123     		movs	r3, #1
 868 000a 80F88030 		strb	r3, [r0, #128]
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 869              		.loc 1 567 3 discriminator 2 view .LVU240
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 870              		.loc 1 569 3 discriminator 2 view .LVU241
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 871              		.loc 1 569 17 is_stmt 0 discriminator 2 view .LVU242
 872 000e 2423     		movs	r3, #36
 873 0010 C0F88430 		str	r3, [r0, #132]
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 874              		.loc 1 572 3 is_stmt 1 discriminator 2 view .LVU243
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 59


 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 875              		.loc 1 572 12 is_stmt 0 discriminator 2 view .LVU244
 876 0014 0368     		ldr	r3, [r0]
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 877              		.loc 1 572 10 discriminator 2 view .LVU245
 878 0016 1A68     		ldr	r2, [r3]
 879              	.LVL67:
 575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 880              		.loc 1 575 3 is_stmt 1 discriminator 2 view .LVU246
 881 0018 1968     		ldr	r1, [r3]
 882 001a 21F00101 		bic	r1, r1, #1
 883 001e 1960     		str	r1, [r3]
 578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_DISABLE;
 884              		.loc 1 578 3 discriminator 2 view .LVU247
 885 0020 22F00052 		bic	r2, r2, #536870912
 886              	.LVL68:
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 887              		.loc 1 579 3 discriminator 2 view .LVU248
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 888              		.loc 1 579 19 is_stmt 0 discriminator 2 view .LVU249
 889 0024 0023     		movs	r3, #0
 890 0026 4366     		str	r3, [r0, #100]
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 891              		.loc 1 582 3 is_stmt 1 discriminator 2 view .LVU250
 892 0028 0168     		ldr	r1, [r0]
 893 002a 0A60     		str	r2, [r1]
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 894              		.loc 1 584 3 discriminator 2 view .LVU251
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 895              		.loc 1 584 17 is_stmt 0 discriminator 2 view .LVU252
 896 002c 2022     		movs	r2, #32
 897              	.LVL69:
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 898              		.loc 1 584 17 discriminator 2 view .LVU253
 899 002e C0F88420 		str	r2, [r0, #132]
 900              	.LVL70:
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 901              		.loc 1 587 3 is_stmt 1 discriminator 2 view .LVU254
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 902              		.loc 1 587 3 discriminator 2 view .LVU255
 903 0032 80F88030 		strb	r3, [r0, #128]
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 904              		.loc 1 587 3 discriminator 2 view .LVU256
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 905              		.loc 1 589 3 discriminator 2 view .LVU257
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 906              		.loc 1 589 10 is_stmt 0 discriminator 2 view .LVU258
 907 0036 1846     		mov	r0, r3
 908              	.LVL71:
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 909              		.loc 1 589 10 discriminator 2 view .LVU259
 910 0038 7047     		bx	lr
 911              	.LVL72:
 912              	.L57:
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 913              		.loc 1 567 3 view .LVU260
 914 003a 0220     		movs	r0, #2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 60


 915              	.LVL73:
 590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 916              		.loc 1 590 1 view .LVU261
 917 003c 7047     		bx	lr
 918              		.cfi_endproc
 919              	.LFE853:
 921              		.section	.text.HAL_UARTEx_SetTxFifoThreshold,"ax",%progbits
 922              		.align	1
 923              		.global	HAL_UARTEx_SetTxFifoThreshold
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu softvfp
 929              	HAL_UARTEx_SetTxFifoThreshold:
 930              	.LVL74:
 931              	.LFB854:
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 932              		.loc 1 606 1 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 936              		.loc 1 606 1 is_stmt 0 view .LVU263
 937 0000 38B5     		push	{r3, r4, r5, lr}
 938              		.cfi_def_cfa_offset 16
 939              		.cfi_offset 3, -16
 940              		.cfi_offset 4, -12
 941              		.cfi_offset 5, -8
 942              		.cfi_offset 14, -4
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 943              		.loc 1 607 3 is_stmt 1 view .LVU264
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 944              		.loc 1 610 3 view .LVU265
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 945              		.loc 1 611 3 view .LVU266
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 946              		.loc 1 614 3 view .LVU267
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 947              		.loc 1 614 3 view .LVU268
 948 0002 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 949 0006 012B     		cmp	r3, #1
 950 0008 1DD0     		beq	.L60
 951 000a 0446     		mov	r4, r0
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 952              		.loc 1 614 3 discriminator 2 view .LVU269
 953 000c 0123     		movs	r3, #1
 954 000e 80F88030 		strb	r3, [r0, #128]
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 955              		.loc 1 614 3 discriminator 2 view .LVU270
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 956              		.loc 1 616 3 discriminator 2 view .LVU271
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 957              		.loc 1 616 17 is_stmt 0 discriminator 2 view .LVU272
 958 0012 2423     		movs	r3, #36
 959 0014 C0F88430 		str	r3, [r0, #132]
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 960              		.loc 1 619 3 is_stmt 1 discriminator 2 view .LVU273
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 61


 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 961              		.loc 1 619 12 is_stmt 0 discriminator 2 view .LVU274
 962 0018 0368     		ldr	r3, [r0]
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 963              		.loc 1 619 10 discriminator 2 view .LVU275
 964 001a 1D68     		ldr	r5, [r3]
 965              	.LVL75:
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 966              		.loc 1 622 3 is_stmt 1 discriminator 2 view .LVU276
 967 001c 1A68     		ldr	r2, [r3]
 968 001e 22F00102 		bic	r2, r2, #1
 969 0022 1A60     		str	r2, [r3]
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 970              		.loc 1 625 3 discriminator 2 view .LVU277
 971 0024 0268     		ldr	r2, [r0]
 972 0026 9368     		ldr	r3, [r2, #8]
 973 0028 23F06043 		bic	r3, r3, #-536870912
 974 002c 1943     		orrs	r1, r1, r3
 975              	.LVL76:
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 976              		.loc 1 625 3 is_stmt 0 discriminator 2 view .LVU278
 977 002e 9160     		str	r1, [r2, #8]
 628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 978              		.loc 1 628 3 is_stmt 1 discriminator 2 view .LVU279
 979 0030 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 980              	.LVL77:
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 981              		.loc 1 631 3 discriminator 2 view .LVU280
 982 0034 2368     		ldr	r3, [r4]
 983 0036 1D60     		str	r5, [r3]
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 984              		.loc 1 633 3 discriminator 2 view .LVU281
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 985              		.loc 1 633 17 is_stmt 0 discriminator 2 view .LVU282
 986 0038 2023     		movs	r3, #32
 987 003a C4F88430 		str	r3, [r4, #132]
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 988              		.loc 1 636 3 is_stmt 1 discriminator 2 view .LVU283
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 989              		.loc 1 636 3 discriminator 2 view .LVU284
 990 003e 0020     		movs	r0, #0
 991 0040 84F88000 		strb	r0, [r4, #128]
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 992              		.loc 1 636 3 discriminator 2 view .LVU285
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 993              		.loc 1 638 3 discriminator 2 view .LVU286
 994              	.LVL78:
 995              	.L59:
 639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 996              		.loc 1 639 1 is_stmt 0 view .LVU287
 997 0044 38BD     		pop	{r3, r4, r5, pc}
 998              	.LVL79:
 999              	.L60:
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1000              		.loc 1 614 3 view .LVU288
 1001 0046 0220     		movs	r0, #2
 1002              	.LVL80:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 62


 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1003              		.loc 1 614 3 view .LVU289
 1004 0048 FCE7     		b	.L59
 1005              		.cfi_endproc
 1006              	.LFE854:
 1008              		.section	.text.HAL_UARTEx_SetRxFifoThreshold,"ax",%progbits
 1009              		.align	1
 1010              		.global	HAL_UARTEx_SetRxFifoThreshold
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu softvfp
 1016              	HAL_UARTEx_SetRxFifoThreshold:
 1017              	.LVL81:
 1018              	.LFB855:
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 1019              		.loc 1 655 1 is_stmt 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tmpcr1;
 1023              		.loc 1 655 1 is_stmt 0 view .LVU291
 1024 0000 38B5     		push	{r3, r4, r5, lr}
 1025              		.cfi_def_cfa_offset 16
 1026              		.cfi_offset 3, -16
 1027              		.cfi_offset 4, -12
 1028              		.cfi_offset 5, -8
 1029              		.cfi_offset 14, -4
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1030              		.loc 1 656 3 is_stmt 1 view .LVU292
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 1031              		.loc 1 659 3 view .LVU293
 660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1032              		.loc 1 660 3 view .LVU294
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1033              		.loc 1 663 3 view .LVU295
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1034              		.loc 1 663 3 view .LVU296
 1035 0002 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1036 0006 012B     		cmp	r3, #1
 1037 0008 1DD0     		beq	.L64
 1038 000a 0446     		mov	r4, r0
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1039              		.loc 1 663 3 discriminator 2 view .LVU297
 1040 000c 0123     		movs	r3, #1
 1041 000e 80F88030 		strb	r3, [r0, #128]
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1042              		.loc 1 663 3 discriminator 2 view .LVU298
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1043              		.loc 1 665 3 discriminator 2 view .LVU299
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1044              		.loc 1 665 17 is_stmt 0 discriminator 2 view .LVU300
 1045 0012 2423     		movs	r3, #36
 1046 0014 C0F88430 		str	r3, [r0, #132]
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1047              		.loc 1 668 3 is_stmt 1 discriminator 2 view .LVU301
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 63


 1048              		.loc 1 668 12 is_stmt 0 discriminator 2 view .LVU302
 1049 0018 0368     		ldr	r3, [r0]
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1050              		.loc 1 668 10 discriminator 2 view .LVU303
 1051 001a 1D68     		ldr	r5, [r3]
 1052              	.LVL82:
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1053              		.loc 1 671 3 is_stmt 1 discriminator 2 view .LVU304
 1054 001c 1A68     		ldr	r2, [r3]
 1055 001e 22F00102 		bic	r2, r2, #1
 1056 0022 1A60     		str	r2, [r3]
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1057              		.loc 1 674 3 discriminator 2 view .LVU305
 1058 0024 0268     		ldr	r2, [r0]
 1059 0026 9368     		ldr	r3, [r2, #8]
 1060 0028 23F06063 		bic	r3, r3, #234881024
 1061 002c 1943     		orrs	r1, r1, r3
 1062              	.LVL83:
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1063              		.loc 1 674 3 is_stmt 0 discriminator 2 view .LVU306
 1064 002e 9160     		str	r1, [r2, #8]
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1065              		.loc 1 677 3 is_stmt 1 discriminator 2 view .LVU307
 1066 0030 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 1067              	.LVL84:
 680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1068              		.loc 1 680 3 discriminator 2 view .LVU308
 1069 0034 2368     		ldr	r3, [r4]
 1070 0036 1D60     		str	r5, [r3]
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1071              		.loc 1 682 3 discriminator 2 view .LVU309
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1072              		.loc 1 682 17 is_stmt 0 discriminator 2 view .LVU310
 1073 0038 2023     		movs	r3, #32
 1074 003a C4F88430 		str	r3, [r4, #132]
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1075              		.loc 1 685 3 is_stmt 1 discriminator 2 view .LVU311
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1076              		.loc 1 685 3 discriminator 2 view .LVU312
 1077 003e 0020     		movs	r0, #0
 1078 0040 84F88000 		strb	r0, [r4, #128]
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1079              		.loc 1 685 3 discriminator 2 view .LVU313
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** }
 1080              		.loc 1 687 3 discriminator 2 view .LVU314
 1081              	.LVL85:
 1082              	.L63:
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1083              		.loc 1 688 1 is_stmt 0 view .LVU315
 1084 0044 38BD     		pop	{r3, r4, r5, pc}
 1085              	.LVL86:
 1086              	.L64:
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1087              		.loc 1 663 3 view .LVU316
 1088 0046 0220     		movs	r0, #2
 1089              	.LVL87:
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 64


 1090              		.loc 1 663 3 view .LVU317
 1091 0048 FCE7     		b	.L63
 1092              		.cfi_endproc
 1093              	.LFE855:
 1095              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 1096              		.align	1
 1097              		.global	HAL_UARTEx_ReceiveToIdle
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu softvfp
 1103              	HAL_UARTEx_ReceiveToIdle:
 1104              	.LVL88:
 1105              	.LFB856:
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 1106              		.loc 1 715 1 is_stmt 1 view -0
 1107              		.cfi_startproc
 1108              		@ args = 4, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 1110              		.loc 1 715 1 is_stmt 0 view .LVU319
 1111 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1112              		.cfi_def_cfa_offset 32
 1113              		.cfi_offset 4, -32
 1114              		.cfi_offset 5, -28
 1115              		.cfi_offset 6, -24
 1116              		.cfi_offset 7, -20
 1117              		.cfi_offset 8, -16
 1118              		.cfi_offset 9, -12
 1119              		.cfi_offset 10, -8
 1120              		.cfi_offset 14, -4
 1121 0004 1D46     		mov	r5, r3
 1122 0006 089E     		ldr	r6, [sp, #32]
 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint16_t *pdata16bits;
 1123              		.loc 1 716 3 is_stmt 1 view .LVU320
 717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint16_t uhMask;
 1124              		.loc 1 717 3 view .LVU321
 718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   uint32_t tickstart;
 1125              		.loc 1 718 3 view .LVU322
 719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1126              		.loc 1 719 3 view .LVU323
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1127              		.loc 1 722 3 view .LVU324
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1128              		.loc 1 722 12 is_stmt 0 view .LVU325
 1129 0008 D0F88830 		ldr	r3, [r0, #136]
 1130              	.LVL89:
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1131              		.loc 1 722 6 view .LVU326
 1132 000c 202B     		cmp	r3, #32
 1133 000e 40F0A980 		bne	.L84
 1134 0012 0446     		mov	r4, r0
 1135 0014 0F46     		mov	r7, r1
 1136 0016 9146     		mov	r9, r2
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1137              		.loc 1 724 5 is_stmt 1 view .LVU327
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 65


 1138              		.loc 1 724 8 is_stmt 0 view .LVU328
 1139 0018 0029     		cmp	r1, #0
 1140 001a 00F0A680 		beq	.L85
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1141              		.loc 1 724 25 discriminator 1 view .LVU329
 1142 001e 002A     		cmp	r2, #0
 1143 0020 00F0A580 		beq	.L86
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1144              		.loc 1 742 5 is_stmt 1 view .LVU330
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1145              		.loc 1 742 5 view .LVU331
 1146 0024 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1147 0028 012B     		cmp	r3, #1
 1148 002a 00F0A280 		beq	.L87
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1149              		.loc 1 742 5 discriminator 2 view .LVU332
 1150 002e 0123     		movs	r3, #1
 1151 0030 80F88030 		strb	r3, [r0, #128]
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1152              		.loc 1 742 5 discriminator 2 view .LVU333
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1153              		.loc 1 744 5 discriminator 2 view .LVU334
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1154              		.loc 1 744 22 is_stmt 0 discriminator 2 view .LVU335
 1155 0034 0022     		movs	r2, #0
 1156              	.LVL90:
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1157              		.loc 1 744 22 discriminator 2 view .LVU336
 1158 0036 C0F88C20 		str	r2, [r0, #140]
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1159              		.loc 1 745 5 is_stmt 1 discriminator 2 view .LVU337
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1160              		.loc 1 745 20 is_stmt 0 discriminator 2 view .LVU338
 1161 003a 2222     		movs	r2, #34
 1162 003c C0F88820 		str	r2, [r0, #136]
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1163              		.loc 1 746 5 is_stmt 1 discriminator 2 view .LVU339
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1164              		.loc 1 746 26 is_stmt 0 discriminator 2 view .LVU340
 1165 0040 C366     		str	r3, [r0, #108]
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1166              		.loc 1 749 5 is_stmt 1 discriminator 2 view .LVU341
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1167              		.loc 1 749 17 is_stmt 0 discriminator 2 view .LVU342
 1168 0042 FFF7FEFF 		bl	HAL_GetTick
 1169              	.LVL91:
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1170              		.loc 1 749 17 discriminator 2 view .LVU343
 1171 0046 8046     		mov	r8, r0
 1172              	.LVL92:
 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 1173              		.loc 1 751 5 is_stmt 1 discriminator 2 view .LVU344
 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 1174              		.loc 1 751 24 is_stmt 0 discriminator 2 view .LVU345
 1175 0048 A4F85C90 		strh	r9, [r4, #92]	@ movhi
 752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1176              		.loc 1 752 5 is_stmt 1 discriminator 2 view .LVU346
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 66


 752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1177              		.loc 1 752 24 is_stmt 0 discriminator 2 view .LVU347
 1178 004c A4F85E90 		strh	r9, [r4, #94]	@ movhi
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1179              		.loc 1 755 5 is_stmt 1 discriminator 2 view .LVU348
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1180              		.loc 1 755 5 discriminator 2 view .LVU349
 1181 0050 A368     		ldr	r3, [r4, #8]
 1182 0052 B3F5805F 		cmp	r3, #4096
 1183 0056 06D0     		beq	.L91
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1184              		.loc 1 755 5 discriminator 2 view .LVU350
 1185 0058 A3B9     		cbnz	r3, .L71
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1186              		.loc 1 755 5 discriminator 5 view .LVU351
 1187 005a 2269     		ldr	r2, [r4, #16]
 1188 005c 72B9     		cbnz	r2, .L72
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1189              		.loc 1 755 5 discriminator 7 view .LVU352
 1190 005e FF22     		movs	r2, #255
 1191 0060 A4F86020 		strh	r2, [r4, #96]	@ movhi
 1192 0064 14E0     		b	.L70
 1193              	.L91:
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1194              		.loc 1 755 5 discriminator 1 view .LVU353
 1195 0066 2269     		ldr	r2, [r4, #16]
 1196 0068 22B9     		cbnz	r2, .L69
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1197              		.loc 1 755 5 discriminator 3 view .LVU354
 1198 006a 40F2FF12 		movw	r2, #511
 1199 006e A4F86020 		strh	r2, [r4, #96]	@ movhi
 1200 0072 0DE0     		b	.L70
 1201              	.L69:
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1202              		.loc 1 755 5 discriminator 4 view .LVU355
 1203 0074 FF22     		movs	r2, #255
 1204 0076 A4F86020 		strh	r2, [r4, #96]	@ movhi
 1205 007a 09E0     		b	.L70
 1206              	.L72:
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1207              		.loc 1 755 5 discriminator 8 view .LVU356
 1208 007c 7F22     		movs	r2, #127
 1209 007e A4F86020 		strh	r2, [r4, #96]	@ movhi
 1210 0082 05E0     		b	.L70
 1211              	.L71:
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1212              		.loc 1 755 5 discriminator 6 view .LVU357
 1213 0084 B3F1805F 		cmp	r3, #268435456
 1214 0088 0ED0     		beq	.L92
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1215              		.loc 1 755 5 discriminator 10 view .LVU358
 1216 008a 0022     		movs	r2, #0
 1217 008c A4F86020 		strh	r2, [r4, #96]	@ movhi
 1218              	.L70:
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1219              		.loc 1 755 5 discriminator 13 view .LVU359
 756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 67


 1220              		.loc 1 756 5 discriminator 13 view .LVU360
 756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1221              		.loc 1 756 12 is_stmt 0 discriminator 13 view .LVU361
 1222 0090 B4F86090 		ldrh	r9, [r4, #96]
 1223              	.LVL93:
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1224              		.loc 1 759 5 is_stmt 1 discriminator 13 view .LVU362
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1225              		.loc 1 759 8 is_stmt 0 discriminator 13 view .LVU363
 1226 0094 B3F5805F 		cmp	r3, #4096
 1227 0098 10D0     		beq	.L93
 767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1228              		.loc 1 767 19 view .LVU364
 1229 009a 4FF0000A 		mov	r10, #0
 1230              	.LVL94:
 1231              	.L75:
 770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1232              		.loc 1 770 5 is_stmt 1 view .LVU365
 770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1233              		.loc 1 770 5 view .LVU366
 1234 009e 0023     		movs	r3, #0
 1235 00a0 84F88030 		strb	r3, [r4, #128]
 770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1236              		.loc 1 770 5 view .LVU367
 773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1237              		.loc 1 773 5 view .LVU368
 773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1238              		.loc 1 773 12 is_stmt 0 view .LVU369
 1239 00a4 2B80     		strh	r3, [r5]	@ movhi
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1240              		.loc 1 776 5 is_stmt 1 view .LVU370
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1241              		.loc 1 776 11 is_stmt 0 view .LVU371
 1242 00a6 28E0     		b	.L76
 1243              	.LVL95:
 1244              	.L92:
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1245              		.loc 1 755 5 is_stmt 1 discriminator 9 view .LVU372
 1246 00a8 2269     		ldr	r2, [r4, #16]
 1247 00aa 1AB9     		cbnz	r2, .L74
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1248              		.loc 1 755 5 discriminator 11 view .LVU373
 1249 00ac 7F22     		movs	r2, #127
 1250 00ae A4F86020 		strh	r2, [r4, #96]	@ movhi
 1251 00b2 EDE7     		b	.L70
 1252              	.L74:
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1253              		.loc 1 755 5 discriminator 12 view .LVU374
 1254 00b4 3F22     		movs	r2, #63
 1255 00b6 A4F86020 		strh	r2, [r4, #96]	@ movhi
 1256 00ba E9E7     		b	.L70
 1257              	.LVL96:
 1258              	.L93:
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1259              		.loc 1 759 71 is_stmt 0 discriminator 1 view .LVU375
 1260 00bc 2369     		ldr	r3, [r4, #16]
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 68


 1261              		.loc 1 759 56 discriminator 1 view .LVU376
 1262 00be 13B1     		cbz	r3, .L89
 767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1263              		.loc 1 767 19 view .LVU377
 1264 00c0 4FF0000A 		mov	r10, #0
 1265 00c4 EBE7     		b	.L75
 1266              	.L89:
 762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1267              		.loc 1 762 19 view .LVU378
 1268 00c6 BA46     		mov	r10, r7
 761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 1269              		.loc 1 761 19 view .LVU379
 1270 00c8 0027     		movs	r7, #0
 1271              	.LVL97:
 761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 1272              		.loc 1 761 19 view .LVU380
 1273 00ca E8E7     		b	.L75
 1274              	.LVL98:
 1275              	.L96:
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1276              		.loc 1 788 11 is_stmt 1 view .LVU381
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1277              		.loc 1 788 26 is_stmt 0 view .LVU382
 1278 00cc 2023     		movs	r3, #32
 1279 00ce C4F88830 		str	r3, [r4, #136]
 790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 1280              		.loc 1 790 11 is_stmt 1 view .LVU383
 790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 1281              		.loc 1 790 18 is_stmt 0 view .LVU384
 1282 00d2 0020     		movs	r0, #0
 1283 00d4 47E0     		b	.L67
 1284              	.L97:
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata16bits++;
 1285              		.loc 1 799 11 is_stmt 1 view .LVU385
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata16bits++;
 1286              		.loc 1 799 52 is_stmt 0 view .LVU386
 1287 00d6 5B6A     		ldr	r3, [r3, #36]
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata16bits++;
 1288              		.loc 1 799 26 view .LVU387
 1289 00d8 09EA0303 		and	r3, r9, r3
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata16bits++;
 1290              		.loc 1 799 24 view .LVU388
 1291 00dc 2AF8023B 		strh	r3, [r10], #2	@ movhi
 1292              	.LVL99:
 800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 1293              		.loc 1 800 11 is_stmt 1 view .LVU389
 1294              	.L80:
 808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         huart->RxXferCount--;
 1295              		.loc 1 808 9 view .LVU390
 808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         huart->RxXferCount--;
 1296              		.loc 1 808 16 is_stmt 0 view .LVU391
 1297 00e0 2B88     		ldrh	r3, [r5]
 1298 00e2 0133     		adds	r3, r3, #1
 1299 00e4 2B80     		strh	r3, [r5]	@ movhi
 809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1300              		.loc 1 809 9 is_stmt 1 view .LVU392
 809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 69


 1301              		.loc 1 809 14 is_stmt 0 view .LVU393
 1302 00e6 B4F85E30 		ldrh	r3, [r4, #94]
 1303 00ea 9BB2     		uxth	r3, r3
 809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1304              		.loc 1 809 27 view .LVU394
 1305 00ec 013B     		subs	r3, r3, #1
 1306 00ee 9BB2     		uxth	r3, r3
 1307 00f0 A4F85E30 		strh	r3, [r4, #94]	@ movhi
 1308              	.L78:
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1309              		.loc 1 813 7 is_stmt 1 view .LVU395
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1310              		.loc 1 813 10 is_stmt 0 view .LVU396
 1311 00f4 B6F1FF3F 		cmp	r6, #-1
 1312 00f8 1BD1     		bne	.L94
 1313              	.L76:
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1314              		.loc 1 776 11 is_stmt 1 view .LVU397
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1315              		.loc 1 776 17 is_stmt 0 view .LVU398
 1316 00fa B4F85E20 		ldrh	r2, [r4, #94]
 1317 00fe 92B2     		uxth	r2, r2
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1318              		.loc 1 776 11 view .LVU399
 1319 0100 22B3     		cbz	r2, .L95
 779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1320              		.loc 1 779 7 is_stmt 1 view .LVU400
 779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1321              		.loc 1 779 11 is_stmt 0 view .LVU401
 1322 0102 2368     		ldr	r3, [r4]
 1323 0104 DA69     		ldr	r2, [r3, #28]
 779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1324              		.loc 1 779 10 view .LVU402
 1325 0106 12F0100F 		tst	r2, #16
 1326 010a 04D0     		beq	.L77
 782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1327              		.loc 1 782 9 is_stmt 1 view .LVU403
 1328 010c 1022     		movs	r2, #16
 1329 010e 1A62     		str	r2, [r3, #32]
 786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1330              		.loc 1 786 9 view .LVU404
 786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1331              		.loc 1 786 13 is_stmt 0 view .LVU405
 1332 0110 2B88     		ldrh	r3, [r5]
 786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1333              		.loc 1 786 12 view .LVU406
 1334 0112 002B     		cmp	r3, #0
 1335 0114 DAD1     		bne	.L96
 1336              	.L77:
 795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1337              		.loc 1 795 7 is_stmt 1 view .LVU407
 795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1338              		.loc 1 795 11 is_stmt 0 view .LVU408
 1339 0116 2368     		ldr	r3, [r4]
 1340 0118 DA69     		ldr	r2, [r3, #28]
 795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1341              		.loc 1 795 10 view .LVU409
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 70


 1342 011a 12F0200F 		tst	r2, #32
 1343 011e E9D0     		beq	.L78
 797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1344              		.loc 1 797 9 is_stmt 1 view .LVU410
 797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1345              		.loc 1 797 12 is_stmt 0 view .LVU411
 1346 0120 002F     		cmp	r7, #0
 1347 0122 D8D0     		beq	.L97
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata8bits++;
 1348              		.loc 1 804 11 is_stmt 1 view .LVU412
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata8bits++;
 1349              		.loc 1 804 50 is_stmt 0 view .LVU413
 1350 0124 5A6A     		ldr	r2, [r3, #36]
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata8bits++;
 1351              		.loc 1 804 58 view .LVU414
 1352 0126 5FFA89F3 		uxtb	r3, r9
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata8bits++;
 1353              		.loc 1 804 25 view .LVU415
 1354 012a 1340     		ands	r3, r3, r2
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****           pdata8bits++;
 1355              		.loc 1 804 23 view .LVU416
 1356 012c 07F8013B 		strb	r3, [r7], #1
 1357              	.LVL100:
 805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 1358              		.loc 1 805 11 is_stmt 1 view .LVU417
 805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 1359              		.loc 1 805 11 is_stmt 0 view .LVU418
 1360 0130 D6E7     		b	.L80
 1361              	.L94:
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1362              		.loc 1 815 9 is_stmt 1 view .LVU419
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1363              		.loc 1 815 15 is_stmt 0 view .LVU420
 1364 0132 FFF7FEFF 		bl	HAL_GetTick
 1365              	.LVL101:
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1366              		.loc 1 815 29 view .LVU421
 1367 0136 A0EB0800 		sub	r0, r0, r8
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1368              		.loc 1 815 12 view .LVU422
 1369 013a B042     		cmp	r0, r6
 1370 013c 01D8     		bhi	.L82
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         {
 1371              		.loc 1 815 53 discriminator 1 view .LVU423
 1372 013e 002E     		cmp	r6, #0
 1373 0140 DBD1     		bne	.L76
 1374              	.L82:
 817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1375              		.loc 1 817 11 is_stmt 1 view .LVU424
 817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1376              		.loc 1 817 26 is_stmt 0 view .LVU425
 1377 0142 2023     		movs	r3, #32
 1378 0144 C4F88830 		str	r3, [r4, #136]
 819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 1379              		.loc 1 819 11 is_stmt 1 view .LVU426
 819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         }
 1380              		.loc 1 819 18 is_stmt 0 view .LVU427
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 71


 1381 0148 0320     		movs	r0, #3
 1382 014a 0CE0     		b	.L67
 1383              	.L95:
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1384              		.loc 1 825 5 is_stmt 1 view .LVU428
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1385              		.loc 1 825 19 is_stmt 0 view .LVU429
 1386 014c B4F85C30 		ldrh	r3, [r4, #92]
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1387              		.loc 1 825 39 view .LVU430
 1388 0150 B4F85E20 		ldrh	r2, [r4, #94]
 1389 0154 92B2     		uxth	r2, r2
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1390              		.loc 1 825 32 view .LVU431
 1391 0156 9B1A     		subs	r3, r3, r2
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1392              		.loc 1 825 12 view .LVU432
 1393 0158 2B80     		strh	r3, [r5]	@ movhi
 827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1394              		.loc 1 827 5 is_stmt 1 view .LVU433
 827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1395              		.loc 1 827 20 is_stmt 0 view .LVU434
 1396 015a 2023     		movs	r3, #32
 1397 015c C4F88830 		str	r3, [r4, #136]
 829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1398              		.loc 1 829 5 is_stmt 1 view .LVU435
 829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1399              		.loc 1 829 12 is_stmt 0 view .LVU436
 1400 0160 0020     		movs	r0, #0
 1401 0162 00E0     		b	.L67
 1402              	.LVL102:
 1403              	.L84:
 833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1404              		.loc 1 833 12 view .LVU437
 1405 0164 0220     		movs	r0, #2
 1406              	.LVL103:
 1407              	.L67:
 835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1408              		.loc 1 835 1 view .LVU438
 1409 0166 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1410              	.LVL104:
 1411              	.L85:
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1412              		.loc 1 726 15 view .LVU439
 1413 016a 0120     		movs	r0, #1
 1414              	.LVL105:
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1415              		.loc 1 726 15 view .LVU440
 1416 016c FBE7     		b	.L67
 1417              	.LVL106:
 1418              	.L86:
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1419              		.loc 1 726 15 view .LVU441
 1420 016e 0120     		movs	r0, #1
 1421              	.LVL107:
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1422              		.loc 1 726 15 view .LVU442
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 72


 1423 0170 F9E7     		b	.L67
 1424              	.LVL108:
 1425              	.L87:
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1426              		.loc 1 742 5 view .LVU443
 1427 0172 0220     		movs	r0, #2
 1428              	.LVL109:
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1429              		.loc 1 742 5 view .LVU444
 1430 0174 F7E7     		b	.L67
 1431              		.cfi_endproc
 1432              	.LFE856:
 1434              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 1435              		.align	1
 1436              		.global	HAL_UARTEx_ReceiveToIdle_IT
 1437              		.syntax unified
 1438              		.thumb
 1439              		.thumb_func
 1440              		.fpu softvfp
 1442              	HAL_UARTEx_ReceiveToIdle_IT:
 1443              	.LVL110:
 1444              	.LFB857:
 856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1445              		.loc 1 856 1 is_stmt 1 view -0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
 857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1449              		.loc 1 857 3 view .LVU446
 860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1450              		.loc 1 860 3 view .LVU447
 860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1451              		.loc 1 860 12 is_stmt 0 view .LVU448
 1452 0000 D0F88830 		ldr	r3, [r0, #136]
 860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1453              		.loc 1 860 6 view .LVU449
 1454 0004 202B     		cmp	r3, #32
 1455 0006 20D1     		bne	.L102
 856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1456              		.loc 1 856 1 view .LVU450
 1457 0008 10B5     		push	{r4, lr}
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 4, -8
 1460              		.cfi_offset 14, -4
 1461 000a 0446     		mov	r4, r0
 862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1462              		.loc 1 862 5 is_stmt 1 view .LVU451
 862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1463              		.loc 1 862 8 is_stmt 0 view .LVU452
 1464 000c F9B1     		cbz	r1, .L103
 862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1465              		.loc 1 862 25 discriminator 1 view .LVU453
 1466 000e 02B3     		cbz	r2, .L104
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1467              		.loc 1 880 5 is_stmt 1 view .LVU454
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1468              		.loc 1 880 5 view .LVU455
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 73


 1469 0010 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1470 0014 012B     		cmp	r3, #1
 1471 0016 1ED0     		beq	.L105
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1472              		.loc 1 880 5 discriminator 2 view .LVU456
 1473 0018 0123     		movs	r3, #1
 1474 001a 80F88030 		strb	r3, [r0, #128]
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1475              		.loc 1 880 5 discriminator 2 view .LVU457
 883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1476              		.loc 1 883 5 discriminator 2 view .LVU458
 883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1477              		.loc 1 883 26 is_stmt 0 discriminator 2 view .LVU459
 1478 001e C366     		str	r3, [r0, #108]
 885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1479              		.loc 1 885 5 is_stmt 1 discriminator 2 view .LVU460
 885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1480              		.loc 1 885 15 is_stmt 0 discriminator 2 view .LVU461
 1481 0020 FFF7FEFF 		bl	UART_Start_Receive_IT
 1482              	.LVL111:
 888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1483              		.loc 1 888 5 is_stmt 1 discriminator 2 view .LVU462
 888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1484              		.loc 1 888 8 is_stmt 0 discriminator 2 view .LVU463
 1485 0024 B0B9     		cbnz	r0, .L99
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1486              		.loc 1 890 7 is_stmt 1 view .LVU464
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1487              		.loc 1 890 16 is_stmt 0 view .LVU465
 1488 0026 E36E     		ldr	r3, [r4, #108]
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1489              		.loc 1 890 10 view .LVU466
 1490 0028 012B     		cmp	r3, #1
 1491 002a 01D0     		beq	.L111
 901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1492              		.loc 1 901 16 view .LVU467
 1493 002c 0120     		movs	r0, #1
 1494              	.LVL112:
 905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1495              		.loc 1 905 5 is_stmt 1 view .LVU468
 905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1496              		.loc 1 905 12 is_stmt 0 view .LVU469
 1497 002e 11E0     		b	.L99
 1498              	.LVL113:
 1499              	.L111:
 892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 1500              		.loc 1 892 9 is_stmt 1 view .LVU470
 1501 0030 2368     		ldr	r3, [r4]
 1502 0032 1022     		movs	r2, #16
 1503 0034 1A62     		str	r2, [r3, #32]
 1504              	.L101:
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1505              		.loc 1 893 9 discriminator 1 view .LVU471
 1506              	.LBB32:
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1507              		.loc 1 893 9 discriminator 1 view .LVU472
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 74


 1508              		.loc 1 893 9 discriminator 1 view .LVU473
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1509              		.loc 1 893 9 discriminator 1 view .LVU474
 1510 0036 2268     		ldr	r2, [r4]
 1511              	.LVL114:
 1512              	.LBB33:
 1513              	.LBI33:
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1514              		.loc 2 1151 31 discriminator 1 view .LVU475
 1515              	.LBB34:
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1516              		.loc 2 1153 5 discriminator 1 view .LVU476
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1517              		.loc 2 1155 4 discriminator 1 view .LVU477
 1518              		.syntax unified
 1519              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1520 0038 52E8003F 		ldrex r3, [r2]
 1521              	@ 0 "" 2
 1522              	.LVL115:
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1523              		.loc 2 1156 4 discriminator 1 view .LVU478
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1524              		.loc 2 1156 4 is_stmt 0 discriminator 1 view .LVU479
 1525              		.thumb
 1526              		.syntax unified
 1527              	.LBE34:
 1528              	.LBE33:
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1529              		.loc 1 893 9 discriminator 1 view .LVU480
 1530 003c 43F01003 		orr	r3, r3, #16
 1531              	.LVL116:
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1532              		.loc 1 893 9 is_stmt 1 discriminator 1 view .LVU481
 1533              	.LBB35:
 1534              	.LBI35:
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1535              		.loc 2 1202 31 discriminator 1 view .LVU482
 1536              	.LBB36:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1537              		.loc 2 1204 4 discriminator 1 view .LVU483
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1538              		.loc 2 1206 4 discriminator 1 view .LVU484
 1539              		.syntax unified
 1540              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1541 0040 42E80031 		strex r1, r3, [r2]
 1542              	@ 0 "" 2
 1543              	.LVL117:
 1544              		.loc 2 1207 4 discriminator 1 view .LVU485
 1545              		.loc 2 1207 4 is_stmt 0 discriminator 1 view .LVU486
 1546              		.thumb
 1547              		.syntax unified
 1548              	.LBE36:
 1549              	.LBE35:
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1550              		.loc 1 893 9 discriminator 1 view .LVU487
 1551 0044 0029     		cmp	r1, #0
 1552 0046 F6D1     		bne	.L101
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 75


 1553 0048 04E0     		b	.L99
 1554              	.LVL118:
 1555              	.L102:
 1556              		.cfi_def_cfa_offset 0
 1557              		.cfi_restore 4
 1558              		.cfi_restore 14
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1559              		.loc 1 893 9 discriminator 1 view .LVU488
 1560              	.LBE32:
 909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1561              		.loc 1 909 12 view .LVU489
 1562 004a 0220     		movs	r0, #2
 1563              	.LVL119:
 911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1564              		.loc 1 911 1 view .LVU490
 1565 004c 7047     		bx	lr
 1566              	.LVL120:
 1567              	.L103:
 1568              		.cfi_def_cfa_offset 8
 1569              		.cfi_offset 4, -8
 1570              		.cfi_offset 14, -4
 864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1571              		.loc 1 864 14 view .LVU491
 1572 004e 0120     		movs	r0, #1
 1573              	.LVL121:
 864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1574              		.loc 1 864 14 view .LVU492
 1575 0050 00E0     		b	.L99
 1576              	.LVL122:
 1577              	.L104:
 864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1578              		.loc 1 864 14 view .LVU493
 1579 0052 0120     		movs	r0, #1
 1580              	.LVL123:
 1581              	.L99:
 911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1582              		.loc 1 911 1 view .LVU494
 1583 0054 10BD     		pop	{r4, pc}
 1584              	.LVL124:
 1585              	.L105:
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1586              		.loc 1 880 5 view .LVU495
 1587 0056 0220     		movs	r0, #2
 1588              	.LVL125:
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1589              		.loc 1 880 5 view .LVU496
 1590 0058 FCE7     		b	.L99
 1591              		.cfi_endproc
 1592              	.LFE857:
 1594              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 1595              		.align	1
 1596              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1600              		.fpu softvfp
 1602              	HAL_UARTEx_ReceiveToIdle_DMA:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 76


 1603              	.LVL126:
 1604              	.LFB858:
 935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1605              		.loc 1 935 1 is_stmt 1 view -0
 1606              		.cfi_startproc
 1607              		@ args = 0, pretend = 0, frame = 0
 1608              		@ frame_needed = 0, uses_anonymous_args = 0
 936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1609              		.loc 1 936 3 view .LVU498
 939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1610              		.loc 1 939 3 view .LVU499
 939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1611              		.loc 1 939 12 is_stmt 0 view .LVU500
 1612 0000 D0F88830 		ldr	r3, [r0, #136]
 939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   {
 1613              		.loc 1 939 6 view .LVU501
 1614 0004 202B     		cmp	r3, #32
 1615 0006 20D1     		bne	.L116
 935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1616              		.loc 1 935 1 view .LVU502
 1617 0008 10B5     		push	{r4, lr}
 1618              		.cfi_def_cfa_offset 8
 1619              		.cfi_offset 4, -8
 1620              		.cfi_offset 14, -4
 1621 000a 0446     		mov	r4, r0
 941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1622              		.loc 1 941 5 is_stmt 1 view .LVU503
 941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1623              		.loc 1 941 8 is_stmt 0 view .LVU504
 1624 000c F9B1     		cbz	r1, .L117
 941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1625              		.loc 1 941 25 discriminator 1 view .LVU505
 1626 000e 02B3     		cbz	r2, .L118
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1627              		.loc 1 959 5 is_stmt 1 view .LVU506
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1628              		.loc 1 959 5 view .LVU507
 1629 0010 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1630 0014 012B     		cmp	r3, #1
 1631 0016 1ED0     		beq	.L119
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1632              		.loc 1 959 5 discriminator 2 view .LVU508
 1633 0018 0123     		movs	r3, #1
 1634 001a 80F88030 		strb	r3, [r0, #128]
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1635              		.loc 1 959 5 discriminator 2 view .LVU509
 962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1636              		.loc 1 962 5 discriminator 2 view .LVU510
 962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1637              		.loc 1 962 26 is_stmt 0 discriminator 2 view .LVU511
 1638 001e C366     		str	r3, [r0, #108]
 964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1639              		.loc 1 964 5 is_stmt 1 discriminator 2 view .LVU512
 964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1640              		.loc 1 964 15 is_stmt 0 discriminator 2 view .LVU513
 1641 0020 FFF7FEFF 		bl	UART_Start_Receive_DMA
 1642              	.LVL127:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 77


 967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1643              		.loc 1 967 5 is_stmt 1 discriminator 2 view .LVU514
 967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     {
 1644              		.loc 1 967 8 is_stmt 0 discriminator 2 view .LVU515
 1645 0024 B0B9     		cbnz	r0, .L113
 969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1646              		.loc 1 969 7 is_stmt 1 view .LVU516
 969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1647              		.loc 1 969 16 is_stmt 0 view .LVU517
 1648 0026 E36E     		ldr	r3, [r4, #108]
 969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       {
 1649              		.loc 1 969 10 view .LVU518
 1650 0028 012B     		cmp	r3, #1
 1651 002a 01D0     		beq	.L125
 980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1652              		.loc 1 980 16 view .LVU519
 1653 002c 0120     		movs	r0, #1
 1654              	.LVL128:
 984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1655              		.loc 1 984 5 is_stmt 1 view .LVU520
 984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1656              		.loc 1 984 12 is_stmt 0 view .LVU521
 1657 002e 11E0     		b	.L113
 1658              	.LVL129:
 1659              	.L125:
 971:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 1660              		.loc 1 971 9 is_stmt 1 view .LVU522
 1661 0030 2368     		ldr	r3, [r4]
 1662 0032 1022     		movs	r2, #16
 1663 0034 1A62     		str	r2, [r3, #32]
 1664              	.L115:
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1665              		.loc 1 972 9 discriminator 1 view .LVU523
 1666              	.LBB37:
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1667              		.loc 1 972 9 discriminator 1 view .LVU524
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1668              		.loc 1 972 9 discriminator 1 view .LVU525
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1669              		.loc 1 972 9 discriminator 1 view .LVU526
 1670 0036 2268     		ldr	r2, [r4]
 1671              	.LVL130:
 1672              	.LBB38:
 1673              	.LBI38:
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1674              		.loc 2 1151 31 discriminator 1 view .LVU527
 1675              	.LBB39:
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1676              		.loc 2 1153 5 discriminator 1 view .LVU528
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1677              		.loc 2 1155 4 discriminator 1 view .LVU529
 1678              		.syntax unified
 1679              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1680 0038 52E8003F 		ldrex r3, [r2]
 1681              	@ 0 "" 2
 1682              	.LVL131:
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 78


 1683              		.loc 2 1156 4 discriminator 1 view .LVU530
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1684              		.loc 2 1156 4 is_stmt 0 discriminator 1 view .LVU531
 1685              		.thumb
 1686              		.syntax unified
 1687              	.LBE39:
 1688              	.LBE38:
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1689              		.loc 1 972 9 discriminator 1 view .LVU532
 1690 003c 43F01003 		orr	r3, r3, #16
 1691              	.LVL132:
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1692              		.loc 1 972 9 is_stmt 1 discriminator 1 view .LVU533
 1693              	.LBB40:
 1694              	.LBI40:
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1695              		.loc 2 1202 31 discriminator 1 view .LVU534
 1696              	.LBB41:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1697              		.loc 2 1204 4 discriminator 1 view .LVU535
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1698              		.loc 2 1206 4 discriminator 1 view .LVU536
 1699              		.syntax unified
 1700              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1701 0040 42E80031 		strex r1, r3, [r2]
 1702              	@ 0 "" 2
 1703              	.LVL133:
 1704              		.loc 2 1207 4 discriminator 1 view .LVU537
 1705              		.loc 2 1207 4 is_stmt 0 discriminator 1 view .LVU538
 1706              		.thumb
 1707              		.syntax unified
 1708              	.LBE41:
 1709              	.LBE40:
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1710              		.loc 1 972 9 discriminator 1 view .LVU539
 1711 0044 0029     		cmp	r1, #0
 1712 0046 F6D1     		bne	.L115
 1713 0048 04E0     		b	.L113
 1714              	.LVL134:
 1715              	.L116:
 1716              		.cfi_def_cfa_offset 0
 1717              		.cfi_restore 4
 1718              		.cfi_restore 14
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****       }
 1719              		.loc 1 972 9 discriminator 1 view .LVU540
 1720              	.LBE37:
 988:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****   }
 1721              		.loc 1 988 12 view .LVU541
 1722 004a 0220     		movs	r0, #2
 1723              	.LVL135:
 990:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1724              		.loc 1 990 1 view .LVU542
 1725 004c 7047     		bx	lr
 1726              	.LVL136:
 1727              	.L117:
 1728              		.cfi_def_cfa_offset 8
 1729              		.cfi_offset 4, -8
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 79


 1730              		.cfi_offset 14, -4
 943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1731              		.loc 1 943 14 view .LVU543
 1732 004e 0120     		movs	r0, #1
 1733              	.LVL137:
 943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1734              		.loc 1 943 14 view .LVU544
 1735 0050 00E0     		b	.L113
 1736              	.LVL138:
 1737              	.L118:
 943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c ****     }
 1738              		.loc 1 943 14 view .LVU545
 1739 0052 0120     		movs	r0, #1
 1740              	.LVL139:
 1741              	.L113:
 990:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1742              		.loc 1 990 1 view .LVU546
 1743 0054 10BD     		pop	{r4, pc}
 1744              	.LVL140:
 1745              	.L119:
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1746              		.loc 1 959 5 view .LVU547
 1747 0056 0220     		movs	r0, #2
 1748              	.LVL141:
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_uart_ex.c **** 
 1749              		.loc 1 959 5 view .LVU548
 1750 0058 FCE7     		b	.L113
 1751              		.cfi_endproc
 1752              	.LFE858:
 1754              		.section	.rodata.denominator.0,"a"
 1755              		.align	2
 1756              		.set	.LANCHOR1,. + 0
 1759              	denominator.0:
 1760 0000 08040204 		.ascii	"\010\004\002\004\010\001\001\001"
 1760      08010101 
 1761              		.section	.rodata.numerator.1,"a"
 1762              		.align	2
 1763              		.set	.LANCHOR0,. + 0
 1766              	numerator.1:
 1767 0000 01010103 		.ascii	"\001\001\001\003\007\001\000\000"
 1767      07010000 
 1768              		.text
 1769              	.Letext0:
 1770              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 1771              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 1772              		.file 5 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 1773              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wlxx.h"
 1774              		.file 7 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 1775              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_dma.h"
 1776              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_uart.h"
 1777              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_uart_ex.h"
 1778              		.file 11 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 1779              		.file 12 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s 			page 80


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wlxx_hal_uart_ex.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:16     .text.UARTEx_Wakeup_AddressConfig:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:23     .text.UARTEx_Wakeup_AddressConfig:0000000000000000 UARTEx_Wakeup_AddressConfig
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:61     .text.UARTEx_SetNbDataToProcess:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:67     .text.UARTEx_SetNbDataToProcess:0000000000000000 UARTEx_SetNbDataToProcess
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:151    .text.UARTEx_SetNbDataToProcess:0000000000000044 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:157    .text.HAL_RS485Ex_Init:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:164    .text.HAL_RS485Ex_Init:0000000000000000 HAL_RS485Ex_Init
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:298    .text.HAL_UARTEx_WakeupCallback:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:305    .text.HAL_UARTEx_WakeupCallback:0000000000000000 HAL_UARTEx_WakeupCallback
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:320    .text.HAL_UARTEx_RxFifoFullCallback:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:327    .text.HAL_UARTEx_RxFifoFullCallback:0000000000000000 HAL_UARTEx_RxFifoFullCallback
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:342    .text.HAL_UARTEx_TxFifoEmptyCallback:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:349    .text.HAL_UARTEx_TxFifoEmptyCallback:0000000000000000 HAL_UARTEx_TxFifoEmptyCallback
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:364    .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:371    .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 HAL_MultiProcessorEx_AddressLength_Set
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:433    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:440    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:0000000000000000 HAL_UARTEx_StopModeWakeUpSourceConfig
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:561    .text.HAL_UARTEx_EnableStopMode:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:568    .text.HAL_UARTEx_EnableStopMode:0000000000000000 HAL_UARTEx_EnableStopMode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:661    .text.HAL_UARTEx_DisableStopMode:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:668    .text.HAL_UARTEx_DisableStopMode:0000000000000000 HAL_UARTEx_DisableStopMode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:760    .text.HAL_UARTEx_EnableFifoMode:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:767    .text.HAL_UARTEx_EnableFifoMode:0000000000000000 HAL_UARTEx_EnableFifoMode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:844    .text.HAL_UARTEx_DisableFifoMode:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:851    .text.HAL_UARTEx_DisableFifoMode:0000000000000000 HAL_UARTEx_DisableFifoMode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:922    .text.HAL_UARTEx_SetTxFifoThreshold:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:929    .text.HAL_UARTEx_SetTxFifoThreshold:0000000000000000 HAL_UARTEx_SetTxFifoThreshold
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1009   .text.HAL_UARTEx_SetRxFifoThreshold:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1016   .text.HAL_UARTEx_SetRxFifoThreshold:0000000000000000 HAL_UARTEx_SetRxFifoThreshold
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1096   .text.HAL_UARTEx_ReceiveToIdle:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1103   .text.HAL_UARTEx_ReceiveToIdle:0000000000000000 HAL_UARTEx_ReceiveToIdle
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1435   .text.HAL_UARTEx_ReceiveToIdle_IT:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1442   .text.HAL_UARTEx_ReceiveToIdle_IT:0000000000000000 HAL_UARTEx_ReceiveToIdle_IT
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1595   .text.HAL_UARTEx_ReceiveToIdle_DMA:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1602   .text.HAL_UARTEx_ReceiveToIdle_DMA:0000000000000000 HAL_UARTEx_ReceiveToIdle_DMA
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1755   .rodata.denominator.0:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1759   .rodata.denominator.0:0000000000000000 denominator.0
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1762   .rodata.numerator.1:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjB3NkM.s:1766   .rodata.numerator.1:0000000000000000 numerator.1

UNDEFINED SYMBOLS
UART_SetConfig
UART_CheckIdleState
HAL_UART_MspInit
UART_AdvFeatureConfig
HAL_GetTick
UART_WaitOnFlagUntilTimeout
UART_Start_Receive_IT
UART_Start_Receive_DMA
