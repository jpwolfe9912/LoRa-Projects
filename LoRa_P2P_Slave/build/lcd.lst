ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"lcd.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.expanderWrite,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	expanderWrite:
  24              	.LVL0:
  25              	.LFB1187:
  26              		.file 1 "Core/Src/lcd.c"
   1:Core/Src/lcd.c **** /** @file 		lcd.c
   2:Core/Src/lcd.c ****  *  @brief
   3:Core/Src/lcd.c ****  *
   4:Core/Src/lcd.c ****  *
   5:Core/Src/lcd.c ****  *  @author 	jeremywolfe
   6:Core/Src/lcd.c ****  *  @date 		Aug 13, 2022
   7:Core/Src/lcd.c ****  */
   8:Core/Src/lcd.c **** #include "lcd.h"
   9:Core/Src/lcd.c **** 
  10:Core/Src/lcd.c **** uint8_t _addr;
  11:Core/Src/lcd.c **** uint8_t _displayfunction;
  12:Core/Src/lcd.c **** uint8_t _displaycontrol;
  13:Core/Src/lcd.c **** uint8_t _displaymode;
  14:Core/Src/lcd.c **** uint8_t _cols = COLS;
  15:Core/Src/lcd.c **** uint8_t _rows = ROWS;
  16:Core/Src/lcd.c **** uint8_t _charsize;
  17:Core/Src/lcd.c **** uint8_t _backlightval;
  18:Core/Src/lcd.c **** 
  19:Core/Src/lcd.c **** /* Function Prototypes */
  20:Core/Src/lcd.c **** static void send(uint8_t, uint8_t);
  21:Core/Src/lcd.c **** static void write4bits(uint8_t);
  22:Core/Src/lcd.c **** static void expanderWrite(uint8_t);
  23:Core/Src/lcd.c **** static void pulseEnable(uint8_t);
  24:Core/Src/lcd.c **** 
  25:Core/Src/lcd.c **** static inline void command(uint8_t value);
  26:Core/Src/lcd.c **** static inline size_t write(uint8_t value);
  27:Core/Src/lcd.c **** 
  28:Core/Src/lcd.c **** void lcdInit()
  29:Core/Src/lcd.c **** {
  30:Core/Src/lcd.c **** 	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
  31:Core/Src/lcd.c **** 
  32:Core/Src/lcd.c **** 	if (ROWS > 1)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 2


  33:Core/Src/lcd.c **** 	{
  34:Core/Src/lcd.c **** 		_displayfunction |= LCD_2LINE;
  35:Core/Src/lcd.c **** 	}
  36:Core/Src/lcd.c **** 
  37:Core/Src/lcd.c **** 	// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
  38:Core/Src/lcd.c **** 	// according to datasheet, we need at least 40ms after power rises above 2.7V
  39:Core/Src/lcd.c **** 	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
  40:Core/Src/lcd.c **** 	delay(50);
  41:Core/Src/lcd.c **** 
  42:Core/Src/lcd.c **** 	// Now we pull both RS and R/W low to begin commands
  43:Core/Src/lcd.c **** 	expanderWrite(LCD_BACKLIGHT); // reset expanderand turn backlight off (Bit 8 =1)
  44:Core/Src/lcd.c **** 	delay(1000);
  45:Core/Src/lcd.c **** 
  46:Core/Src/lcd.c **** 	// put the LCD into 4 bit mode
  47:Core/Src/lcd.c **** 	//  this is according to the hitachi HD44780 datasheet
  48:Core/Src/lcd.c **** 	//  figure 24, pg 46
  49:Core/Src/lcd.c **** 
  50:Core/Src/lcd.c **** 	// we start in 8bit mode, try to set 4 bit mode
  51:Core/Src/lcd.c **** 	write4bits(0x03 << 4);
  52:Core/Src/lcd.c **** 	delayMicroseconds(4500); // wait min 4.1ms
  53:Core/Src/lcd.c **** 
  54:Core/Src/lcd.c **** 	// second try
  55:Core/Src/lcd.c **** 	write4bits(0x03 << 4);
  56:Core/Src/lcd.c **** 	delayMicroseconds(4500); // wait min 4.1ms
  57:Core/Src/lcd.c **** 
  58:Core/Src/lcd.c **** 	// third go!
  59:Core/Src/lcd.c **** 	write4bits(0x03 << 4);
  60:Core/Src/lcd.c **** 	delayMicroseconds(150);
  61:Core/Src/lcd.c **** 
  62:Core/Src/lcd.c **** 	// finally, set to 4-bit interface
  63:Core/Src/lcd.c **** 	write4bits(0x02 << 4);
  64:Core/Src/lcd.c **** 
  65:Core/Src/lcd.c **** 	// set # lines, font size, etc.
  66:Core/Src/lcd.c **** 	command(LCD_FUNCTIONSET | _displayfunction);
  67:Core/Src/lcd.c **** 
  68:Core/Src/lcd.c **** 	// turn the display on with no cursor or blinking default
  69:Core/Src/lcd.c **** 	_displaycontrol = LCD_DISPLAYON | LCD_CURSORON | LCD_BLINKON;
  70:Core/Src/lcd.c **** 	lcdDisplay();
  71:Core/Src/lcd.c **** 
  72:Core/Src/lcd.c **** 	// clear it off
  73:Core/Src/lcd.c **** 	lcdClear();
  74:Core/Src/lcd.c **** 
  75:Core/Src/lcd.c **** 	// Initialize to default text direction (for roman languages)
  76:Core/Src/lcd.c **** 	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
  77:Core/Src/lcd.c **** 
  78:Core/Src/lcd.c **** 	// set the entry mode
  79:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
  80:Core/Src/lcd.c **** 
  81:Core/Src/lcd.c **** 	lcdHome();
  82:Core/Src/lcd.c **** 	
  83:Core/Src/lcd.c **** 	for (int i = 0; i < 3; i++)
  84:Core/Src/lcd.c **** 	{
  85:Core/Src/lcd.c **** 		lcdBacklight();
  86:Core/Src/lcd.c **** 		delay(250);
  87:Core/Src/lcd.c **** 		lcdNoBacklight();
  88:Core/Src/lcd.c **** 		delay(250);
  89:Core/Src/lcd.c **** 	}
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 3


  90:Core/Src/lcd.c **** 	lcdBacklight(); // finish with backlight on
  91:Core/Src/lcd.c **** }
  92:Core/Src/lcd.c **** 
  93:Core/Src/lcd.c **** /********** high level commands, for the user! */
  94:Core/Src/lcd.c **** void lcdClear()
  95:Core/Src/lcd.c **** {
  96:Core/Src/lcd.c **** 	command(LCD_CLEARDISPLAY); // clear display, set cursor position to zero
  97:Core/Src/lcd.c **** 	delayMicroseconds(2000);   // this command takes a long time!
  98:Core/Src/lcd.c **** }
  99:Core/Src/lcd.c **** 
 100:Core/Src/lcd.c **** void lcdHome()
 101:Core/Src/lcd.c **** {
 102:Core/Src/lcd.c **** 	command(LCD_RETURNHOME); // set cursor position to zero
 103:Core/Src/lcd.c **** 	delayMicroseconds(2000); // this command takes a long time!
 104:Core/Src/lcd.c **** }
 105:Core/Src/lcd.c **** 
 106:Core/Src/lcd.c **** void lcdSetCursor(uint8_t col, uint8_t row)
 107:Core/Src/lcd.c **** {
 108:Core/Src/lcd.c **** 	int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 109:Core/Src/lcd.c **** 	if (row > ROWS)
 110:Core/Src/lcd.c **** 	{
 111:Core/Src/lcd.c **** 		row = ROWS - 1; // we count rows starting w/0
 112:Core/Src/lcd.c **** 	}
 113:Core/Src/lcd.c **** 	command(LCD_SETDDRAMADDR | (col + row_offsets[row]));
 114:Core/Src/lcd.c **** }
 115:Core/Src/lcd.c **** 
 116:Core/Src/lcd.c **** // Turn the display on/off (quickly)
 117:Core/Src/lcd.c **** void lcdNoDisplay()
 118:Core/Src/lcd.c **** {
 119:Core/Src/lcd.c **** 	_displaycontrol &= ~LCD_DISPLAYON;
 120:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 121:Core/Src/lcd.c **** }
 122:Core/Src/lcd.c **** void lcdDisplay()
 123:Core/Src/lcd.c **** {
 124:Core/Src/lcd.c **** 	_displaycontrol |= LCD_DISPLAYON;
 125:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 126:Core/Src/lcd.c **** }
 127:Core/Src/lcd.c **** 
 128:Core/Src/lcd.c **** // Turns the underline cursor on/off
 129:Core/Src/lcd.c **** void lcdNoCursor()
 130:Core/Src/lcd.c **** {
 131:Core/Src/lcd.c **** 	_displaycontrol &= ~LCD_CURSORON;
 132:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 133:Core/Src/lcd.c **** }
 134:Core/Src/lcd.c **** void lcdCursor()
 135:Core/Src/lcd.c **** {
 136:Core/Src/lcd.c **** 	_displaycontrol |= LCD_CURSORON;
 137:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 138:Core/Src/lcd.c **** }
 139:Core/Src/lcd.c **** 
 140:Core/Src/lcd.c **** // Turn on and off the blinking cursor
 141:Core/Src/lcd.c **** void lcdNoBlink()
 142:Core/Src/lcd.c **** {
 143:Core/Src/lcd.c **** 	_displaycontrol &= ~LCD_BLINKON;
 144:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 145:Core/Src/lcd.c **** }
 146:Core/Src/lcd.c **** void lcdBlink()
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 4


 147:Core/Src/lcd.c **** {
 148:Core/Src/lcd.c **** 	_displaycontrol |= LCD_BLINKON;
 149:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 150:Core/Src/lcd.c **** }
 151:Core/Src/lcd.c **** 
 152:Core/Src/lcd.c **** // These commands scroll the display without changing the RAM
 153:Core/Src/lcd.c **** void lcdScrollDisplayLeft(void)
 154:Core/Src/lcd.c **** {
 155:Core/Src/lcd.c **** 	command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVELEFT);
 156:Core/Src/lcd.c **** }
 157:Core/Src/lcd.c **** void lcdScrollDisplayRight(void)
 158:Core/Src/lcd.c **** {
 159:Core/Src/lcd.c **** 	command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVERIGHT);
 160:Core/Src/lcd.c **** }
 161:Core/Src/lcd.c **** 
 162:Core/Src/lcd.c **** // This is for text that flows Left to Right
 163:Core/Src/lcd.c **** void lcdLeftToRight(void)
 164:Core/Src/lcd.c **** {
 165:Core/Src/lcd.c **** 	_displaymode |= LCD_ENTRYLEFT;
 166:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 167:Core/Src/lcd.c **** }
 168:Core/Src/lcd.c **** 
 169:Core/Src/lcd.c **** // This is for text that flows Right to Left
 170:Core/Src/lcd.c **** void lcdRightToLeft(void)
 171:Core/Src/lcd.c **** {
 172:Core/Src/lcd.c **** 	_displaymode &= ~LCD_ENTRYLEFT;
 173:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 174:Core/Src/lcd.c **** }
 175:Core/Src/lcd.c **** 
 176:Core/Src/lcd.c **** // This will 'right justify' text from the cursor
 177:Core/Src/lcd.c **** void lcdAutoscroll(void)
 178:Core/Src/lcd.c **** {
 179:Core/Src/lcd.c **** 	_displaymode |= LCD_ENTRYSHIFTINCREMENT;
 180:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 181:Core/Src/lcd.c **** }
 182:Core/Src/lcd.c **** 
 183:Core/Src/lcd.c **** // This will 'left justify' text from the cursor
 184:Core/Src/lcd.c **** void lcdNoAutoscroll(void)
 185:Core/Src/lcd.c **** {
 186:Core/Src/lcd.c **** 	_displaymode &= ~LCD_ENTRYSHIFTINCREMENT;
 187:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 188:Core/Src/lcd.c **** }
 189:Core/Src/lcd.c **** 
 190:Core/Src/lcd.c **** // Turn the (optional) backlight off/on
 191:Core/Src/lcd.c **** void lcdNoBacklight(void)
 192:Core/Src/lcd.c **** {
 193:Core/Src/lcd.c **** 	_backlightval = LCD_NOBACKLIGHT;
 194:Core/Src/lcd.c **** 	expanderWrite(0);
 195:Core/Src/lcd.c **** }
 196:Core/Src/lcd.c **** 
 197:Core/Src/lcd.c **** void lcdBacklight(void)
 198:Core/Src/lcd.c **** {
 199:Core/Src/lcd.c **** 	_backlightval = LCD_BACKLIGHT;
 200:Core/Src/lcd.c **** 	expanderWrite(0);
 201:Core/Src/lcd.c **** }
 202:Core/Src/lcd.c **** 
 203:Core/Src/lcd.c **** void lcdSendString(char *str)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 5


 204:Core/Src/lcd.c **** {
 205:Core/Src/lcd.c **** 	while (*str)
 206:Core/Src/lcd.c **** 		write(*str++);
 207:Core/Src/lcd.c **** }
 208:Core/Src/lcd.c **** 
 209:Core/Src/lcd.c **** void lcdSendChar(char c)
 210:Core/Src/lcd.c **** {
 211:Core/Src/lcd.c **** 	write(c);
 212:Core/Src/lcd.c **** }
 213:Core/Src/lcd.c **** 
 214:Core/Src/lcd.c **** /*********** mid level commands, for sending data/cmds */
 215:Core/Src/lcd.c **** 
 216:Core/Src/lcd.c **** static inline void command(uint8_t value)
 217:Core/Src/lcd.c **** {
 218:Core/Src/lcd.c **** 	send(value, 0);
 219:Core/Src/lcd.c **** }
 220:Core/Src/lcd.c **** 
 221:Core/Src/lcd.c **** static inline size_t write(uint8_t value)
 222:Core/Src/lcd.c **** {
 223:Core/Src/lcd.c **** 	send(value, Rs);
 224:Core/Src/lcd.c **** 	return 1;
 225:Core/Src/lcd.c **** }
 226:Core/Src/lcd.c **** 
 227:Core/Src/lcd.c **** /************ low level data pushing commands **********/
 228:Core/Src/lcd.c **** 
 229:Core/Src/lcd.c **** // write either command or data
 230:Core/Src/lcd.c **** static void send(uint8_t value, uint8_t mode)
 231:Core/Src/lcd.c **** {
 232:Core/Src/lcd.c **** 	uint8_t highnib = value & 0xf0;
 233:Core/Src/lcd.c **** 	uint8_t lownib = (value << 4) & 0xf0;
 234:Core/Src/lcd.c **** 	write4bits((highnib) | mode);
 235:Core/Src/lcd.c **** 	write4bits((lownib) | mode);
 236:Core/Src/lcd.c **** }
 237:Core/Src/lcd.c **** 
 238:Core/Src/lcd.c **** static void write4bits(uint8_t value)
 239:Core/Src/lcd.c **** {
 240:Core/Src/lcd.c **** 	expanderWrite(value);
 241:Core/Src/lcd.c **** 	pulseEnable(value);
 242:Core/Src/lcd.c **** }
 243:Core/Src/lcd.c **** 
 244:Core/Src/lcd.c **** static void expanderWrite(uint8_t _data)
 245:Core/Src/lcd.c **** {
  27              		.loc 1 245 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 245 1 is_stmt 0 view .LVU1
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 246:Core/Src/lcd.c **** 	i2c2CommandDMA((int)(_data) | LCD_BACKLIGHT);
  36              		.loc 1 246 2 is_stmt 1 view .LVU2
  37 0002 40F00800 		orr	r0, r0, #8
  38              	.LVL1:
  39              		.loc 1 246 2 is_stmt 0 view .LVU3
  40 0006 FFF7FEFF 		bl	i2c2CommandDMA
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 6


  41              	.LVL2:
 247:Core/Src/lcd.c **** }
  42              		.loc 1 247 1 view .LVU4
  43 000a 08BD     		pop	{r3, pc}
  44              		.cfi_endproc
  45              	.LFE1187:
  47              		.section	.text.pulseEnable,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu softvfp
  54              	pulseEnable:
  55              	.LVL3:
  56              	.LFB1188:
 248:Core/Src/lcd.c **** 
 249:Core/Src/lcd.c **** static void pulseEnable(uint8_t _data)
 250:Core/Src/lcd.c **** {
  57              		.loc 1 250 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		.loc 1 250 1 is_stmt 0 view .LVU6
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
  66 0002 0446     		mov	r4, r0
 251:Core/Src/lcd.c **** 	expanderWrite(_data | En); // En high
  67              		.loc 1 251 2 is_stmt 1 view .LVU7
  68 0004 40F00400 		orr	r0, r0, #4
  69              	.LVL4:
  70              		.loc 1 251 2 is_stmt 0 view .LVU8
  71 0008 FFF7FEFF 		bl	expanderWrite
  72              	.LVL5:
 252:Core/Src/lcd.c **** 	delayMicroseconds(1);	   // enable pulse must be >450ns
  73              		.loc 1 252 2 is_stmt 1 view .LVU9
  74 000c 0120     		movs	r0, #1
  75 000e FFF7FEFF 		bl	delayMicroseconds
  76              	.LVL6:
 253:Core/Src/lcd.c **** 
 254:Core/Src/lcd.c **** 	expanderWrite(_data & ~En); // En low
  77              		.loc 1 254 2 view .LVU10
  78 0012 04F0FB00 		and	r0, r4, #251
  79 0016 FFF7FEFF 		bl	expanderWrite
  80              	.LVL7:
 255:Core/Src/lcd.c **** 	delayMicroseconds(50);		// commands need > 37us to settle
  81              		.loc 1 255 2 view .LVU11
  82 001a 3220     		movs	r0, #50
  83 001c FFF7FEFF 		bl	delayMicroseconds
  84              	.LVL8:
 256:Core/Src/lcd.c **** }
  85              		.loc 1 256 1 is_stmt 0 view .LVU12
  86 0020 10BD     		pop	{r4, pc}
  87              		.cfi_endproc
  88              	.LFE1188:
  90              		.section	.text.write4bits,"ax",%progbits
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 7


  91              		.align	1
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	write4bits:
  98              	.LVL9:
  99              	.LFB1186:
 239:Core/Src/lcd.c **** 	expanderWrite(value);
 100              		.loc 1 239 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 239:Core/Src/lcd.c **** 	expanderWrite(value);
 104              		.loc 1 239 1 is_stmt 0 view .LVU14
 105 0000 10B5     		push	{r4, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 4, -8
 108              		.cfi_offset 14, -4
 109 0002 0446     		mov	r4, r0
 240:Core/Src/lcd.c **** 	pulseEnable(value);
 110              		.loc 1 240 2 is_stmt 1 view .LVU15
 111 0004 FFF7FEFF 		bl	expanderWrite
 112              	.LVL10:
 241:Core/Src/lcd.c **** }
 113              		.loc 1 241 2 view .LVU16
 114 0008 2046     		mov	r0, r4
 115 000a FFF7FEFF 		bl	pulseEnable
 116              	.LVL11:
 242:Core/Src/lcd.c **** 
 117              		.loc 1 242 1 is_stmt 0 view .LVU17
 118 000e 10BD     		pop	{r4, pc}
 119              		.cfi_endproc
 120              	.LFE1186:
 122              		.section	.text.send,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	send:
 130              	.LVL12:
 131              	.LFB1185:
 231:Core/Src/lcd.c **** 	uint8_t highnib = value & 0xf0;
 132              		.loc 1 231 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 231:Core/Src/lcd.c **** 	uint8_t highnib = value & 0xf0;
 136              		.loc 1 231 1 is_stmt 0 view .LVU19
 137 0000 38B5     		push	{r3, r4, r5, lr}
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 3, -16
 140              		.cfi_offset 4, -12
 141              		.cfi_offset 5, -8
 142              		.cfi_offset 14, -4
 143 0002 0D46     		mov	r5, r1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 8


 232:Core/Src/lcd.c **** 	uint8_t lownib = (value << 4) & 0xf0;
 144              		.loc 1 232 2 is_stmt 1 view .LVU20
 232:Core/Src/lcd.c **** 	uint8_t lownib = (value << 4) & 0xf0;
 145              		.loc 1 232 10 is_stmt 0 view .LVU21
 146 0004 00F0F003 		and	r3, r0, #240
 147              	.LVL13:
 233:Core/Src/lcd.c **** 	write4bits((highnib) | mode);
 148              		.loc 1 233 2 is_stmt 1 view .LVU22
 233:Core/Src/lcd.c **** 	write4bits((highnib) | mode);
 149              		.loc 1 233 26 is_stmt 0 view .LVU23
 150 0008 0401     		lsls	r4, r0, #4
 233:Core/Src/lcd.c **** 	write4bits((highnib) | mode);
 151              		.loc 1 233 10 view .LVU24
 152 000a E4B2     		uxtb	r4, r4
 153              	.LVL14:
 234:Core/Src/lcd.c **** 	write4bits((lownib) | mode);
 154              		.loc 1 234 2 is_stmt 1 view .LVU25
 155 000c 43EA0100 		orr	r0, r3, r1
 156              	.LVL15:
 234:Core/Src/lcd.c **** 	write4bits((lownib) | mode);
 157              		.loc 1 234 2 is_stmt 0 view .LVU26
 158 0010 FFF7FEFF 		bl	write4bits
 159              	.LVL16:
 235:Core/Src/lcd.c **** }
 160              		.loc 1 235 2 is_stmt 1 view .LVU27
 161 0014 44EA0500 		orr	r0, r4, r5
 162 0018 FFF7FEFF 		bl	write4bits
 163              	.LVL17:
 236:Core/Src/lcd.c **** 
 164              		.loc 1 236 1 is_stmt 0 view .LVU28
 165 001c 38BD     		pop	{r3, r4, r5, pc}
 236:Core/Src/lcd.c **** 
 166              		.loc 1 236 1 view .LVU29
 167              		.cfi_endproc
 168              	.LFE1185:
 170              		.section	.text.lcdClear,"ax",%progbits
 171              		.align	1
 172              		.global	lcdClear
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu softvfp
 178              	lcdClear:
 179              	.LFB1164:
  95:Core/Src/lcd.c **** 	command(LCD_CLEARDISPLAY); // clear display, set cursor position to zero
 180              		.loc 1 95 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 08B5     		push	{r3, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
  96:Core/Src/lcd.c **** 	delayMicroseconds(2000);   // this command takes a long time!
 188              		.loc 1 96 2 view .LVU31
 189              	.LVL18:
 190              	.LBB41:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 9


 191              	.LBI41:
 216:Core/Src/lcd.c **** {
 192              		.loc 1 216 20 view .LVU32
 193              	.LBB42:
 218:Core/Src/lcd.c **** }
 194              		.loc 1 218 2 view .LVU33
 195 0002 0021     		movs	r1, #0
 196 0004 0120     		movs	r0, #1
 197 0006 FFF7FEFF 		bl	send
 198              	.LVL19:
 218:Core/Src/lcd.c **** }
 199              		.loc 1 218 2 is_stmt 0 view .LVU34
 200              	.LBE42:
 201              	.LBE41:
  97:Core/Src/lcd.c **** }
 202              		.loc 1 97 2 is_stmt 1 view .LVU35
 203 000a 4FF4FA60 		mov	r0, #2000
 204 000e FFF7FEFF 		bl	delayMicroseconds
 205              	.LVL20:
  98:Core/Src/lcd.c **** 
 206              		.loc 1 98 1 is_stmt 0 view .LVU36
 207 0012 08BD     		pop	{r3, pc}
 208              		.cfi_endproc
 209              	.LFE1164:
 211              		.section	.text.lcdHome,"ax",%progbits
 212              		.align	1
 213              		.global	lcdHome
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 219              	lcdHome:
 220              	.LFB1165:
 101:Core/Src/lcd.c **** 	command(LCD_RETURNHOME); // set cursor position to zero
 221              		.loc 1 101 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225 0000 08B5     		push	{r3, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 102:Core/Src/lcd.c **** 	delayMicroseconds(2000); // this command takes a long time!
 229              		.loc 1 102 2 view .LVU38
 230              	.LVL21:
 231              	.LBB43:
 232              	.LBI43:
 216:Core/Src/lcd.c **** {
 233              		.loc 1 216 20 view .LVU39
 234              	.LBB44:
 218:Core/Src/lcd.c **** }
 235              		.loc 1 218 2 view .LVU40
 236 0002 0021     		movs	r1, #0
 237 0004 0220     		movs	r0, #2
 238 0006 FFF7FEFF 		bl	send
 239              	.LVL22:
 218:Core/Src/lcd.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 10


 240              		.loc 1 218 2 is_stmt 0 view .LVU41
 241              	.LBE44:
 242              	.LBE43:
 103:Core/Src/lcd.c **** }
 243              		.loc 1 103 2 is_stmt 1 view .LVU42
 244 000a 4FF4FA60 		mov	r0, #2000
 245 000e FFF7FEFF 		bl	delayMicroseconds
 246              	.LVL23:
 104:Core/Src/lcd.c **** 
 247              		.loc 1 104 1 is_stmt 0 view .LVU43
 248 0012 08BD     		pop	{r3, pc}
 249              		.cfi_endproc
 250              	.LFE1165:
 252              		.section	.text.lcdSetCursor,"ax",%progbits
 253              		.align	1
 254              		.global	lcdSetCursor
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu softvfp
 260              	lcdSetCursor:
 261              	.LVL24:
 262              	.LFB1166:
 107:Core/Src/lcd.c **** 	int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 263              		.loc 1 107 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 16
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Core/Src/lcd.c **** 	int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 267              		.loc 1 107 1 is_stmt 0 view .LVU45
 268 0000 10B5     		push	{r4, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 4, -8
 271              		.cfi_offset 14, -4
 272 0002 84B0     		sub	sp, sp, #16
 273              		.cfi_def_cfa_offset 24
 274 0004 8446     		mov	ip, r0
 275 0006 8E46     		mov	lr, r1
 108:Core/Src/lcd.c **** 	if (row > ROWS)
 276              		.loc 1 108 2 is_stmt 1 view .LVU46
 108:Core/Src/lcd.c **** 	if (row > ROWS)
 277              		.loc 1 108 6 is_stmt 0 view .LVU47
 278 0008 0C4B     		ldr	r3, .L17
 279 000a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 280              	.LVL25:
 108:Core/Src/lcd.c **** 	if (row > ROWS)
 281              		.loc 1 108 6 view .LVU48
 282 000c 04AC     		add	r4, sp, #16
 283 000e 04E90F00 		stmdb	r4, {r0, r1, r2, r3}
 109:Core/Src/lcd.c **** 	{
 284              		.loc 1 109 2 is_stmt 1 view .LVU49
 109:Core/Src/lcd.c **** 	{
 285              		.loc 1 109 5 is_stmt 0 view .LVU50
 286 0012 BEF1040F 		cmp	lr, #4
 287 0016 01D9     		bls	.L14
 111:Core/Src/lcd.c **** 	}
 288              		.loc 1 111 7 view .LVU51
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 11


 289 0018 4FF0030E 		mov	lr, #3
 290              	.L14:
 291              	.LVL26:
 113:Core/Src/lcd.c **** }
 292              		.loc 1 113 2 is_stmt 1 view .LVU52
 113:Core/Src/lcd.c **** }
 293              		.loc 1 113 47 is_stmt 0 view .LVU53
 294 001c 04AB     		add	r3, sp, #16
 295 001e 03EB8E0E 		add	lr, r3, lr, lsl #2
 296              	.LVL27:
 113:Core/Src/lcd.c **** }
 297              		.loc 1 113 47 view .LVU54
 298 0022 5EF8100C 		ldr	r0, [lr, #-16]
 113:Core/Src/lcd.c **** }
 299              		.loc 1 113 34 view .LVU55
 300 0026 6044     		add	r0, r0, ip
 301 0028 40B2     		sxtb	r0, r0
 113:Core/Src/lcd.c **** }
 302              		.loc 1 113 27 view .LVU56
 303 002a 60F07F00 		orn	r0, r0, #127
 304              	.LVL28:
 305              	.LBB45:
 306              	.LBI45:
 216:Core/Src/lcd.c **** {
 307              		.loc 1 216 20 is_stmt 1 view .LVU57
 308              	.LBB46:
 218:Core/Src/lcd.c **** }
 309              		.loc 1 218 2 view .LVU58
 310 002e 0021     		movs	r1, #0
 311 0030 C0B2     		uxtb	r0, r0
 218:Core/Src/lcd.c **** }
 312              		.loc 1 218 2 is_stmt 0 view .LVU59
 313 0032 FFF7FEFF 		bl	send
 314              	.LVL29:
 218:Core/Src/lcd.c **** }
 315              		.loc 1 218 2 view .LVU60
 316              	.LBE46:
 317              	.LBE45:
 114:Core/Src/lcd.c **** 
 318              		.loc 1 114 1 view .LVU61
 319 0036 04B0     		add	sp, sp, #16
 320              		.cfi_def_cfa_offset 8
 321              		@ sp needed
 322 0038 10BD     		pop	{r4, pc}
 323              	.L18:
 324 003a 00BF     		.align	2
 325              	.L17:
 326 003c 00000000 		.word	.LANCHOR0
 327              		.cfi_endproc
 328              	.LFE1166:
 330              		.section	.text.lcdNoDisplay,"ax",%progbits
 331              		.align	1
 332              		.global	lcdNoDisplay
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu softvfp
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 12


 338              	lcdNoDisplay:
 339              	.LFB1167:
 118:Core/Src/lcd.c **** 	_displaycontrol &= ~LCD_DISPLAYON;
 340              		.loc 1 118 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
 119:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 348              		.loc 1 119 2 view .LVU63
 119:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 349              		.loc 1 119 18 is_stmt 0 view .LVU64
 350 0002 054B     		ldr	r3, .L21
 351 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 352 0006 00F0FB00 		and	r0, r0, #251
 353 000a 1870     		strb	r0, [r3]
 120:Core/Src/lcd.c **** }
 354              		.loc 1 120 2 is_stmt 1 view .LVU65
 355              	.LVL30:
 356              	.LBB47:
 357              	.LBI47:
 216:Core/Src/lcd.c **** {
 358              		.loc 1 216 20 view .LVU66
 359              	.LBB48:
 218:Core/Src/lcd.c **** }
 360              		.loc 1 218 2 view .LVU67
 361 000c 0021     		movs	r1, #0
 362 000e 40F00800 		orr	r0, r0, #8
 363              	.LVL31:
 218:Core/Src/lcd.c **** }
 364              		.loc 1 218 2 is_stmt 0 view .LVU68
 365 0012 FFF7FEFF 		bl	send
 366              	.LVL32:
 218:Core/Src/lcd.c **** }
 367              		.loc 1 218 2 view .LVU69
 368              	.LBE48:
 369              	.LBE47:
 121:Core/Src/lcd.c **** void lcdDisplay()
 370              		.loc 1 121 1 view .LVU70
 371 0016 08BD     		pop	{r3, pc}
 372              	.L22:
 373              		.align	2
 374              	.L21:
 375 0018 00000000 		.word	.LANCHOR1
 376              		.cfi_endproc
 377              	.LFE1167:
 379              		.section	.text.lcdDisplay,"ax",%progbits
 380              		.align	1
 381              		.global	lcdDisplay
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu softvfp
 387              	lcdDisplay:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 13


 388              	.LFB1168:
 123:Core/Src/lcd.c **** 	_displaycontrol |= LCD_DISPLAYON;
 389              		.loc 1 123 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393 0000 08B5     		push	{r3, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 3, -8
 396              		.cfi_offset 14, -4
 124:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 397              		.loc 1 124 2 view .LVU72
 124:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 398              		.loc 1 124 18 is_stmt 0 view .LVU73
 399 0002 054B     		ldr	r3, .L25
 400 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 401 0006 40F00400 		orr	r0, r0, #4
 402 000a 1870     		strb	r0, [r3]
 125:Core/Src/lcd.c **** }
 403              		.loc 1 125 2 is_stmt 1 view .LVU74
 404              	.LVL33:
 405              	.LBB49:
 406              	.LBI49:
 216:Core/Src/lcd.c **** {
 407              		.loc 1 216 20 view .LVU75
 408              	.LBB50:
 218:Core/Src/lcd.c **** }
 409              		.loc 1 218 2 view .LVU76
 410 000c 0021     		movs	r1, #0
 411 000e 40F00800 		orr	r0, r0, #8
 412              	.LVL34:
 218:Core/Src/lcd.c **** }
 413              		.loc 1 218 2 is_stmt 0 view .LVU77
 414 0012 FFF7FEFF 		bl	send
 415              	.LVL35:
 218:Core/Src/lcd.c **** }
 416              		.loc 1 218 2 view .LVU78
 417              	.LBE50:
 418              	.LBE49:
 126:Core/Src/lcd.c **** 
 419              		.loc 1 126 1 view .LVU79
 420 0016 08BD     		pop	{r3, pc}
 421              	.L26:
 422              		.align	2
 423              	.L25:
 424 0018 00000000 		.word	.LANCHOR1
 425              		.cfi_endproc
 426              	.LFE1168:
 428              		.section	.text.lcdNoCursor,"ax",%progbits
 429              		.align	1
 430              		.global	lcdNoCursor
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu softvfp
 436              	lcdNoCursor:
 437              	.LFB1169:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 14


 130:Core/Src/lcd.c **** 	_displaycontrol &= ~LCD_CURSORON;
 438              		.loc 1 130 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442 0000 08B5     		push	{r3, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
 131:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 446              		.loc 1 131 2 view .LVU81
 131:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 447              		.loc 1 131 18 is_stmt 0 view .LVU82
 448 0002 054B     		ldr	r3, .L29
 449 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 450 0006 00F0FD00 		and	r0, r0, #253
 451 000a 1870     		strb	r0, [r3]
 132:Core/Src/lcd.c **** }
 452              		.loc 1 132 2 is_stmt 1 view .LVU83
 453              	.LVL36:
 454              	.LBB51:
 455              	.LBI51:
 216:Core/Src/lcd.c **** {
 456              		.loc 1 216 20 view .LVU84
 457              	.LBB52:
 218:Core/Src/lcd.c **** }
 458              		.loc 1 218 2 view .LVU85
 459 000c 0021     		movs	r1, #0
 460 000e 40F00800 		orr	r0, r0, #8
 461              	.LVL37:
 218:Core/Src/lcd.c **** }
 462              		.loc 1 218 2 is_stmt 0 view .LVU86
 463 0012 FFF7FEFF 		bl	send
 464              	.LVL38:
 218:Core/Src/lcd.c **** }
 465              		.loc 1 218 2 view .LVU87
 466              	.LBE52:
 467              	.LBE51:
 133:Core/Src/lcd.c **** void lcdCursor()
 468              		.loc 1 133 1 view .LVU88
 469 0016 08BD     		pop	{r3, pc}
 470              	.L30:
 471              		.align	2
 472              	.L29:
 473 0018 00000000 		.word	.LANCHOR1
 474              		.cfi_endproc
 475              	.LFE1169:
 477              		.section	.text.lcdCursor,"ax",%progbits
 478              		.align	1
 479              		.global	lcdCursor
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu softvfp
 485              	lcdCursor:
 486              	.LFB1170:
 135:Core/Src/lcd.c **** 	_displaycontrol |= LCD_CURSORON;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 15


 487              		.loc 1 135 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 08B5     		push	{r3, lr}
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 3, -8
 494              		.cfi_offset 14, -4
 136:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 495              		.loc 1 136 2 view .LVU90
 136:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 496              		.loc 1 136 18 is_stmt 0 view .LVU91
 497 0002 054B     		ldr	r3, .L33
 498 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 499 0006 40F00200 		orr	r0, r0, #2
 500 000a 1870     		strb	r0, [r3]
 137:Core/Src/lcd.c **** }
 501              		.loc 1 137 2 is_stmt 1 view .LVU92
 502              	.LVL39:
 503              	.LBB53:
 504              	.LBI53:
 216:Core/Src/lcd.c **** {
 505              		.loc 1 216 20 view .LVU93
 506              	.LBB54:
 218:Core/Src/lcd.c **** }
 507              		.loc 1 218 2 view .LVU94
 508 000c 0021     		movs	r1, #0
 509 000e 40F00800 		orr	r0, r0, #8
 510              	.LVL40:
 218:Core/Src/lcd.c **** }
 511              		.loc 1 218 2 is_stmt 0 view .LVU95
 512 0012 FFF7FEFF 		bl	send
 513              	.LVL41:
 218:Core/Src/lcd.c **** }
 514              		.loc 1 218 2 view .LVU96
 515              	.LBE54:
 516              	.LBE53:
 138:Core/Src/lcd.c **** 
 517              		.loc 1 138 1 view .LVU97
 518 0016 08BD     		pop	{r3, pc}
 519              	.L34:
 520              		.align	2
 521              	.L33:
 522 0018 00000000 		.word	.LANCHOR1
 523              		.cfi_endproc
 524              	.LFE1170:
 526              		.section	.text.lcdNoBlink,"ax",%progbits
 527              		.align	1
 528              		.global	lcdNoBlink
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu softvfp
 534              	lcdNoBlink:
 535              	.LFB1171:
 142:Core/Src/lcd.c **** 	_displaycontrol &= ~LCD_BLINKON;
 536              		.loc 1 142 1 is_stmt 1 view -0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 16


 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 08B5     		push	{r3, lr}
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 3, -8
 543              		.cfi_offset 14, -4
 143:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 544              		.loc 1 143 2 view .LVU99
 143:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 545              		.loc 1 143 18 is_stmt 0 view .LVU100
 546 0002 054B     		ldr	r3, .L37
 547 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 548 0006 00F0FE00 		and	r0, r0, #254
 549 000a 1870     		strb	r0, [r3]
 144:Core/Src/lcd.c **** }
 550              		.loc 1 144 2 is_stmt 1 view .LVU101
 551              	.LVL42:
 552              	.LBB55:
 553              	.LBI55:
 216:Core/Src/lcd.c **** {
 554              		.loc 1 216 20 view .LVU102
 555              	.LBB56:
 218:Core/Src/lcd.c **** }
 556              		.loc 1 218 2 view .LVU103
 557 000c 0021     		movs	r1, #0
 558 000e 40F00800 		orr	r0, r0, #8
 559              	.LVL43:
 218:Core/Src/lcd.c **** }
 560              		.loc 1 218 2 is_stmt 0 view .LVU104
 561 0012 FFF7FEFF 		bl	send
 562              	.LVL44:
 218:Core/Src/lcd.c **** }
 563              		.loc 1 218 2 view .LVU105
 564              	.LBE56:
 565              	.LBE55:
 145:Core/Src/lcd.c **** void lcdBlink()
 566              		.loc 1 145 1 view .LVU106
 567 0016 08BD     		pop	{r3, pc}
 568              	.L38:
 569              		.align	2
 570              	.L37:
 571 0018 00000000 		.word	.LANCHOR1
 572              		.cfi_endproc
 573              	.LFE1171:
 575              		.section	.text.lcdBlink,"ax",%progbits
 576              		.align	1
 577              		.global	lcdBlink
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu softvfp
 583              	lcdBlink:
 584              	.LFB1172:
 147:Core/Src/lcd.c **** 	_displaycontrol |= LCD_BLINKON;
 585              		.loc 1 147 1 is_stmt 1 view -0
 586              		.cfi_startproc
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 17


 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 148:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 593              		.loc 1 148 2 view .LVU108
 148:Core/Src/lcd.c **** 	command(LCD_DISPLAYCONTROL | _displaycontrol);
 594              		.loc 1 148 18 is_stmt 0 view .LVU109
 595 0002 054B     		ldr	r3, .L41
 596 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 597 0006 40F00100 		orr	r0, r0, #1
 598 000a 1870     		strb	r0, [r3]
 149:Core/Src/lcd.c **** }
 599              		.loc 1 149 2 is_stmt 1 view .LVU110
 600              	.LVL45:
 601              	.LBB57:
 602              	.LBI57:
 216:Core/Src/lcd.c **** {
 603              		.loc 1 216 20 view .LVU111
 604              	.LBB58:
 218:Core/Src/lcd.c **** }
 605              		.loc 1 218 2 view .LVU112
 606 000c 0021     		movs	r1, #0
 607 000e 40F00800 		orr	r0, r0, #8
 608              	.LVL46:
 218:Core/Src/lcd.c **** }
 609              		.loc 1 218 2 is_stmt 0 view .LVU113
 610 0012 FFF7FEFF 		bl	send
 611              	.LVL47:
 218:Core/Src/lcd.c **** }
 612              		.loc 1 218 2 view .LVU114
 613              	.LBE58:
 614              	.LBE57:
 150:Core/Src/lcd.c **** 
 615              		.loc 1 150 1 view .LVU115
 616 0016 08BD     		pop	{r3, pc}
 617              	.L42:
 618              		.align	2
 619              	.L41:
 620 0018 00000000 		.word	.LANCHOR1
 621              		.cfi_endproc
 622              	.LFE1172:
 624              		.section	.text.lcdScrollDisplayLeft,"ax",%progbits
 625              		.align	1
 626              		.global	lcdScrollDisplayLeft
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 630              		.fpu softvfp
 632              	lcdScrollDisplayLeft:
 633              	.LFB1173:
 154:Core/Src/lcd.c **** 	command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVELEFT);
 634              		.loc 1 154 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 18


 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 08B5     		push	{r3, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 3, -8
 641              		.cfi_offset 14, -4
 155:Core/Src/lcd.c **** }
 642              		.loc 1 155 2 view .LVU117
 643              	.LVL48:
 644              	.LBB59:
 645              	.LBI59:
 216:Core/Src/lcd.c **** {
 646              		.loc 1 216 20 view .LVU118
 647              	.LBB60:
 218:Core/Src/lcd.c **** }
 648              		.loc 1 218 2 view .LVU119
 649 0002 0021     		movs	r1, #0
 650 0004 1820     		movs	r0, #24
 651 0006 FFF7FEFF 		bl	send
 652              	.LVL49:
 218:Core/Src/lcd.c **** }
 653              		.loc 1 218 2 is_stmt 0 view .LVU120
 654              	.LBE60:
 655              	.LBE59:
 156:Core/Src/lcd.c **** void lcdScrollDisplayRight(void)
 656              		.loc 1 156 1 view .LVU121
 657 000a 08BD     		pop	{r3, pc}
 658              		.cfi_endproc
 659              	.LFE1173:
 661              		.section	.text.lcdScrollDisplayRight,"ax",%progbits
 662              		.align	1
 663              		.global	lcdScrollDisplayRight
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu softvfp
 669              	lcdScrollDisplayRight:
 670              	.LFB1174:
 158:Core/Src/lcd.c **** 	command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVERIGHT);
 671              		.loc 1 158 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 08B5     		push	{r3, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 3, -8
 678              		.cfi_offset 14, -4
 159:Core/Src/lcd.c **** }
 679              		.loc 1 159 2 view .LVU123
 680              	.LVL50:
 681              	.LBB61:
 682              	.LBI61:
 216:Core/Src/lcd.c **** {
 683              		.loc 1 216 20 view .LVU124
 684              	.LBB62:
 218:Core/Src/lcd.c **** }
 685              		.loc 1 218 2 view .LVU125
 686 0002 0021     		movs	r1, #0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 19


 687 0004 1C20     		movs	r0, #28
 688 0006 FFF7FEFF 		bl	send
 689              	.LVL51:
 218:Core/Src/lcd.c **** }
 690              		.loc 1 218 2 is_stmt 0 view .LVU126
 691              	.LBE62:
 692              	.LBE61:
 160:Core/Src/lcd.c **** 
 693              		.loc 1 160 1 view .LVU127
 694 000a 08BD     		pop	{r3, pc}
 695              		.cfi_endproc
 696              	.LFE1174:
 698              		.section	.text.lcdLeftToRight,"ax",%progbits
 699              		.align	1
 700              		.global	lcdLeftToRight
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu softvfp
 706              	lcdLeftToRight:
 707              	.LFB1175:
 164:Core/Src/lcd.c **** 	_displaymode |= LCD_ENTRYLEFT;
 708              		.loc 1 164 1 is_stmt 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712 0000 08B5     		push	{r3, lr}
 713              		.cfi_def_cfa_offset 8
 714              		.cfi_offset 3, -8
 715              		.cfi_offset 14, -4
 165:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 716              		.loc 1 165 2 view .LVU129
 165:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 717              		.loc 1 165 15 is_stmt 0 view .LVU130
 718 0002 054B     		ldr	r3, .L49
 719 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 720 0006 40F00200 		orr	r0, r0, #2
 721 000a 1870     		strb	r0, [r3]
 166:Core/Src/lcd.c **** }
 722              		.loc 1 166 2 is_stmt 1 view .LVU131
 723              	.LVL52:
 724              	.LBB63:
 725              	.LBI63:
 216:Core/Src/lcd.c **** {
 726              		.loc 1 216 20 view .LVU132
 727              	.LBB64:
 218:Core/Src/lcd.c **** }
 728              		.loc 1 218 2 view .LVU133
 729 000c 0021     		movs	r1, #0
 730 000e 40F00400 		orr	r0, r0, #4
 731              	.LVL53:
 218:Core/Src/lcd.c **** }
 732              		.loc 1 218 2 is_stmt 0 view .LVU134
 733 0012 FFF7FEFF 		bl	send
 734              	.LVL54:
 218:Core/Src/lcd.c **** }
 735              		.loc 1 218 2 view .LVU135
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 20


 736              	.LBE64:
 737              	.LBE63:
 167:Core/Src/lcd.c **** 
 738              		.loc 1 167 1 view .LVU136
 739 0016 08BD     		pop	{r3, pc}
 740              	.L50:
 741              		.align	2
 742              	.L49:
 743 0018 00000000 		.word	.LANCHOR2
 744              		.cfi_endproc
 745              	.LFE1175:
 747              		.section	.text.lcdRightToLeft,"ax",%progbits
 748              		.align	1
 749              		.global	lcdRightToLeft
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu softvfp
 755              	lcdRightToLeft:
 756              	.LFB1176:
 171:Core/Src/lcd.c **** 	_displaymode &= ~LCD_ENTRYLEFT;
 757              		.loc 1 171 1 is_stmt 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761 0000 08B5     		push	{r3, lr}
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 3, -8
 764              		.cfi_offset 14, -4
 172:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 765              		.loc 1 172 2 view .LVU138
 172:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 766              		.loc 1 172 15 is_stmt 0 view .LVU139
 767 0002 054B     		ldr	r3, .L53
 768 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 769 0006 00F0FD00 		and	r0, r0, #253
 770 000a 1870     		strb	r0, [r3]
 173:Core/Src/lcd.c **** }
 771              		.loc 1 173 2 is_stmt 1 view .LVU140
 772              	.LVL55:
 773              	.LBB65:
 774              	.LBI65:
 216:Core/Src/lcd.c **** {
 775              		.loc 1 216 20 view .LVU141
 776              	.LBB66:
 218:Core/Src/lcd.c **** }
 777              		.loc 1 218 2 view .LVU142
 778 000c 0021     		movs	r1, #0
 779 000e 40F00400 		orr	r0, r0, #4
 780              	.LVL56:
 218:Core/Src/lcd.c **** }
 781              		.loc 1 218 2 is_stmt 0 view .LVU143
 782 0012 FFF7FEFF 		bl	send
 783              	.LVL57:
 218:Core/Src/lcd.c **** }
 784              		.loc 1 218 2 view .LVU144
 785              	.LBE66:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 21


 786              	.LBE65:
 174:Core/Src/lcd.c **** 
 787              		.loc 1 174 1 view .LVU145
 788 0016 08BD     		pop	{r3, pc}
 789              	.L54:
 790              		.align	2
 791              	.L53:
 792 0018 00000000 		.word	.LANCHOR2
 793              		.cfi_endproc
 794              	.LFE1176:
 796              		.section	.text.lcdAutoscroll,"ax",%progbits
 797              		.align	1
 798              		.global	lcdAutoscroll
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 802              		.fpu softvfp
 804              	lcdAutoscroll:
 805              	.LFB1177:
 178:Core/Src/lcd.c **** 	_displaymode |= LCD_ENTRYSHIFTINCREMENT;
 806              		.loc 1 178 1 is_stmt 1 view -0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810 0000 08B5     		push	{r3, lr}
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 3, -8
 813              		.cfi_offset 14, -4
 179:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 814              		.loc 1 179 2 view .LVU147
 179:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 815              		.loc 1 179 15 is_stmt 0 view .LVU148
 816 0002 054B     		ldr	r3, .L57
 817 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 818 0006 40F00100 		orr	r0, r0, #1
 819 000a 1870     		strb	r0, [r3]
 180:Core/Src/lcd.c **** }
 820              		.loc 1 180 2 is_stmt 1 view .LVU149
 821              	.LVL58:
 822              	.LBB67:
 823              	.LBI67:
 216:Core/Src/lcd.c **** {
 824              		.loc 1 216 20 view .LVU150
 825              	.LBB68:
 218:Core/Src/lcd.c **** }
 826              		.loc 1 218 2 view .LVU151
 827 000c 0021     		movs	r1, #0
 828 000e 40F00400 		orr	r0, r0, #4
 829              	.LVL59:
 218:Core/Src/lcd.c **** }
 830              		.loc 1 218 2 is_stmt 0 view .LVU152
 831 0012 FFF7FEFF 		bl	send
 832              	.LVL60:
 218:Core/Src/lcd.c **** }
 833              		.loc 1 218 2 view .LVU153
 834              	.LBE68:
 835              	.LBE67:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 22


 181:Core/Src/lcd.c **** 
 836              		.loc 1 181 1 view .LVU154
 837 0016 08BD     		pop	{r3, pc}
 838              	.L58:
 839              		.align	2
 840              	.L57:
 841 0018 00000000 		.word	.LANCHOR2
 842              		.cfi_endproc
 843              	.LFE1177:
 845              		.section	.text.lcdNoAutoscroll,"ax",%progbits
 846              		.align	1
 847              		.global	lcdNoAutoscroll
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu softvfp
 853              	lcdNoAutoscroll:
 854              	.LFB1178:
 185:Core/Src/lcd.c **** 	_displaymode &= ~LCD_ENTRYSHIFTINCREMENT;
 855              		.loc 1 185 1 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859 0000 08B5     		push	{r3, lr}
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 3, -8
 862              		.cfi_offset 14, -4
 186:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 863              		.loc 1 186 2 view .LVU156
 186:Core/Src/lcd.c **** 	command(LCD_ENTRYMODESET | _displaymode);
 864              		.loc 1 186 15 is_stmt 0 view .LVU157
 865 0002 054B     		ldr	r3, .L61
 866 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 867 0006 00F0FE00 		and	r0, r0, #254
 868 000a 1870     		strb	r0, [r3]
 187:Core/Src/lcd.c **** }
 869              		.loc 1 187 2 is_stmt 1 view .LVU158
 870              	.LVL61:
 871              	.LBB69:
 872              	.LBI69:
 216:Core/Src/lcd.c **** {
 873              		.loc 1 216 20 view .LVU159
 874              	.LBB70:
 218:Core/Src/lcd.c **** }
 875              		.loc 1 218 2 view .LVU160
 876 000c 0021     		movs	r1, #0
 877 000e 40F00400 		orr	r0, r0, #4
 878              	.LVL62:
 218:Core/Src/lcd.c **** }
 879              		.loc 1 218 2 is_stmt 0 view .LVU161
 880 0012 FFF7FEFF 		bl	send
 881              	.LVL63:
 218:Core/Src/lcd.c **** }
 882              		.loc 1 218 2 view .LVU162
 883              	.LBE70:
 884              	.LBE69:
 188:Core/Src/lcd.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 23


 885              		.loc 1 188 1 view .LVU163
 886 0016 08BD     		pop	{r3, pc}
 887              	.L62:
 888              		.align	2
 889              	.L61:
 890 0018 00000000 		.word	.LANCHOR2
 891              		.cfi_endproc
 892              	.LFE1178:
 894              		.section	.text.lcdNoBacklight,"ax",%progbits
 895              		.align	1
 896              		.global	lcdNoBacklight
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu softvfp
 902              	lcdNoBacklight:
 903              	.LFB1179:
 192:Core/Src/lcd.c **** 	_backlightval = LCD_NOBACKLIGHT;
 904              		.loc 1 192 1 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908 0000 08B5     		push	{r3, lr}
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 3, -8
 911              		.cfi_offset 14, -4
 193:Core/Src/lcd.c **** 	expanderWrite(0);
 912              		.loc 1 193 2 view .LVU165
 193:Core/Src/lcd.c **** 	expanderWrite(0);
 913              		.loc 1 193 16 is_stmt 0 view .LVU166
 914 0002 0020     		movs	r0, #0
 915 0004 024B     		ldr	r3, .L65
 916 0006 1870     		strb	r0, [r3]
 194:Core/Src/lcd.c **** }
 917              		.loc 1 194 2 is_stmt 1 view .LVU167
 918 0008 FFF7FEFF 		bl	expanderWrite
 919              	.LVL64:
 195:Core/Src/lcd.c **** 
 920              		.loc 1 195 1 is_stmt 0 view .LVU168
 921 000c 08BD     		pop	{r3, pc}
 922              	.L66:
 923 000e 00BF     		.align	2
 924              	.L65:
 925 0010 00000000 		.word	.LANCHOR3
 926              		.cfi_endproc
 927              	.LFE1179:
 929              		.section	.text.lcdBacklight,"ax",%progbits
 930              		.align	1
 931              		.global	lcdBacklight
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu softvfp
 937              	lcdBacklight:
 938              	.LFB1180:
 198:Core/Src/lcd.c **** 	_backlightval = LCD_BACKLIGHT;
 939              		.loc 1 198 1 is_stmt 1 view -0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 24


 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943 0000 08B5     		push	{r3, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 3, -8
 946              		.cfi_offset 14, -4
 199:Core/Src/lcd.c **** 	expanderWrite(0);
 947              		.loc 1 199 2 view .LVU170
 199:Core/Src/lcd.c **** 	expanderWrite(0);
 948              		.loc 1 199 16 is_stmt 0 view .LVU171
 949 0002 034B     		ldr	r3, .L69
 950 0004 0822     		movs	r2, #8
 951 0006 1A70     		strb	r2, [r3]
 200:Core/Src/lcd.c **** }
 952              		.loc 1 200 2 is_stmt 1 view .LVU172
 953 0008 0020     		movs	r0, #0
 954 000a FFF7FEFF 		bl	expanderWrite
 955              	.LVL65:
 201:Core/Src/lcd.c **** 
 956              		.loc 1 201 1 is_stmt 0 view .LVU173
 957 000e 08BD     		pop	{r3, pc}
 958              	.L70:
 959              		.align	2
 960              	.L69:
 961 0010 00000000 		.word	.LANCHOR3
 962              		.cfi_endproc
 963              	.LFE1180:
 965              		.section	.text.lcdInit,"ax",%progbits
 966              		.align	1
 967              		.global	lcdInit
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu softvfp
 973              	lcdInit:
 974              	.LFB1163:
  29:Core/Src/lcd.c **** 	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
 975              		.loc 1 29 1 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 70B5     		push	{r4, r5, r6, lr}
 980              		.cfi_def_cfa_offset 16
 981              		.cfi_offset 4, -16
 982              		.cfi_offset 5, -12
 983              		.cfi_offset 6, -8
 984              		.cfi_offset 14, -4
  30:Core/Src/lcd.c **** 
 985              		.loc 1 30 2 view .LVU175
  30:Core/Src/lcd.c **** 
 986              		.loc 1 30 19 is_stmt 0 view .LVU176
 987 0002 264D     		ldr	r5, .L75
 988 0004 0024     		movs	r4, #0
 989 0006 2C70     		strb	r4, [r5]
  32:Core/Src/lcd.c **** 	{
 990              		.loc 1 32 2 is_stmt 1 view .LVU177
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 25


  34:Core/Src/lcd.c **** 	}
 991              		.loc 1 34 3 view .LVU178
  34:Core/Src/lcd.c **** 	}
 992              		.loc 1 34 20 is_stmt 0 view .LVU179
 993 0008 0826     		movs	r6, #8
 994 000a 2E70     		strb	r6, [r5]
  40:Core/Src/lcd.c **** 
 995              		.loc 1 40 2 is_stmt 1 view .LVU180
 996 000c 3220     		movs	r0, #50
 997 000e FFF7FEFF 		bl	delay
 998              	.LVL66:
  43:Core/Src/lcd.c **** 	delay(1000);
 999              		.loc 1 43 2 view .LVU181
 1000 0012 3046     		mov	r0, r6
 1001 0014 FFF7FEFF 		bl	expanderWrite
 1002              	.LVL67:
  44:Core/Src/lcd.c **** 
 1003              		.loc 1 44 2 view .LVU182
 1004 0018 4FF47A70 		mov	r0, #1000
 1005 001c FFF7FEFF 		bl	delay
 1006              	.LVL68:
  51:Core/Src/lcd.c **** 	delayMicroseconds(4500); // wait min 4.1ms
 1007              		.loc 1 51 2 view .LVU183
 1008 0020 3020     		movs	r0, #48
 1009 0022 FFF7FEFF 		bl	write4bits
 1010              	.LVL69:
  52:Core/Src/lcd.c **** 
 1011              		.loc 1 52 2 view .LVU184
 1012 0026 41F29410 		movw	r0, #4500
 1013 002a FFF7FEFF 		bl	delayMicroseconds
 1014              	.LVL70:
  55:Core/Src/lcd.c **** 	delayMicroseconds(4500); // wait min 4.1ms
 1015              		.loc 1 55 2 view .LVU185
 1016 002e 3020     		movs	r0, #48
 1017 0030 FFF7FEFF 		bl	write4bits
 1018              	.LVL71:
  56:Core/Src/lcd.c **** 
 1019              		.loc 1 56 2 view .LVU186
 1020 0034 41F29410 		movw	r0, #4500
 1021 0038 FFF7FEFF 		bl	delayMicroseconds
 1022              	.LVL72:
  59:Core/Src/lcd.c **** 	delayMicroseconds(150);
 1023              		.loc 1 59 2 view .LVU187
 1024 003c 3020     		movs	r0, #48
 1025 003e FFF7FEFF 		bl	write4bits
 1026              	.LVL73:
  60:Core/Src/lcd.c **** 
 1027              		.loc 1 60 2 view .LVU188
 1028 0042 9620     		movs	r0, #150
 1029 0044 FFF7FEFF 		bl	delayMicroseconds
 1030              	.LVL74:
  63:Core/Src/lcd.c **** 
 1031              		.loc 1 63 2 view .LVU189
 1032 0048 2020     		movs	r0, #32
 1033 004a FFF7FEFF 		bl	write4bits
 1034              	.LVL75:
  66:Core/Src/lcd.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 26


 1035              		.loc 1 66 2 view .LVU190
 1036 004e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1037              	.LVL76:
 1038              	.LBB71:
 1039              	.LBI71:
 216:Core/Src/lcd.c **** {
 1040              		.loc 1 216 20 view .LVU191
 1041              	.LBB72:
 218:Core/Src/lcd.c **** }
 1042              		.loc 1 218 2 view .LVU192
 1043 0050 2146     		mov	r1, r4
 1044 0052 40F02000 		orr	r0, r0, #32
 1045              	.LVL77:
 218:Core/Src/lcd.c **** }
 1046              		.loc 1 218 2 is_stmt 0 view .LVU193
 1047 0056 FFF7FEFF 		bl	send
 1048              	.LVL78:
 218:Core/Src/lcd.c **** }
 1049              		.loc 1 218 2 view .LVU194
 1050              	.LBE72:
 1051              	.LBE71:
  69:Core/Src/lcd.c **** 	lcdDisplay();
 1052              		.loc 1 69 2 is_stmt 1 view .LVU195
  69:Core/Src/lcd.c **** 	lcdDisplay();
 1053              		.loc 1 69 18 is_stmt 0 view .LVU196
 1054 005a 114B     		ldr	r3, .L75+4
 1055 005c 0722     		movs	r2, #7
 1056 005e 1A70     		strb	r2, [r3]
  70:Core/Src/lcd.c **** 
 1057              		.loc 1 70 2 is_stmt 1 view .LVU197
 1058 0060 FFF7FEFF 		bl	lcdDisplay
 1059              	.LVL79:
  73:Core/Src/lcd.c **** 
 1060              		.loc 1 73 2 view .LVU198
 1061 0064 FFF7FEFF 		bl	lcdClear
 1062              	.LVL80:
  76:Core/Src/lcd.c **** 
 1063              		.loc 1 76 2 view .LVU199
  76:Core/Src/lcd.c **** 
 1064              		.loc 1 76 15 is_stmt 0 view .LVU200
 1065 0068 0E4B     		ldr	r3, .L75+8
 1066 006a 0222     		movs	r2, #2
 1067 006c 1A70     		strb	r2, [r3]
  79:Core/Src/lcd.c **** 
 1068              		.loc 1 79 2 is_stmt 1 view .LVU201
 1069              	.LVL81:
 1070              	.LBB73:
 1071              	.LBI73:
 216:Core/Src/lcd.c **** {
 1072              		.loc 1 216 20 view .LVU202
 1073              	.LBB74:
 218:Core/Src/lcd.c **** }
 1074              		.loc 1 218 2 view .LVU203
 1075 006e 2146     		mov	r1, r4
 1076 0070 0620     		movs	r0, #6
 1077 0072 FFF7FEFF 		bl	send
 1078              	.LVL82:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 27


 218:Core/Src/lcd.c **** }
 1079              		.loc 1 218 2 is_stmt 0 view .LVU204
 1080              	.LBE74:
 1081              	.LBE73:
  81:Core/Src/lcd.c **** 	
 1082              		.loc 1 81 2 is_stmt 1 view .LVU205
 1083 0076 FFF7FEFF 		bl	lcdHome
 1084              	.LVL83:
  83:Core/Src/lcd.c **** 	{
 1085              		.loc 1 83 2 view .LVU206
 1086              	.LBB75:
  83:Core/Src/lcd.c **** 	{
 1087              		.loc 1 83 7 view .LVU207
  83:Core/Src/lcd.c **** 	{
 1088              		.loc 1 83 2 is_stmt 0 view .LVU208
 1089 007a 0AE0     		b	.L72
 1090              	.LVL84:
 1091              	.L73:
  85:Core/Src/lcd.c **** 		delay(250);
 1092              		.loc 1 85 3 is_stmt 1 discriminator 3 view .LVU209
 1093 007c FFF7FEFF 		bl	lcdBacklight
 1094              	.LVL85:
  86:Core/Src/lcd.c **** 		lcdNoBacklight();
 1095              		.loc 1 86 3 discriminator 3 view .LVU210
 1096 0080 FA20     		movs	r0, #250
 1097 0082 FFF7FEFF 		bl	delay
 1098              	.LVL86:
  87:Core/Src/lcd.c **** 		delay(250);
 1099              		.loc 1 87 3 discriminator 3 view .LVU211
 1100 0086 FFF7FEFF 		bl	lcdNoBacklight
 1101              	.LVL87:
  88:Core/Src/lcd.c **** 	}
 1102              		.loc 1 88 3 discriminator 3 view .LVU212
 1103 008a FA20     		movs	r0, #250
 1104 008c FFF7FEFF 		bl	delay
 1105              	.LVL88:
  83:Core/Src/lcd.c **** 	{
 1106              		.loc 1 83 25 discriminator 3 view .LVU213
  83:Core/Src/lcd.c **** 	{
 1107              		.loc 1 83 26 is_stmt 0 discriminator 3 view .LVU214
 1108 0090 0134     		adds	r4, r4, #1
 1109              	.LVL89:
 1110              	.L72:
  83:Core/Src/lcd.c **** 	{
 1111              		.loc 1 83 18 is_stmt 1 discriminator 1 view .LVU215
  83:Core/Src/lcd.c **** 	{
 1112              		.loc 1 83 2 is_stmt 0 discriminator 1 view .LVU216
 1113 0092 022C     		cmp	r4, #2
 1114 0094 F2DD     		ble	.L73
 1115              	.LBE75:
  90:Core/Src/lcd.c **** }
 1116              		.loc 1 90 2 is_stmt 1 view .LVU217
 1117 0096 FFF7FEFF 		bl	lcdBacklight
 1118              	.LVL90:
  91:Core/Src/lcd.c **** 
 1119              		.loc 1 91 1 is_stmt 0 view .LVU218
 1120 009a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 28


 1121              	.LVL91:
 1122              	.L76:
  91:Core/Src/lcd.c **** 
 1123              		.loc 1 91 1 view .LVU219
 1124              		.align	2
 1125              	.L75:
 1126 009c 00000000 		.word	.LANCHOR4
 1127 00a0 00000000 		.word	.LANCHOR1
 1128 00a4 00000000 		.word	.LANCHOR2
 1129              		.cfi_endproc
 1130              	.LFE1163:
 1132              		.section	.text.lcdSendString,"ax",%progbits
 1133              		.align	1
 1134              		.global	lcdSendString
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu softvfp
 1140              	lcdSendString:
 1141              	.LVL92:
 1142              	.LFB1181:
 204:Core/Src/lcd.c **** 	while (*str)
 1143              		.loc 1 204 1 is_stmt 1 view -0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 204:Core/Src/lcd.c **** 	while (*str)
 1147              		.loc 1 204 1 is_stmt 0 view .LVU221
 1148 0000 10B5     		push	{r4, lr}
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 4, -8
 1151              		.cfi_offset 14, -4
 1152 0002 0446     		mov	r4, r0
 205:Core/Src/lcd.c **** 		write(*str++);
 1153              		.loc 1 205 2 is_stmt 1 view .LVU222
 205:Core/Src/lcd.c **** 		write(*str++);
 1154              		.loc 1 205 8 is_stmt 0 view .LVU223
 1155 0004 03E0     		b	.L78
 1156              	.LVL93:
 1157              	.L79:
 206:Core/Src/lcd.c **** }
 1158              		.loc 1 206 3 is_stmt 1 view .LVU224
 206:Core/Src/lcd.c **** }
 1159              		.loc 1 206 13 is_stmt 0 view .LVU225
 1160 0006 0134     		adds	r4, r4, #1
 1161              	.LVL94:
 1162              	.LBB76:
 1163              	.LBI76:
 221:Core/Src/lcd.c **** {
 1164              		.loc 1 221 22 is_stmt 1 view .LVU226
 1165              	.LBB77:
 223:Core/Src/lcd.c **** 	return 1;
 1166              		.loc 1 223 2 view .LVU227
 1167 0008 0121     		movs	r1, #1
 1168 000a FFF7FEFF 		bl	send
 1169              	.LVL95:
 224:Core/Src/lcd.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 29


 1170              		.loc 1 224 2 view .LVU228
 1171              	.L78:
 224:Core/Src/lcd.c **** }
 1172              		.loc 1 224 2 is_stmt 0 view .LVU229
 1173              	.LBE77:
 1174              	.LBE76:
 205:Core/Src/lcd.c **** 		write(*str++);
 1175              		.loc 1 205 8 is_stmt 1 view .LVU230
 205:Core/Src/lcd.c **** 		write(*str++);
 1176              		.loc 1 205 9 is_stmt 0 view .LVU231
 1177 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 205:Core/Src/lcd.c **** 		write(*str++);
 1178              		.loc 1 205 8 view .LVU232
 1179 0010 0028     		cmp	r0, #0
 1180 0012 F8D1     		bne	.L79
 207:Core/Src/lcd.c **** 
 1181              		.loc 1 207 1 view .LVU233
 1182 0014 10BD     		pop	{r4, pc}
 207:Core/Src/lcd.c **** 
 1183              		.loc 1 207 1 view .LVU234
 1184              		.cfi_endproc
 1185              	.LFE1181:
 1187              		.section	.text.lcdSendChar,"ax",%progbits
 1188              		.align	1
 1189              		.global	lcdSendChar
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1193              		.fpu softvfp
 1195              	lcdSendChar:
 1196              	.LVL96:
 1197              	.LFB1182:
 210:Core/Src/lcd.c **** 	write(c);
 1198              		.loc 1 210 1 is_stmt 1 view -0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 210:Core/Src/lcd.c **** 	write(c);
 1202              		.loc 1 210 1 is_stmt 0 view .LVU236
 1203 0000 08B5     		push	{r3, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 3, -8
 1206              		.cfi_offset 14, -4
 211:Core/Src/lcd.c **** }
 1207              		.loc 1 211 2 is_stmt 1 view .LVU237
 1208              	.LVL97:
 1209              	.LBB78:
 1210              	.LBI78:
 221:Core/Src/lcd.c **** {
 1211              		.loc 1 221 22 view .LVU238
 1212              	.LBB79:
 223:Core/Src/lcd.c **** 	return 1;
 1213              		.loc 1 223 2 view .LVU239
 1214 0002 0121     		movs	r1, #1
 1215 0004 FFF7FEFF 		bl	send
 1216              	.LVL98:
 224:Core/Src/lcd.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 30


 1217              		.loc 1 224 2 view .LVU240
 224:Core/Src/lcd.c **** }
 1218              		.loc 1 224 2 is_stmt 0 view .LVU241
 1219              	.LBE79:
 1220              	.LBE78:
 212:Core/Src/lcd.c **** 
 1221              		.loc 1 212 1 view .LVU242
 1222 0008 08BD     		pop	{r3, pc}
 1223              		.cfi_endproc
 1224              	.LFE1182:
 1226              		.global	_backlightval
 1227              		.global	_charsize
 1228              		.global	_rows
 1229              		.global	_cols
 1230              		.global	_displaymode
 1231              		.global	_displaycontrol
 1232              		.global	_displayfunction
 1233              		.global	_addr
 1234              		.section	.rodata
 1235              		.align	2
 1236              		.set	.LANCHOR0,. + 0
 1237              	.LC0:
 1238 0000 00000000 		.word	0
 1239 0004 40000000 		.word	64
 1240 0008 14000000 		.word	20
 1241 000c 54000000 		.word	84
 1242              		.section	.bss._addr,"aw",%nobits
 1245              	_addr:
 1246 0000 00       		.space	1
 1247              		.section	.bss._backlightval,"aw",%nobits
 1248              		.set	.LANCHOR3,. + 0
 1251              	_backlightval:
 1252 0000 00       		.space	1
 1253              		.section	.bss._charsize,"aw",%nobits
 1256              	_charsize:
 1257 0000 00       		.space	1
 1258              		.section	.bss._displaycontrol,"aw",%nobits
 1259              		.set	.LANCHOR1,. + 0
 1262              	_displaycontrol:
 1263 0000 00       		.space	1
 1264              		.section	.bss._displayfunction,"aw",%nobits
 1265              		.set	.LANCHOR4,. + 0
 1268              	_displayfunction:
 1269 0000 00       		.space	1
 1270              		.section	.bss._displaymode,"aw",%nobits
 1271              		.set	.LANCHOR2,. + 0
 1274              	_displaymode:
 1275 0000 00       		.space	1
 1276              		.section	.data._cols,"aw"
 1279              	_cols:
 1280 0000 14       		.byte	20
 1281              		.section	.data._rows,"aw"
 1284              	_rows:
 1285 0000 04       		.byte	4
 1286              		.text
 1287              	.Letext0:
 1288              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 31


 1289              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 1290              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/incl
 1291              		.file 5 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 1292              		.file 6 "Core/Inc/drv_system.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lcd.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:16     .text.expanderWrite:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:23     .text.expanderWrite:0000000000000000 expanderWrite
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:48     .text.pulseEnable:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:54     .text.pulseEnable:0000000000000000 pulseEnable
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:91     .text.write4bits:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:97     .text.write4bits:0000000000000000 write4bits
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:123    .text.send:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:129    .text.send:0000000000000000 send
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:171    .text.lcdClear:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:178    .text.lcdClear:0000000000000000 lcdClear
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:212    .text.lcdHome:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:219    .text.lcdHome:0000000000000000 lcdHome
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:253    .text.lcdSetCursor:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:260    .text.lcdSetCursor:0000000000000000 lcdSetCursor
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:326    .text.lcdSetCursor:000000000000003c $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:331    .text.lcdNoDisplay:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:338    .text.lcdNoDisplay:0000000000000000 lcdNoDisplay
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:375    .text.lcdNoDisplay:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:380    .text.lcdDisplay:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:387    .text.lcdDisplay:0000000000000000 lcdDisplay
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:424    .text.lcdDisplay:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:429    .text.lcdNoCursor:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:436    .text.lcdNoCursor:0000000000000000 lcdNoCursor
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:473    .text.lcdNoCursor:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:478    .text.lcdCursor:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:485    .text.lcdCursor:0000000000000000 lcdCursor
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:522    .text.lcdCursor:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:527    .text.lcdNoBlink:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:534    .text.lcdNoBlink:0000000000000000 lcdNoBlink
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:571    .text.lcdNoBlink:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:576    .text.lcdBlink:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:583    .text.lcdBlink:0000000000000000 lcdBlink
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:620    .text.lcdBlink:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:625    .text.lcdScrollDisplayLeft:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:632    .text.lcdScrollDisplayLeft:0000000000000000 lcdScrollDisplayLeft
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:662    .text.lcdScrollDisplayRight:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:669    .text.lcdScrollDisplayRight:0000000000000000 lcdScrollDisplayRight
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:699    .text.lcdLeftToRight:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:706    .text.lcdLeftToRight:0000000000000000 lcdLeftToRight
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:743    .text.lcdLeftToRight:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:748    .text.lcdRightToLeft:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:755    .text.lcdRightToLeft:0000000000000000 lcdRightToLeft
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:792    .text.lcdRightToLeft:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:797    .text.lcdAutoscroll:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:804    .text.lcdAutoscroll:0000000000000000 lcdAutoscroll
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:841    .text.lcdAutoscroll:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:846    .text.lcdNoAutoscroll:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:853    .text.lcdNoAutoscroll:0000000000000000 lcdNoAutoscroll
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:890    .text.lcdNoAutoscroll:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:895    .text.lcdNoBacklight:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:902    .text.lcdNoBacklight:0000000000000000 lcdNoBacklight
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:925    .text.lcdNoBacklight:0000000000000010 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:930    .text.lcdBacklight:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:937    .text.lcdBacklight:0000000000000000 lcdBacklight
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:961    .text.lcdBacklight:0000000000000010 $d
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s 			page 33


/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:966    .text.lcdInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:973    .text.lcdInit:0000000000000000 lcdInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1126   .text.lcdInit:000000000000009c $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1133   .text.lcdSendString:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1140   .text.lcdSendString:0000000000000000 lcdSendString
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1188   .text.lcdSendChar:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1195   .text.lcdSendChar:0000000000000000 lcdSendChar
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1251   .bss._backlightval:0000000000000000 _backlightval
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1256   .bss._charsize:0000000000000000 _charsize
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1284   .data._rows:0000000000000000 _rows
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1279   .data._cols:0000000000000000 _cols
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1274   .bss._displaymode:0000000000000000 _displaymode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1262   .bss._displaycontrol:0000000000000000 _displaycontrol
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1268   .bss._displayfunction:0000000000000000 _displayfunction
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1245   .bss._addr:0000000000000000 _addr
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1235   .rodata:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1246   .bss._addr:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1252   .bss._backlightval:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1257   .bss._charsize:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1263   .bss._displaycontrol:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1269   .bss._displayfunction:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccg0oBj8.s:1275   .bss._displaymode:0000000000000000 $d

UNDEFINED SYMBOLS
i2c2CommandDMA
delayMicroseconds
delay
