ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"i2c.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_I2C2_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_I2C2_Init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_I2C2_Init:
  25              	.LFB1163:
  26              		.file 1 "Core/Src/i2c.c"
   1:Core/Src/i2c.c **** /* USER CODE BEGIN Header */
   2:Core/Src/i2c.c **** /**
   3:Core/Src/i2c.c ****  ******************************************************************************
   4:Core/Src/i2c.c ****  * @file    i2c.c
   5:Core/Src/i2c.c ****  * @brief   This file provides code for the configuration
   6:Core/Src/i2c.c ****  *          of the I2C instances.
   7:Core/Src/i2c.c ****  ******************************************************************************
   8:Core/Src/i2c.c ****  * @attention
   9:Core/Src/i2c.c ****  *
  10:Core/Src/i2c.c ****  * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/i2c.c ****  * All rights reserved.
  12:Core/Src/i2c.c ****  *
  13:Core/Src/i2c.c ****  * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/i2c.c ****  * in the root directory of this software component.
  15:Core/Src/i2c.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/i2c.c ****  *
  17:Core/Src/i2c.c ****  ******************************************************************************
  18:Core/Src/i2c.c ****  */
  19:Core/Src/i2c.c **** /* USER CODE END Header */
  20:Core/Src/i2c.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/i2c.c **** #include "i2c.h"
  22:Core/Src/i2c.c **** 
  23:Core/Src/i2c.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/i2c.c **** #define LCD_ADDRESS 0x27
  25:Core/Src/i2c.c **** #define I2C2_TX_DMA_REQUEST 0xE
  26:Core/Src/i2c.c **** #define I2C2_RX_DMA_REQUEST 0xD
  27:Core/Src/i2c.c **** 
  28:Core/Src/i2c.c **** volatile uint8_t tx_finished;
  29:Core/Src/i2c.c **** volatile uint8_t rx_finished;
  30:Core/Src/i2c.c **** /* USER CODE END 0 */
  31:Core/Src/i2c.c **** 
  32:Core/Src/i2c.c **** /* I2C2 init function */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 2


  33:Core/Src/i2c.c **** void MX_I2C2_Init(void)
  34:Core/Src/i2c.c **** {
  27              		.loc 1 34 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 120
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  32              		.cfi_def_cfa_offset 28
  33              		.cfi_offset 4, -28
  34              		.cfi_offset 5, -24
  35              		.cfi_offset 6, -20
  36              		.cfi_offset 7, -16
  37              		.cfi_offset 8, -12
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 14, -4
  40 0004 9FB0     		sub	sp, sp, #124
  41              		.cfi_def_cfa_offset 152
  35:Core/Src/i2c.c **** 
  36:Core/Src/i2c.c ****   /* USER CODE BEGIN I2C2_Init 0 */
  37:Core/Src/i2c.c **** 
  38:Core/Src/i2c.c ****   /* USER CODE END I2C2_Init 0 */
  39:Core/Src/i2c.c **** 
  40:Core/Src/i2c.c ****   LL_I2C_InitTypeDef I2C_InitStruct = {0};
  42              		.loc 1 40 3 view .LVU1
  43              		.loc 1 40 22 is_stmt 0 view .LVU2
  44 0006 0021     		movs	r1, #0
  45 0008 1791     		str	r1, [sp, #92]
  46 000a 1891     		str	r1, [sp, #96]
  47 000c 1991     		str	r1, [sp, #100]
  48 000e 1A91     		str	r1, [sp, #104]
  49 0010 1B91     		str	r1, [sp, #108]
  50 0012 1C91     		str	r1, [sp, #112]
  51 0014 1D91     		str	r1, [sp, #116]
  41:Core/Src/i2c.c **** 
  42:Core/Src/i2c.c ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
  52              		.loc 1 42 3 is_stmt 1 view .LVU3
  53              		.loc 1 42 23 is_stmt 0 view .LVU4
  54 0016 1191     		str	r1, [sp, #68]
  55 0018 1291     		str	r1, [sp, #72]
  56 001a 1391     		str	r1, [sp, #76]
  57 001c 1491     		str	r1, [sp, #80]
  58 001e 1591     		str	r1, [sp, #84]
  59 0020 1691     		str	r1, [sp, #88]
  43:Core/Src/i2c.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  60              		.loc 1 43 3 is_stmt 1 view .LVU5
  61              		.loc 1 43 28 is_stmt 0 view .LVU6
  62 0022 3822     		movs	r2, #56
  63 0024 03A8     		add	r0, sp, #12
  64 0026 FFF7FEFF 		bl	memset
  65              	.LVL0:
  44:Core/Src/i2c.c **** 
  45:Core/Src/i2c.c ****   /** Initializes the peripherals clocks
  46:Core/Src/i2c.c ****   */
  47:Core/Src/i2c.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
  66              		.loc 1 47 3 is_stmt 1 view .LVU7
  67              		.loc 1 47 44 is_stmt 0 view .LVU8
  68 002a 8023     		movs	r3, #128
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 3


  69 002c 0393     		str	r3, [sp, #12]
  48:Core/Src/i2c.c ****   PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
  70              		.loc 1 48 3 is_stmt 1 view .LVU9
  71              		.loc 1 48 42 is_stmt 0 view .LVU10
  72 002e 4FF44023 		mov	r3, #786432
  73 0032 0993     		str	r3, [sp, #36]
  49:Core/Src/i2c.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
  74              		.loc 1 49 3 is_stmt 1 view .LVU11
  75              		.loc 1 49 7 is_stmt 0 view .LVU12
  76 0034 03A8     		add	r0, sp, #12
  77 0036 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
  78              	.LVL1:
  79              		.loc 1 49 6 view .LVU13
  80 003a 0028     		cmp	r0, #0
  81 003c 40F0B280 		bne	.L4
  82              	.L2:
  50:Core/Src/i2c.c ****   {
  51:Core/Src/i2c.c ****     Error_Handler();
  52:Core/Src/i2c.c ****   }
  53:Core/Src/i2c.c **** 
  54:Core/Src/i2c.c ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
  83              		.loc 1 54 3 is_stmt 1 view .LVU14
  84              	.LVL2:
  85              	.LBB50:
  86              	.LBI50:
  87              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @file    stm32wlxx_ll_bus.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @verbatim
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****                       ##### RCC Limitations #####
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ==============================================================================
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       from/to registers.w<
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       Workarounds:
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 4


  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @endverbatim
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifndef __STM32WLxx_LL_BUS_H
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define __STM32WLxx_LL_BUS_H
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifdef __cplusplus
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** extern "C" {
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #include "stm32wlxx.h"
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @addtogroup STM32WLxx_LL_Driver
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(RCC)
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL BUS
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 5


  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOH          RCC_AHB2ENR_GPIOHEN
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_PKA            RCC_AHB3ENR_PKAEN
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_AES            RCC_AHB3ENR_AESEN
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_RNG            RCC_AHB3ENR_RNGEN
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_HSEM           RCC_AHB3ENR_HSEMEN
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_IPCC           RCC_AHB3ENR_IPCCEN
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM1          RCC_AHB3SMENR_SRAM1SMEN
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM2          RCC_AHB3SMENR_SRAM2SMEN
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FLASH          RCC_AHB3ENR_FLASHEN
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC            RCC_APB1ENR1_DACEN
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (0xFFFFFFFFU)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM2         RCC_APB1ENR2_LPTIM2EN
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM3         RCC_APB1ENR2_LPTIM3EN
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 6


 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC            RCC_APB2ENR_ADCEN
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB3_GRP1_PERIPH  APB3 GRP1 PERIPH
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_SUBGHZSPI      RCC_APB3ENR_SUBGHZSPIEN
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB1_GRP1_PERIPH  C2 AHB1 GRP1 PERIPH
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA1         RCC_C2AHB1ENR_DMA1EN
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA2         RCC_C2AHB1ENR_DMA2EN
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMAMUX1      RCC_C2AHB1ENR_DMAMUX1EN
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_CRC          RCC_C2AHB1ENR_CRCEN
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB2_GRP1_PERIPH  C2 AHB2 GRP1 PERIPH
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOA        RCC_C2AHB2ENR_GPIOAEN
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOB        RCC_C2AHB2ENR_GPIOBEN
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOC        RCC_C2AHB2ENR_GPIOCEN
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOH        RCC_C2AHB2ENR_GPIOHEN
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB3_GRP1_PERIPH  C2 AHB3 GRP1 PERIPH
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_PKA          RCC_C2AHB3ENR_PKAEN
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_AES          RCC_C2AHB3ENR_AESEN
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_RNG          RCC_C2AHB3ENR_RNGEN
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_HSEM         RCC_C2AHB3ENR_HSEMEN
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_IPCC         RCC_C2AHB3ENR_IPCCEN
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_FLASH        RCC_C2AHB3ENR_FLASHEN
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM1        RCC_C2AHB3SMENR_SRAM1SMEN
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM2        RCC_C2AHB3SMENR_SRAM2SMEN
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 7


 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP1_PERIPH  C2 APB1 GRP1 PERIPH
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_TIM2         RCC_C2APB1ENR1_TIM2EN
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_RTCAPB       RCC_C2APB1ENR1_RTCAPBEN
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_SPI2         RCC_C2APB1ENR1_SPI2EN
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_USART2       RCC_C2APB1ENR1_USART2EN
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C1         RCC_C2APB1ENR1_I2C1EN
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C2         RCC_C2APB1ENR1_I2C2EN
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C3         RCC_C2APB1ENR1_I2C3EN
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_DAC          RCC_C2APB1ENR1_DACEN
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_LPTIM1       RCC_C2APB1ENR1_LPTIM1EN
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP2_PERIPH  C2 APB1 GRP2 PERIPH
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPUART1      RCC_C2APB1ENR2_LPUART1EN
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM2       RCC_C2APB1ENR2_LPTIM2EN
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM3       RCC_C2APB1ENR2_LPTIM3EN
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB2_GRP1_PERIPH  C2 APB2 GRP1 PERIPH
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_ADC          RCC_C2APB2ENR_ADCEN
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM1         RCC_C2APB2ENR_TIM1EN
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_SPI1         RCC_C2APB2ENR_SPI1EN
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_USART1       RCC_C2APB2ENR_USART1EN
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM16        RCC_C2APB2ENR_TIM16EN
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM17        RCC_C2APB2ENR_TIM17EN
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB3_GRP1_PERIPH  C2 APB3 GRP1 PERIPH
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB3_GRP1_PERIPH_SUBGHZSPI    RCC_C2APB3ENR_SUBGHZSPIEN
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 8


 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_EnableClock\n
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock\n
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_IsEnabledClock\n
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 9


 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_DisableClock\n
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock\n
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST    LL_AHB1_GRP1_ForceReset\n
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ReleaseReset\n
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_EnableClockSleep\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 10


 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_EnableClockSleep\n
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1SMENR, Periphs);
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1SMENR, Periphs);
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_IsEnabledClockSleep\n
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_IsEnabledClockSleep
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_DisableClockSleep\n
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1SMENR, Periphs);
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 11


 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_EnableClock\n
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_EnableClock\n
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_EnableClock\n
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_EnableClock\n
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
  88              		.loc 2 449 22 view .LVU15
  89              	.LBB51:
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
  90              		.loc 2 451 3 view .LVU16
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
  91              		.loc 2 452 3 view .LVU17
  92 0040 4FF0B044 		mov	r4, #1476395008
  93 0044 E36C     		ldr	r3, [r4, #76]
  94 0046 43F00103 		orr	r3, r3, #1
  95 004a E364     		str	r3, [r4, #76]
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
  96              		.loc 2 454 3 view .LVU18
  97              		.loc 2 454 12 is_stmt 0 view .LVU19
  98 004c E36C     		ldr	r3, [r4, #76]
  99 004e 03F00103 		and	r3, r3, #1
 100              		.loc 2 454 10 view .LVU20
 101 0052 0293     		str	r3, [sp, #8]
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 102              		.loc 2 455 3 is_stmt 1 view .LVU21
 103 0054 029B     		ldr	r3, [sp, #8]
 104              	.LVL3:
 105              		.loc 2 455 3 is_stmt 0 view .LVU22
 106              	.LBE51:
 107              	.LBE50:
  55:Core/Src/i2c.c ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 108              		.loc 1 55 3 is_stmt 1 view .LVU23
 109              	.LBB52:
 110              	.LBI52:
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 111              		.loc 2 449 22 view .LVU24
 112              	.LBB53:
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 113              		.loc 2 451 3 view .LVU25
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 114              		.loc 2 452 3 view .LVU26
 115 0056 E36C     		ldr	r3, [r4, #76]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 12


 116 0058 43F00203 		orr	r3, r3, #2
 117 005c E364     		str	r3, [r4, #76]
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 118              		.loc 2 454 3 view .LVU27
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 119              		.loc 2 454 12 is_stmt 0 view .LVU28
 120 005e E36C     		ldr	r3, [r4, #76]
 121 0060 03F00203 		and	r3, r3, #2
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 122              		.loc 2 454 10 view .LVU29
 123 0064 0193     		str	r3, [sp, #4]
 124              		.loc 2 455 3 is_stmt 1 view .LVU30
 125 0066 019B     		ldr	r3, [sp, #4]
 126              	.LVL4:
 127              		.loc 2 455 3 is_stmt 0 view .LVU31
 128              	.LBE53:
 129              	.LBE52:
  56:Core/Src/i2c.c ****   /**I2C2 GPIO Configuration
  57:Core/Src/i2c.c ****   PA15   ------> I2C2_SDA
  58:Core/Src/i2c.c ****   PB15   ------> I2C2_SCL
  59:Core/Src/i2c.c ****   */
  60:Core/Src/i2c.c ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_15;
 130              		.loc 1 60 3 is_stmt 1 view .LVU32
 131              		.loc 1 60 23 is_stmt 0 view .LVU33
 132 0068 4FF40049 		mov	r9, #32768
 133 006c CDF84490 		str	r9, [sp, #68]
  61:Core/Src/i2c.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 134              		.loc 1 61 3 is_stmt 1 view .LVU34
 135              		.loc 1 61 24 is_stmt 0 view .LVU35
 136 0070 4FF00208 		mov	r8, #2
 137 0074 CDF84880 		str	r8, [sp, #72]
  62:Core/Src/i2c.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 138              		.loc 1 62 3 is_stmt 1 view .LVU36
 139              		.loc 1 62 25 is_stmt 0 view .LVU37
 140 0078 0025     		movs	r5, #0
 141 007a 1395     		str	r5, [sp, #76]
  63:Core/Src/i2c.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
 142              		.loc 1 63 3 is_stmt 1 view .LVU38
 143              		.loc 1 63 30 is_stmt 0 view .LVU39
 144 007c 0127     		movs	r7, #1
 145 007e 1497     		str	r7, [sp, #80]
  64:Core/Src/i2c.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 146              		.loc 1 64 3 is_stmt 1 view .LVU40
 147              		.loc 1 64 24 is_stmt 0 view .LVU41
 148 0080 1595     		str	r5, [sp, #84]
  65:Core/Src/i2c.c ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 149              		.loc 1 65 3 is_stmt 1 view .LVU42
 150              		.loc 1 65 29 is_stmt 0 view .LVU43
 151 0082 0426     		movs	r6, #4
 152 0084 1696     		str	r6, [sp, #88]
  66:Core/Src/i2c.c ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 153              		.loc 1 66 3 is_stmt 1 view .LVU44
 154 0086 11A9     		add	r1, sp, #68
 155 0088 4FF09040 		mov	r0, #1207959552
 156 008c FFF7FEFF 		bl	LL_GPIO_Init
 157              	.LVL5:
  67:Core/Src/i2c.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 13


  68:Core/Src/i2c.c ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_15;
 158              		.loc 1 68 3 view .LVU45
 159              		.loc 1 68 23 is_stmt 0 view .LVU46
 160 0090 CDF84490 		str	r9, [sp, #68]
  69:Core/Src/i2c.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 161              		.loc 1 69 3 is_stmt 1 view .LVU47
 162              		.loc 1 69 24 is_stmt 0 view .LVU48
 163 0094 CDF84880 		str	r8, [sp, #72]
  70:Core/Src/i2c.c ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 164              		.loc 1 70 3 is_stmt 1 view .LVU49
 165              		.loc 1 70 25 is_stmt 0 view .LVU50
 166 0098 1395     		str	r5, [sp, #76]
  71:Core/Src/i2c.c ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
 167              		.loc 1 71 3 is_stmt 1 view .LVU51
 168              		.loc 1 71 30 is_stmt 0 view .LVU52
 169 009a 1497     		str	r7, [sp, #80]
  72:Core/Src/i2c.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 170              		.loc 1 72 3 is_stmt 1 view .LVU53
 171              		.loc 1 72 24 is_stmt 0 view .LVU54
 172 009c 1595     		str	r5, [sp, #84]
  73:Core/Src/i2c.c ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 173              		.loc 1 73 3 is_stmt 1 view .LVU55
 174              		.loc 1 73 29 is_stmt 0 view .LVU56
 175 009e 1696     		str	r6, [sp, #88]
  74:Core/Src/i2c.c ****   LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 176              		.loc 1 74 3 is_stmt 1 view .LVU57
 177 00a0 11A9     		add	r1, sp, #68
 178 00a2 4248     		ldr	r0, .L5
 179 00a4 FFF7FEFF 		bl	LL_GPIO_Init
 180              	.LVL6:
  75:Core/Src/i2c.c **** 
  76:Core/Src/i2c.c ****   /* Peripheral clock enable */
  77:Core/Src/i2c.c ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_I2C2);
 181              		.loc 1 77 3 view .LVU58
 182              	.LBB54:
 183              	.LBI54:
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled or not
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_IsEnabledClock\n
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_IsEnabledClock\n
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_IsEnabledClock\n
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_IsEnabledClock\n
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClock(uint32_t Periphs)
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 14


 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock.
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_DisableClock\n
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_DisableClock\n
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_DisableClock\n
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_DisableClock\n
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2ENR, Periphs);
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB2 peripherals reset.
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ForceReset\n
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ForceReset\n
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ForceReset\n
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ForceReset
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ForceReset(uint32_t Periphs)
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2RSTR, Periphs);
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB2 peripherals reset.
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ReleaseReset\n
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ReleaseReset\n
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ReleaseReset\n
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ReleaseReset\n
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ReleaseReset(uint32_t Periphs)
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2RSTR, Periphs);
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock during Low Power (Sleep) mode.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 15


 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_EnableClockSleep\n
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_EnableClockSleep\n
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClockSleep(uint32_t Periphs)
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2SMENR, Periphs);
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2SMENR, Periphs);
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_IsEnabledClockSleep\n
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_IsEnabledClockSleep
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock during Low Power (Sleep) mode.
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_DisableClockSleep\n
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_DisableClockSleep\n
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClockSleep(uint32_t Periphs)
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2SMENR, Periphs);
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 16


 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB3 AHB3
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_EnableClock\n
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_EnableClock\n
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_EnableClock\n
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_EnableClock\n
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_EnableClock\n
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_EnableClock
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_EnableClock\n
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_EnableClock\n
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_EnableClock\n
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_EnableClock\n
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_EnableClock
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClock(uint32_t Periphs)
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3ENR, Periphs);
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_IsEnabledClock\n
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_IsEnabledClock\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 17


 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_IsEnabledClock\n
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_IsEnabledClock\n
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_IsEnabledClock\n
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_IsEnabledClock
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_IsEnabledClock\n
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_IsEnabledClock\n
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_IsEnabledClock\n
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_IsEnabledClock\n
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_IsEnabledClock
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClock(uint32_t Periphs)
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_DisableClock\n
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_DisableClock\n
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_DisableClock\n
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_DisableClock\n
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      IPCCEN        LL_AHB3_GRP1_DisableClock\n
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_DisableClock
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 18


 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3ENR      PKAEN         LL_AHB3_GRP1_DisableClock\n
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      AESEN         LL_AHB3_GRP1_DisableClock\n
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      RNGEN         LL_AHB3_GRP1_DisableClock\n
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      HSEMEN        LL_AHB3_GRP1_DisableClock\n
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3ENR      FLASHEN       LL_AHB3_GRP1_DisableClock
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClock(uint32_t Periphs)
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3ENR, Periphs);
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ForceReset\n
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ForceReset\n
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ForceReset\n
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ForceReset\n
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     IPCCRST       LL_AHB3_GRP1_ForceReset\n
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ForceReset
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ForceReset\n
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ForceReset\n
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ForceReset\n
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ForceReset\n
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ForceReset
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 19


 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ForceReset(uint32_t Periphs)
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3RSTR, Periphs);
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE) /* Switch added for Documentation generation purpose to exclude IPCC in else
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ReleaseReset\n
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ReleaseReset\n
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ReleaseReset\n
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ReleaseReset\n
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     IPCCRST       LL_AHB3_GRP1_ReleaseReset\n
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ReleaseReset
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_IPCC
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #else
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3RSTR     PKARST        LL_AHB3_GRP1_ReleaseReset\n
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     AESRST        LL_AHB3_GRP1_ReleaseReset\n
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     RNGRST        LL_AHB3_GRP1_ReleaseReset\n
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     HSEMRST       LL_AHB3_GRP1_ReleaseReset\n
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3RSTR     FLASHRST      LL_AHB3_GRP1_ReleaseReset
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_HSEM
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ReleaseReset(uint32_t Periphs)
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3RSTR, Periphs);
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock during Low Power (Sleep) mode.
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_EnableClockSleep\n
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_EnableClockSleep\n
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_EnableClockSleep\n
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_EnableClockSleep\n
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_EnableClockSleep\n
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_EnableClockSleep
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 20


 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClockSleep(uint32_t Periphs)
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB3SMENR, Periphs);
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3SMENR, Periphs);
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_IsEnabledClockSleep\n
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB3_GRP1_IsEnabledClockSleep\n
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_IsEnabledClockSleep\n
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_IsEnabledClockSleep
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock during Low Power (Sleep) mode.
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB3SMENR    PKASMEN       LL_AHB3_GRP1_DisableClockSleep\n
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    AESSMEN       LL_AHB3_GRP1_DisableClockSleep\n
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    RNGSMEN       LL_AHB3_GRP1_DisableClockSleep\n
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM1SMEN     LL_AHB3_GRP1_DisableClockSleep\n
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    SRAM2SMEN     LL_AHB3_GRP1_DisableClockSleep\n
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB3SMENR    FLASHSMEN     LL_AHB3_GRP1_DisableClockSleep
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_PKA
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_AES
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_RNG
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM1
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_SRAM2
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FLASH
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 21


 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClockSleep(uint32_t Periphs)
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3SMENR, Periphs);
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_EnableClock\n
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_EnableClock\n
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_EnableClock\n
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_EnableClock\n
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_EnableClock\n
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_EnableClock\n
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_EnableClock\n
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_EnableClock\n
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     DACEN         LL_APB1_GRP1_EnableClock\n
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_EnableClock
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 184              		.loc 2 914 22 view .LVU59
 185              	.LBB55:
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 186              		.loc 2 916 3 view .LVU60
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->APB1ENR1, Periphs);
 187              		.loc 2 917 3 view .LVU61
 188 00a8 A36D     		ldr	r3, [r4, #88]
 189 00aa 43F48003 		orr	r3, r3, #4194304
 190 00ae A365     		str	r3, [r4, #88]
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 191              		.loc 2 919 3 view .LVU62
 192              		.loc 2 919 12 is_stmt 0 view .LVU63
 193 00b0 A36D     		ldr	r3, [r4, #88]
 194 00b2 03F48003 		and	r3, r3, #4194304
 195              		.loc 2 919 10 view .LVU64
 196 00b6 0093     		str	r3, [sp]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 22


 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 197              		.loc 2 920 3 is_stmt 1 view .LVU65
 198 00b8 009B     		ldr	r3, [sp]
 199              	.LVL7:
 200              		.loc 2 920 3 is_stmt 0 view .LVU66
 201              	.LBE55:
 202              	.LBE54:
  78:Core/Src/i2c.c **** 
  79:Core/Src/i2c.c ****   /* I2C2 DMA Init */
  80:Core/Src/i2c.c **** 
  81:Core/Src/i2c.c ****   /* I2C2_TX Init */
  82:Core/Src/i2c.c ****   LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_2, LL_DMAMUX_REQ_I2C2_TX);
 203              		.loc 1 82 3 is_stmt 1 view .LVU67
 204              	.LBB56:
 205              	.LBI56:
 206              		.file 3 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @file    stm32wlxx_ll_dma.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #ifndef STM32WLxx_LL_DMA_H
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define STM32WLxx_LL_DMA_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #ifdef __cplusplus
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** extern "C" {
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #include "stm32wlxx.h"
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #include "stm32wlxx_ll_dmamux.h"
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @addtogroup STM32WLxx_LL_Driver
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL DMA
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 23


  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE),
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** };
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Helper macro to convert DMA Instance DMAx into DMAMUX channel
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         DMAMUX channel 7 to 13 are mapped to DMA2 channel 1 to 7.
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Channel_Offset (LL_DMA_CHANNEL_7 or 0).
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define __LL_DMA_INSTANCE_TO_DMAMUX_CHANNEL(__DMA_INSTANCE__)   \
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) ? 0 : LL_DMA_CHANNEL_7)
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** typedef struct
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 24


  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         is incremented or not.
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         is incremented or not.
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter can be a value of @ref DMAMUX_LL_EC_REQUEST
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** } LL_DMA_InitTypeDef;
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 25


 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 26


 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000000U /*!< DMA Channel 1 */
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000001U /*!< DMA Channel 2 */
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000002U /*!< DMA Channel 3 */
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000003U /*!< DMA Channel 4 */
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000004U /*!< DMA Channel 5 */
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000005U /*!< DMA Channel 6 */
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000006U /*!< DMA Channel 7 */
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 27


 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 28


 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined(DMA_CCR_SECM)
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_CHANNEL_SEC_MODE CHANNEL SECURITY MODE
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_NSEC               0x00000000U             /*!< Disable secure DMA channel *
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_SEC                DMA_CCR_SECM            /*!< Enable  secure DMA channel *
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined (CORE_CM0PLUS)
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_SOURCE_TRANSFER_SEC_MODE TRANSFER SECURITY SOURCE MODE
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_SRC_NSEC           0x00000000U             /*!< Disable secure DMA transfer 
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_SRC_SEC            DMA_CCR_SSEC            /*!< Enable  secure DMA transfer 
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_DEST_TRANSFER_SEC_MODE TRANSFER SECURITY DESTINATION MODE
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_DEST_NSEC          0x00000000U             /*!< Disable secure DMA transfer 
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_DEST_SEC           DMA_CCR_DSEC            /*!< Enable  secure DMA transfer 
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* CORE_CM0PLUS */
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* DMA_CCR_SECM */
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined(DMA_CCR_PRIV)
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_SEC_PRIVILEGE_MODE PRIVILEGE MODE
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_NPRIV              0x00000000U             /*!< Disable privilege */
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_CHANNEL_PRIV               DMA_CCR_PRIV            /*!< Enable  privilege */
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* DMA_CCR_PRIV */
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Write a value in DMA register
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 29


 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __REG__ Register to be written
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Read a value in DMA register
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __REG__ Register to be read
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Register value
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval DMAx
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel7)) ?  DMA2 : DMA1)
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel6)) ? LL_DMA_CHANNEL_6 : \
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval DMAx_Channely
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 30


 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  DMA2_Channel7)
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @}
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  * @{
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****  */
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @{
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Enable DMA channel.
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_EN);
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Disable DMA channel.
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 31


 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_EN
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval State of bit (1 or 0).
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                     DMA_CCR_EN) == (DMA_CCR_EN)) ? 1UL : 0UL);
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined(DMA_CCR_SECM)
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined (CORE_CM0PLUS)
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Configure all secure parameters link to DMA transfer.
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SECM          LL_DMA_ConfigChannelSecure\n
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          SSEC          LL_DMA_ConfigChannelSecure\n
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          DSEC          LL_DMA_ConfigChannelSecure\n
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_SEC or @ref LL_DMA_CHANNEL_NSEC
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_SRC_SEC or @ref LL_DMA_CHANNEL_SRC_NSEC
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_DEST_SEC or LL_DMA_CHANNEL_DEST_NSEC
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigChannelSecure(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Confi
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 32


 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + (uint32_t)(CHANNEL_OFFSET_TAB[Channel])))->CC
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              DMA_CCR_SECM | DMA_CCR_SSEC | DMA_CCR_DSEC,
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Configuration);
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get the configuration of a secure channel.
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SECM          LL_DMA_GetConfigChannelSecure\n
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          SSEC          LL_DMA_GetConfigChannelSecure\n
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          DSEC          LL_DMA_GetConfigChannelSecure\n
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Configuration This parameter must be a combination of all the following values:
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_SEC or @ref LL_DMA_CHANNEL_NSEC
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_SRC_SEC or @ref LL_DMA_CHANNEL_SRC_NSEC
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_DEST_SEC or LL_DMA_CHANNEL_DEST_NSEC
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetConfigChannelSecure(DMA_TypeDef *DMAx, uint32_t Channel)
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_SECM | DMA_CCR_SSEC | DMA_CCR_DSEC));
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #else
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get the configuration of a secure channel.
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SECM          LL_DMA_GetConfigChannelSecure\n
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Configuration This parameter must be a combination of all the following values:
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_SEC or @ref LL_DMA_CHANNEL_NSEC
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetConfigChannelSecure(DMA_TypeDef *DMAx, uint32_t Channel)
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_SECM));
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* CORE_CM0PLUS */
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* DMA_CCR_SECM */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 33


 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Configuration);
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 34


 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_C
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Mode);
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 35


 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_CIRC));
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 36


 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_PINC));
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set Memory increment mode.
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Memory increment mode.
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 37


 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_MINC));
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set Peripheral size.
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Peripheral size.
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_PSIZE));
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set Memory size.
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 38


 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Memory size.
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_MSIZE));
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set Channel priority level.
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 39


 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Priority);
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Channel priority level.
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CCR_PL));
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined(DMA_CCR_SECM)
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined (CORE_CM0PLUS)
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Enable the DMA Channel secure attribute.
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SECM          LL_DMA_EnableChannelSecure\n
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannelSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 40


1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,  DMA_CCR_SEC
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Disable the DMA channel secure attribute.
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SECM          LL_DMA_DisableChannelSecure\n
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannelSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_SE
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* CORE_CM0PLUS */
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Check if DMA channel is secure or not.
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SECM          LL_DMA_IsEnabledChannelSecure\n
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval State of bit (1 or 0).
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannelSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                     DMA_CCR_SECM) == (DMA_CCR_SECM)) ? 1UL : 0UL);
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined (CORE_CM0PLUS)
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Enable the secure attribute on DMA channel source.
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SSEC          LL_DMA_EnableChannelSrcSecure\n
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 41


1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannelSrcSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_SSEC
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Disable the secure attribute on DMA channel source.
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SSEC          LL_DMA_DisableChannelSrcSecure\n
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannelSrcSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_SS
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Check if DMA channel source attribute is secure or not.
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          SSEC          LL_DMA_IsEnabledChannelSrcSecure\n
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval State of bit (1 or 0).
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannelSrcSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                     DMA_CCR_SSEC) == (DMA_CCR_SSEC)) ? 1UL : 0UL);
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Enable the secure attribute on DMA channel destination
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          DSEC          LL_DMA_EnableChannelDestSecure\n
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 42


1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannelDestSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_DSEC
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Disable the secure attribute on DMA channel destination.
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          DSEC          LL_DMA_DisableChannelDestSecure\n
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannelDestSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_DS
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Check if DMA channel destination attribute is secure or not.
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          DSEC          LL_DMA_IsEnabledChannelDestSecure\n
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval State of bit (1 or 0).
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannelDestSecure(DMA_TypeDef *DMAx, uint32_t Channel)
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                     DMA_CCR_DSEC) == (DMA_CCR_DSEC)) ? 1UL : 0UL);
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* CORE_CM0PLUS */
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* DMA_CCR_SECM */
1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #if defined(DMA_CCR_PRIV)
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 43


1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Enable the privilege attribute on DMA channel.
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PRIV          LL_DMA_EnableChannelPrivilege\n
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannelPrivilege(DMA_TypeDef *DMAx, uint32_t Channel)
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,  DMA_CCR_PRI
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Disable the privilege attribute on DMA channel.
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PRIV          LL_DMA_DisableChannelPrivilege\n
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannelPrivilege(DMA_TypeDef *DMAx, uint32_t Channel)
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,  DMA_CCR_P
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Check if DMA channel attribute is privilege or not.
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CCR          PRIV          LL_DMA_IsEnabledChannelPrivilege\n
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval State of bit (1 or 0).
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannelPrivilege(DMA_TypeDef *DMAx, uint32_t Channel)
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 44


1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                     DMA_CCR_PRIV) == (DMA_CCR_PRIV)) ? 1UL : 0UL);
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** #endif /* DMA_CCR_PRIV */
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set Number of data to transfer.
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   This action has no effect if
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         channel is enabled.
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CNDTR,
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Number of data to transfer.
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         remaining bytes to be transmitted.
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CNDTR,
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                    DMA_CNDTR_NDT));
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Each peripheral using DMA provides an API to get directly the register address (LL_PPP_
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 45


1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   /* Direction Memory to Periph */
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   {
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, SrcAddr
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, DstAddr
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   }
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   else
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   {
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, SrcAddr
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, DstAddr
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   }
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set the Memory address.
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, MemoryAdd
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 46


1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set the Peripheral address.
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, PeriphAdd
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Memory address.
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR));
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get Peripheral address.
1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 47


1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR));
1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, MemoryAdd
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, MemoryAdd
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 48


1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR));
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR));
1506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** }
1507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** 
1508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** /**
1509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @brief  Set DMA request for DMA Channels on DMAMUX Channel x.
1510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
1511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         DMAMUX channel 7 to 13 are mapped to DMA2 channel 1 to 7.
1512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @rmtoll CxCR         DMAREQ_ID     LL_DMA_SetPeriphRequest
1513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  DMAx DMAx Instance
1514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @param  Request This parameter can be one of the following values:
1523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_MEM2MEM
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 49


1524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR0
1525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR1
1526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR2
1527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR3
1528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC
1529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC_OUT1
1530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_RX
1531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_TX
1532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_RX
1533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_TX
1534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_RX
1535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_TX
1536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_RX
1537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_TX
1538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_RX
1539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_TX
1540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_RX
1541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_TX
1542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_RX
1543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_TX
1544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_RX
1545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_TX
1546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH1
1547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH2
1548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH3
1549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH4
1550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_UP
1551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_TRIG
1552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_COM
1553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH1
1554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH2
1555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH3
1556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH4
1557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_UP
1558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_CH1
1559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_UP
1560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_CH1
1561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_UP
1562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_IN
1563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_OUT
1564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SUBGHZSPI_RX
1565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SUBGHZSPI_TX
1566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   * @retval None
1567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   */
1568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Request)
 207              		.loc 3 1568 22 view .LVU68
 208              	.LBB57:
1569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
1570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   uint32_t dmamux_ccr_offset = ((((uint32_t)DMAx ^ (uint32_t)DMA1) >> 10U) * 7U);
 209              		.loc 3 1570 3 view .LVU69
1571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID, Request)
 210              		.loc 3 1571 3 view .LVU70
 211 00ba 3D4B     		ldr	r3, .L5+4
 212 00bc D3F80428 		ldr	r2, [r3, #2052]
 213 00c0 22F07F02 		bic	r2, r2, #127
 214 00c4 42F00E02 		orr	r2, r2, #14
 215 00c8 C3F80428 		str	r2, [r3, #2052]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 50


 216              	.LVL8:
 217              		.loc 3 1571 3 is_stmt 0 view .LVU71
 218              	.LBE57:
 219              	.LBE56:
  83:Core/Src/i2c.c **** 
  84:Core/Src/i2c.c ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_2, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
 220              		.loc 1 84 3 is_stmt 1 view .LVU72
 221              	.LBB58:
 222              	.LBI58:
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 223              		.loc 3 668 22 view .LVU73
 224              	.LBB59:
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 225              		.loc 3 670 3 view .LVU74
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 226              		.loc 3 671 3 view .LVU75
 227 00cc DA69     		ldr	r2, [r3, #28]
 228 00ce 22F48042 		bic	r2, r2, #16384
 229 00d2 22F01002 		bic	r2, r2, #16
 230 00d6 42F01002 		orr	r2, r2, #16
 231 00da DA61     		str	r2, [r3, #28]
 232              	.LVL9:
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 233              		.loc 3 671 3 is_stmt 0 view .LVU76
 234              	.LBE59:
 235              	.LBE58:
  85:Core/Src/i2c.c **** 
  86:Core/Src/i2c.c ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PRIORITY_LOW);
 236              		.loc 1 86 3 is_stmt 1 view .LVU77
 237              	.LBB60:
 238              	.LBI60:
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 239              		.loc 3 960 22 view .LVU78
 240              	.LBB61:
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 241              		.loc 3 962 3 view .LVU79
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Priority);
 242              		.loc 3 963 3 view .LVU80
 243 00dc DA69     		ldr	r2, [r3, #28]
 244 00de 22F44052 		bic	r2, r2, #12288
 245 00e2 DA61     		str	r2, [r3, #28]
 246              	.LVL10:
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Priority);
 247              		.loc 3 963 3 is_stmt 0 view .LVU81
 248              	.LBE61:
 249              	.LBE60:
  87:Core/Src/i2c.c **** 
  88:Core/Src/i2c.c ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MODE_NORMAL);
 250              		.loc 1 88 3 is_stmt 1 view .LVU82
 251              	.LBB62:
 252              	.LBI62:
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 253              		.loc 3 719 22 view .LVU83
 254              	.LBB63:
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_C
 255              		.loc 3 721 3 view .LVU84
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Mode);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 51


 256              		.loc 3 722 3 view .LVU85
 257 00e4 DA69     		ldr	r2, [r3, #28]
 258 00e6 22F02002 		bic	r2, r2, #32
 259 00ea DA61     		str	r2, [r3, #28]
 260              	.LVL11:
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Mode);
 261              		.loc 3 722 3 is_stmt 0 view .LVU86
 262              	.LBE63:
 263              	.LBE62:
  89:Core/Src/i2c.c **** 
  90:Core/Src/i2c.c ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PERIPH_NOINCREMENT);
 264              		.loc 1 90 3 is_stmt 1 view .LVU87
 265              	.LBB64:
 266              	.LBI64:
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 267              		.loc 3 766 22 view .LVU88
 268              	.LBB65:
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 269              		.loc 3 768 3 view .LVU89
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 270              		.loc 3 769 3 view .LVU90
 271 00ec DA69     		ldr	r2, [r3, #28]
 272 00ee 22F04002 		bic	r2, r2, #64
 273 00f2 DA61     		str	r2, [r3, #28]
 274              	.LVL12:
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 275              		.loc 3 769 3 is_stmt 0 view .LVU91
 276              	.LBE65:
 277              	.LBE64:
  91:Core/Src/i2c.c **** 
  92:Core/Src/i2c.c ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MEMORY_INCREMENT);
 278              		.loc 1 92 3 is_stmt 1 view .LVU92
 279              	.LBB66:
 280              	.LBI66:
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 281              		.loc 3 813 22 view .LVU93
 282              	.LBB67:
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 283              		.loc 3 815 3 view .LVU94
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 284              		.loc 3 816 3 view .LVU95
 285 00f4 DA69     		ldr	r2, [r3, #28]
 286 00f6 42F08002 		orr	r2, r2, #128
 287 00fa DA61     		str	r2, [r3, #28]
 288              	.LVL13:
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 289              		.loc 3 816 3 is_stmt 0 view .LVU96
 290              	.LBE67:
 291              	.LBE66:
  93:Core/Src/i2c.c **** 
  94:Core/Src/i2c.c ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PDATAALIGN_BYTE);
 292              		.loc 1 94 3 is_stmt 1 view .LVU97
 293              	.LBB68:
 294              	.LBI68:
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 295              		.loc 3 861 22 view .LVU98
 296              	.LBB69:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 52


 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 297              		.loc 3 863 3 view .LVU99
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 298              		.loc 3 864 3 view .LVU100
 299 00fc DA69     		ldr	r2, [r3, #28]
 300 00fe 22F44072 		bic	r2, r2, #768
 301 0102 DA61     		str	r2, [r3, #28]
 302              	.LVL14:
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 303              		.loc 3 864 3 is_stmt 0 view .LVU101
 304              	.LBE69:
 305              	.LBE68:
  95:Core/Src/i2c.c **** 
  96:Core/Src/i2c.c ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MDATAALIGN_BYTE);
 306              		.loc 1 96 3 is_stmt 1 view .LVU102
 307              	.LBB70:
 308              	.LBI70:
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 309              		.loc 3 910 22 view .LVU103
 310              	.LBB71:
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 311              		.loc 3 912 3 view .LVU104
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 312              		.loc 3 913 3 view .LVU105
 313 0104 DA69     		ldr	r2, [r3, #28]
 314 0106 22F44062 		bic	r2, r2, #3072
 315 010a DA61     		str	r2, [r3, #28]
 316              	.LVL15:
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 317              		.loc 3 913 3 is_stmt 0 view .LVU106
 318              	.LBE71:
 319              	.LBE70:
  97:Core/Src/i2c.c **** 
  98:Core/Src/i2c.c ****   /* I2C2_RX Init */
  99:Core/Src/i2c.c ****   LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_3, LL_DMAMUX_REQ_I2C2_RX);
 320              		.loc 1 99 3 is_stmt 1 view .LVU107
 321              	.LBB72:
 322              	.LBI72:
1568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 323              		.loc 3 1568 22 view .LVU108
 324              	.LBB73:
1570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID, Request)
 325              		.loc 3 1570 3 view .LVU109
 326              		.loc 3 1571 3 view .LVU110
 327 010c D3F80828 		ldr	r2, [r3, #2056]
 328 0110 22F07F02 		bic	r2, r2, #127
 329 0114 42F00D02 		orr	r2, r2, #13
 330 0118 C3F80828 		str	r2, [r3, #2056]
 331              	.LVL16:
 332              		.loc 3 1571 3 is_stmt 0 view .LVU111
 333              	.LBE73:
 334              	.LBE72:
 100:Core/Src/i2c.c **** 
 101:Core/Src/i2c.c ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_3, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 335              		.loc 1 101 3 is_stmt 1 view .LVU112
 336              	.LBB74:
 337              	.LBI74:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 53


 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 338              		.loc 3 668 22 view .LVU113
 339              	.LBB75:
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 340              		.loc 3 670 3 view .LVU114
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 341              		.loc 3 671 3 view .LVU115
 342 011c 1A6B     		ldr	r2, [r3, #48]
 343 011e 22F48042 		bic	r2, r2, #16384
 344 0122 22F01002 		bic	r2, r2, #16
 345 0126 1A63     		str	r2, [r3, #48]
 346              	.LVL17:
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 347              		.loc 3 671 3 is_stmt 0 view .LVU116
 348              	.LBE75:
 349              	.LBE74:
 102:Core/Src/i2c.c **** 
 103:Core/Src/i2c.c ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PRIORITY_LOW);
 350              		.loc 1 103 3 is_stmt 1 view .LVU117
 351              	.LBB76:
 352              	.LBI76:
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 353              		.loc 3 960 22 view .LVU118
 354              	.LBB77:
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 355              		.loc 3 962 3 view .LVU119
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Priority);
 356              		.loc 3 963 3 view .LVU120
 357 0128 1A6B     		ldr	r2, [r3, #48]
 358 012a 22F44052 		bic	r2, r2, #12288
 359 012e 1A63     		str	r2, [r3, #48]
 360              	.LVL18:
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Priority);
 361              		.loc 3 963 3 is_stmt 0 view .LVU121
 362              	.LBE77:
 363              	.LBE76:
 104:Core/Src/i2c.c **** 
 105:Core/Src/i2c.c ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MODE_NORMAL);
 364              		.loc 1 105 3 is_stmt 1 view .LVU122
 365              	.LBB78:
 366              	.LBI78:
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 367              		.loc 3 719 22 view .LVU123
 368              	.LBB79:
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_C
 369              		.loc 3 721 3 view .LVU124
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Mode);
 370              		.loc 3 722 3 view .LVU125
 371 0130 1A6B     		ldr	r2, [r3, #48]
 372 0132 22F02002 		bic	r2, r2, #32
 373 0136 1A63     		str	r2, [r3, #48]
 374              	.LVL19:
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              Mode);
 375              		.loc 3 722 3 is_stmt 0 view .LVU126
 376              	.LBE79:
 377              	.LBE78:
 106:Core/Src/i2c.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 54


 107:Core/Src/i2c.c ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PERIPH_NOINCREMENT);
 378              		.loc 1 107 3 is_stmt 1 view .LVU127
 379              	.LBB80:
 380              	.LBI80:
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 381              		.loc 3 766 22 view .LVU128
 382              	.LBB81:
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 383              		.loc 3 768 3 view .LVU129
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 384              		.loc 3 769 3 view .LVU130
 385 0138 1A6B     		ldr	r2, [r3, #48]
 386 013a 22F04002 		bic	r2, r2, #64
 387 013e 1A63     		str	r2, [r3, #48]
 388              	.LVL20:
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 389              		.loc 3 769 3 is_stmt 0 view .LVU131
 390              	.LBE81:
 391              	.LBE80:
 108:Core/Src/i2c.c **** 
 109:Core/Src/i2c.c ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MEMORY_INCREMENT);
 392              		.loc 1 109 3 is_stmt 1 view .LVU132
 393              	.LBB82:
 394              	.LBI82:
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 395              		.loc 3 813 22 view .LVU133
 396              	.LBB83:
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 397              		.loc 3 815 3 view .LVU134
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 398              		.loc 3 816 3 view .LVU135
 399 0140 1A6B     		ldr	r2, [r3, #48]
 400 0142 42F08002 		orr	r2, r2, #128
 401 0146 1A63     		str	r2, [r3, #48]
 402              	.LVL21:
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 403              		.loc 3 816 3 is_stmt 0 view .LVU136
 404              	.LBE83:
 405              	.LBE82:
 110:Core/Src/i2c.c **** 
 111:Core/Src/i2c.c ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PDATAALIGN_BYTE);
 406              		.loc 1 111 3 is_stmt 1 view .LVU137
 407              	.LBB84:
 408              	.LBI84:
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 409              		.loc 3 861 22 view .LVU138
 410              	.LBB85:
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 411              		.loc 3 863 3 view .LVU139
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 412              		.loc 3 864 3 view .LVU140
 413 0148 1A6B     		ldr	r2, [r3, #48]
 414 014a 22F44072 		bic	r2, r2, #768
 415 014e 1A63     		str	r2, [r3, #48]
 416              	.LVL22:
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 417              		.loc 3 864 3 is_stmt 0 view .LVU141
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 55


 418              	.LBE85:
 419              	.LBE84:
 112:Core/Src/i2c.c **** 
 113:Core/Src/i2c.c ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MDATAALIGN_BYTE);
 420              		.loc 1 113 3 is_stmt 1 view .LVU142
 421              	.LBB86:
 422              	.LBI86:
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h **** {
 423              		.loc 3 910 22 view .LVU143
 424              	.LBB87:
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 425              		.loc 3 912 3 view .LVU144
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 426              		.loc 3 913 3 view .LVU145
 427 0150 1A6B     		ldr	r2, [r3, #48]
 428 0152 22F44062 		bic	r2, r2, #3072
 429 0156 1A63     		str	r2, [r3, #48]
 430              	.LVL23:
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 431              		.loc 3 913 3 is_stmt 0 view .LVU146
 432              	.LBE87:
 433              	.LBE86:
 114:Core/Src/i2c.c **** 
 115:Core/Src/i2c.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 116:Core/Src/i2c.c ****     // /* TX DMA Configuration */
 117:Core/Src/i2c.c ****     //   DMAMUX1_Channel2->CCR |= (I2C2_TX_DMA_REQUEST << DMAMUX_CxCR_DMAREQ_ID_Pos); // Set I2C2_R
 118:Core/Src/i2c.c ****     //   DMA1_Channel2->CCR  |= DMA_CCR_DIR;   // mem to per
 119:Core/Src/i2c.c ****     //   DMA1_Channel2->CCR  &= ~DMA_CCR_PL;   // low priority
 120:Core/Src/i2c.c ****     //   DMA1_Channel2->CCR  &= ~DMA_CCR_CIRC; // normal mode
 121:Core/Src/i2c.c ****     //   DMA1_Channel2->CCR  &= ~DMA_CCR_PINC; // no per inc
 122:Core/Src/i2c.c ****     //   DMA1_Channel2->CCR  |= DMA_CCR_MINC;  // mem inc
 123:Core/Src/i2c.c ****     //   DMA1_Channel2->CCR  &= ~DMA_CCR_PSIZE;// per size byte
 124:Core/Src/i2c.c ****     //   DMA1_Channel2->CCR  &= ~DMA_CCR_MSIZE;// mem size byte
 125:Core/Src/i2c.c ****     //   /* RX DMA Configuration */
 126:Core/Src/i2c.c ****     //   DMAMUX1_Channel3->CCR |= (I2C2_RX_DMA_REQUEST << DMAMUX_CxCR_DMAREQ_ID_Pos); // Set I2C2_T
 127:Core/Src/i2c.c ****     //   DMA1_Channel3->CCR  &= ~DMA_CCR_DIR;   // per to mem
 128:Core/Src/i2c.c ****     //   DMA1_Channel3->CCR  &= ~DMA_CCR_PL;   // low priority
 129:Core/Src/i2c.c ****     //   DMA1_Channel3->CCR  &= ~DMA_CCR_CIRC; // normal mode
 130:Core/Src/i2c.c ****     //   DMA1_Channel3->CCR  &= ~DMA_CCR_PINC; // no per inc
 131:Core/Src/i2c.c ****     //   DMA1_Channel3->CCR  |= DMA_CCR_MINC;  // mem inc
 132:Core/Src/i2c.c ****     //   DMA1_Channel3->CCR  &= ~DMA_CCR_PSIZE;// per size byte
 133:Core/Src/i2c.c ****     //   DMA1_Channel3->CCR  &= ~DMA_CCR_MSIZE;// mem size byte
 134:Core/Src/i2c.c **** 
 135:Core/Src/i2c.c ****   /* USER CODE END I2C2_Init 1 */
 136:Core/Src/i2c.c **** 
 137:Core/Src/i2c.c ****   /** I2C Initialization
 138:Core/Src/i2c.c ****   */
 139:Core/Src/i2c.c ****   LL_I2C_EnableAutoEndMode(I2C2);
 434              		.loc 1 139 3 is_stmt 1 view .LVU147
 435              	.LBB88:
 436              	.LBI88:
 437              		.file 4 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @file    stm32wlxx_ll_i2c.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief   Header file of I2C LL module.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 56


   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #ifndef STM32WLxx_LL_I2C_H
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define STM32WLxx_LL_I2C_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #ifdef __cplusplus
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** extern "C" {
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #endif
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #include "stm32wlxx.h"
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @addtogroup STM32WLxx_LL_Driver
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #if defined (I2C1) || defined (I2C2) || defined (I2C3)
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL I2C
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Constants I2C Private Constants
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Private_Macros I2C Private Macros
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Exported types ------------------------------------------------------------*/
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 57


  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_ES_INIT I2C Exported Init structure
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** typedef struct
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t PeripheralMode;      /*!< Specifies the peripheral mode.
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_PERIPHERAL_MOD
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetMode(). */
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t Timing;              /*!< Specifies the SDA setup, hold time and the SCL high, low perio
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter must be set by referring to the STM32CubeMX Too
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      the helper macro @ref __LL_I2C_CONVERT_TIMINGS().
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetTiming(). */
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t AnalogFilter;        /*!< Enables or disables analog noise filter.
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_ANALOGFILTER_S
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_EnableAnalogFilter() or LL_I2C_DisableAnalogFilter
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t DigitalFilter;       /*!< Configures the digital noise filter.
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a number between Min_Data = 0x00 and Max
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetDigitalFilter(). */
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t OwnAddress1;         /*!< Specifies the device own address 1.
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter must be a value between Min_Data = 0x00 and Max
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t TypeAcknowledge;     /*!< Specifies the ACKnowledge or Non ACKnowledge condition after t
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      match code or next received byte.
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_I2C_ACKNOWLEDG
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_AcknowledgeNextData(). */
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t OwnAddrSize;         /*!< Specifies the device own address 1 size (7-bit or 10-bit).
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This parameter can be a value of @ref I2C_LL_EC_OWNADDRESS1.
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      This feature can be modified afterwards using unitary function
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                      @ref LL_I2C_SetOwnAddress1(). */
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** } LL_I2C_InitTypeDef;
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #endif /*USE_FULL_LL_DRIVER*/
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Exported constants --------------------------------------------------------*/
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Constants I2C Exported Constants
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 58


 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_CLEAR_FLAG Clear Flags Defines
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_WriteReg function
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_ADDRCF                   I2C_ICR_ADDRCF          /*!< Address Matched flag   */
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_NACKCF                   I2C_ICR_NACKCF          /*!< Not Acknowledge flag   */
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_STOPCF                   I2C_ICR_STOPCF          /*!< Stop detection flag    */
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_BERRCF                   I2C_ICR_BERRCF          /*!< Bus error flag         */
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_ARLOCF                   I2C_ICR_ARLOCF          /*!< Arbitration Lost flag  */
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_OVRCF                    I2C_ICR_OVRCF           /*!< Overrun/Underrun flag  */
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_PECCF                    I2C_ICR_PECCF           /*!< PEC error flag         */
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_TIMOUTCF                 I2C_ICR_TIMOUTCF        /*!< Timeout detection flag */
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ICR_ALERTCF                  I2C_ICR_ALERTCF         /*!< Alert flag             */
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GET_FLAG Get Flags Defines
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief    Flags defines which can be used with LL_I2C_ReadReg function
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TXE                      I2C_ISR_TXE             /*!< Transmit data register emp
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TXIS                     I2C_ISR_TXIS            /*!< Transmit interrupt status 
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_RXNE                     I2C_ISR_RXNE            /*!< Receive data register not 
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_ADDR                     I2C_ISR_ADDR            /*!< Address matched (slave mod
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_NACKF                    I2C_ISR_NACKF           /*!< Not Acknowledge received f
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_STOPF                    I2C_ISR_STOPF           /*!< Stop detection flag       
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TC                       I2C_ISR_TC              /*!< Transfer Complete (master 
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TCR                      I2C_ISR_TCR             /*!< Transfer Complete Reload  
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_BERR                     I2C_ISR_BERR            /*!< Bus error                 
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_ARLO                     I2C_ISR_ARLO            /*!< Arbitration lost          
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_OVR                      I2C_ISR_OVR             /*!< Overrun/Underrun (slave mo
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_PECERR                   I2C_ISR_PECERR          /*!< PEC Error in reception (SM
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_TIMEOUT                  I2C_ISR_TIMEOUT         /*!< Timeout detection flag (SM
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_ALERT                    I2C_ISR_ALERT           /*!< SMBus alert (SMBus mode)  
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ISR_BUSY                     I2C_ISR_BUSY            /*!< Bus busy                  
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_IT IT Defines
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief    IT defines which can be used with LL_I2C_ReadReg and  LL_I2C_WriteReg functions
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_TXIE                     I2C_CR1_TXIE            /*!< TX Interrupt enable       
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_RXIE                     I2C_CR1_RXIE            /*!< RX Interrupt enable       
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_ADDRIE                   I2C_CR1_ADDRIE          /*!< Address match Interrupt en
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_NACKIE                   I2C_CR1_NACKIE          /*!< Not acknowledge received I
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_STOPIE                   I2C_CR1_STOPIE          /*!< STOP detection Interrupt e
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_TCIE                     I2C_CR1_TCIE            /*!< Transfer Complete interrup
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_CR1_ERRIE                    I2C_CR1_ERRIE           /*!< Error interrupts enable   
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 59


 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_PERIPHERAL_MODE Peripheral Mode
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_I2C                    0x00000000U              /*!< I2C Master or Slave mode  
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_HOST             I2C_CR1_SMBHEN           /*!< SMBus Host address acknowl
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE           0x00000000U              /*!< SMBus Device default mode
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                          (Default address not ackno
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_DEVICE_ARP       I2C_CR1_SMBDEN           /*!< SMBus Device Default addre
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ANALOGFILTER_SELECTION Analog Filter Selection
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_ENABLE          0x00000000U             /*!< Analog filter is enabled. 
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ANALOGFILTER_DISABLE         I2C_CR1_ANFOFF          /*!< Analog filter is disabled.
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRESSING_MODE Master Addressing Mode
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_7BIT         0x00000000U              /*!< Master operates in 7-bit 
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ADDRESSING_MODE_10BIT        I2C_CR2_ADD10            /*!< Master operates in 10-bit
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS1 Own Address 1 Length
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_7BIT             0x00000000U             /*!< Own address 1 is a 7-bit a
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS1_10BIT            I2C_OAR1_OA1MODE        /*!< Own address 1 is a 10-bit 
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_OWNADDRESS2 Own Address 2 Masks
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_NOMASK           I2C_OAR2_OA2NOMASK      /*!< Own Address2 No mask.     
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK01           I2C_OAR2_OA2MASK01      /*!< Only Address2 bits[7:2] ar
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK02           I2C_OAR2_OA2MASK02      /*!< Only Address2 bits[7:3] ar
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK03           I2C_OAR2_OA2MASK03      /*!< Only Address2 bits[7:4] ar
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK04           I2C_OAR2_OA2MASK04      /*!< Only Address2 bits[7:5] ar
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK05           I2C_OAR2_OA2MASK05      /*!< Only Address2 bits[7:6] ar
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK06           I2C_OAR2_OA2MASK06      /*!< Only Address2 bits[7] are 
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_OWNADDRESS2_MASK07           I2C_OAR2_OA2MASK07      /*!< No comparison is done.
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                          All Address2 are acknowled
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_I2C_ACKNOWLEDGE Acknowledge Generation
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 60


 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ACK                          0x00000000U              /*!< ACK is sent after current
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_NACK                         I2C_CR2_NACK             /*!< NACK is sent after curren
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_ADDRSLAVE Slave Address Length
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_7BIT               0x00000000U              /*!< Slave Address in 7-bit. *
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ADDRSLAVE_10BIT              I2C_CR2_ADD10            /*!< Slave Address in 10-bit.*
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_REQUEST Transfer Request Direction
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_REQUEST_WRITE                0x00000000U              /*!< Master request a write tr
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_REQUEST_READ                 I2C_CR2_RD_WRN           /*!< Master request a read tra
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_MODE Transfer End Mode
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_RELOAD                  I2C_CR2_RELOAD           /*!< Enable I2C Reload mode.  
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_AUTOEND                 I2C_CR2_AUTOEND          /*!< Enable I2C Automatic end 
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with no HW PEC comparison
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SOFTEND                 0x00000000U              /*!< Enable I2C Software end m
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with no HW PEC comparison
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_RELOAD            LL_I2C_MODE_RELOAD       /*!< Enable SMBUS Automatic en
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC    LL_I2C_MODE_AUTOEND      /*!< Enable SMBUS Automatic en
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC    LL_I2C_MODE_SOFTEND      /*!< Enable SMBUS Software end
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           with HW PEC comparison.  
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_AUTOEND | I2C_CR2_PECBYTE)
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Enable SMBUS Automatic end mode with HW PEC comparison.   */
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC  (uint32_t)(LL_I2C_MODE_SOFTEND | I2C_CR2_PECBYTE)
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Enable SMBUS Software end mode with HW PEC comparison.    */
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_GENERATE Start And Stop Generation
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_NOSTARTSTOP         0x00000000U
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Don't Generate Stop and Start condition. */
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_STOP                (uint32_t)(0x80000000U | I2C_CR2_STOP)
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Stop condition (Size should be set to 0).      */
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_START_READ          (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Start for read request. */
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_START_WRITE         (uint32_t)(0x80000000U | I2C_CR2_START)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 61


 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Start for write request. */
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_READ   (uint32_t)(0x80000000U | I2C_CR2_START | I2C_CR2_RD_WRN
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Restart for read request, slave 7Bit address.  */
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_7BIT_WRITE  (uint32_t)(0x80000000U | I2C_CR2_START)
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Restart for write request, slave 7Bit address. */
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_READ  (uint32_t)(0x80000000U | I2C_CR2_START | \
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                        I2C_CR2_RD_WRN | I2C_CR2_HEAD10R)
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Restart for read request, slave 10Bit address. */
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_GENERATE_RESTART_10BIT_WRITE (uint32_t)(0x80000000U | I2C_CR2_START)
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /*!< Generate Restart for write request, slave 10Bit address.*/
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DIRECTION Read Write Direction
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_DIRECTION_WRITE              0x00000000U              /*!< Write transfer request by
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           slave enters receiver mod
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_DIRECTION_READ               I2C_ISR_DIR              /*!< Read transfer request by 
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           slave enters transmitter 
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_DMA_REG_DATA DMA Register Data
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_TRANSMIT        0x00000000U              /*!< Get address of data regis
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           transmission */
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_DMA_REG_DATA_RECEIVE         0x00000001U              /*!< Get address of data regis
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           reception */
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUTA_MODE SMBus TimeoutA Mode SCL SDA Timeout
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW      0x00000000U          /*!< TimeoutA is used to detec
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           SCL low level timeout.   
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH I2C_TIMEOUTR_TIDLE   /*!< TimeoutA is used to detec
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                           both SCL and SDA high lev
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EC_SMBUS_TIMEOUT_SELECTION SMBus Timeout Selection
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTA               I2C_TIMEOUTR_TIMOUTEN                 /*!< TimeoutA ena
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_TIMEOUTB               I2C_TIMEOUTR_TEXTEN                   /*!< TimeoutB (ex
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                                                        enable bit  
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_SMBUS_ALL_TIMEOUT            (uint32_t)(I2C_TIMEOUTR_TIMOUTEN | \
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                        I2C_TIMEOUTR_TEXTEN)       /*!< TimeoutA and
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** (extended clock) enable bits */
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 62


 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Exported macro ------------------------------------------------------------*/
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Macros I2C Exported Macros
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EM_WRITE_READ Common Write and read registers Macros
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Write a value in I2C register
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __REG__ Register to be written
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __VALUE__ Value to be written in the register
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Read a value in I2C register
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __INSTANCE__ I2C Instance
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __REG__ Register to be read
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Register value
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define LL_I2C_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EM_CONVERT_TIMINGS Convert SDA SCL timings
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __PRESCALER__ This parameter must be a value between  Min_Data=0 and Max_Data=0xF.
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __SETUP_TIME__ This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                            (tscldel = (SCLDEL+1)xtpresc)
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __HOLD_TIME__  This parameter must be a value between Min_Data=0 and Max_Data=0xF.
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                            (tsdadel = SDADELxtpresc)
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __SCLH_PERIOD__ This parameter must be a value between Min_Data=0 and Max_Data=0xFF.
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                             (tsclh = (SCLH+1)xtpresc)
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  __SCLL_PERIOD__ This parameter must be a value between  Min_Data=0 and Max_Data=0xFF.
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                             (tscll = (SCLL+1)xtpresc)
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFFFFFFF
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** #define __LL_I2C_CONVERT_TIMINGS(__PRESCALER__, __SETUP_TIME__, __HOLD_TIME__, __SCLH_PERIOD__, __S
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   ((((uint32_t)(__PRESCALER__)    << I2C_TIMINGR_PRESC_Pos)  & I2C_TIMINGR_PRESC)   | \
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****    (((uint32_t)(__SETUP_TIME__)   << I2C_TIMINGR_SCLDEL_Pos) & I2C_TIMINGR_SCLDEL)  | \
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****    (((uint32_t)(__HOLD_TIME__)    << I2C_TIMINGR_SDADEL_Pos) & I2C_TIMINGR_SDADEL)  | \
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****    (((uint32_t)(__SCLH_PERIOD__)  << I2C_TIMINGR_SCLH_Pos)   & I2C_TIMINGR_SCLH)    | \
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 63


 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****    (((uint32_t)(__SCLL_PERIOD__)  << I2C_TIMINGR_SCLL_Pos)   & I2C_TIMINGR_SCLL))
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /* Exported functions --------------------------------------------------------*/
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_Exported_Functions I2C Exported Functions
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Configuration Configuration
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable I2C peripheral (PE = 1).
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Enable
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Enable(I2C_TypeDef *I2Cx)
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PE);
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable I2C peripheral (PE = 0).
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   When PE = 0, the I2C SCL and SDA lines are released.
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Internal state machines and status bits are put back to their reset value.
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         When cleared, PE must be kept low for at least 3 APB clock cycles.
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_Disable
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_Disable(I2C_TypeDef *I2Cx)
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PE);
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if the I2C peripheral is enabled or disabled.
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PE            LL_I2C_IsEnabled
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabled(I2C_TypeDef *I2Cx)
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PE) == (I2C_CR1_PE)) ? 1UL : 0UL);
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure Noise Filters (Analog and Digital).
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 64


 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         The filters can only be programmed when the I2C is disabled (PE = 0).
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_ConfigFilters\n
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         CR1          DNF           LL_I2C_ConfigFilters
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  AnalogFilter This parameter can be one of the following values:
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_ENABLE
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ANALOGFILTER_DISABLE
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigFilters(I2C_TypeDef *I2Cx, uint32_t AnalogFilter, uint32_t Digita
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_ANFOFF | I2C_CR1_DNF, AnalogFilter | (DigitalFilter << I2C_CR1_DNF_
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure Digital Noise Filter.
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   If the analog filter is also enabled, the digital filter is added to analog filter.
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         This filter can only be programmed when the I2C is disabled (PE = 0).
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_SetDigitalFilter
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  DigitalFilter This parameter must be a value between Min_Data=0x00 (Digital filter disa
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                           and Max_Data=0x0F (Digital filter enabled and filtering capability up to 
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         This parameter is used to configure the digital noise filter on SDA and SCL input.
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         The digital filter will filter spikes with a length of up to DNF[3:0]*ti2cclk.
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetDigitalFilter(I2C_TypeDef *I2Cx, uint32_t DigitalFilter)
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_DNF, DigitalFilter << I2C_CR1_DNF_Pos);
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the current Digital Noise Filter configuration.
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          DNF           LL_I2C_GetDigitalFilter
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDigitalFilter(I2C_TypeDef *I2Cx)
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_DNF) >> I2C_CR1_DNF_Pos);
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Analog Noise Filter.
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_EnableAnalogFilter
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAnalogFilter(I2C_TypeDef *I2Cx)
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 65


 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Analog Noise Filter.
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This filter can only be programmed when the I2C is disabled (PE = 0).
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_DisableAnalogFilter
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableAnalogFilter(I2C_TypeDef *I2Cx)
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ANFOFF);
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Analog Noise Filter is enabled or disabled.
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ANFOFF        LL_I2C_IsEnabledAnalogFilter
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledAnalogFilter(I2C_TypeDef *I2Cx)
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ANFOFF) != (I2C_CR1_ANFOFF)) ? 1UL : 0UL);
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable DMA transmission requests.
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_EnableDMAReq_TX
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_TX(I2C_TypeDef *I2Cx)
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable DMA transmission requests.
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_DisableDMAReq_TX
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_TX(I2C_TypeDef *I2Cx)
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN);
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if DMA transmission requests are enabled or disabled.
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXDMAEN       LL_I2C_IsEnabledDMAReq_TX
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_TX(I2C_TypeDef *I2Cx)
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXDMAEN) == (I2C_CR1_TXDMAEN)) ? 1UL : 0UL);
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 66


 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable DMA reception requests.
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_EnableDMAReq_RX
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableDMAReq_RX(I2C_TypeDef *I2Cx)
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable DMA reception requests.
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_DisableDMAReq_RX
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableDMAReq_RX(I2C_TypeDef *I2Cx)
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN);
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if DMA reception requests are enabled or disabled.
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXDMAEN       LL_I2C_IsEnabledDMAReq_RX
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledDMAReq_RX(I2C_TypeDef *I2Cx)
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXDMAEN) == (I2C_CR1_RXDMAEN)) ? 1UL : 0UL);
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the data register address used for DMA transfer
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TXDR         TXDATA        LL_I2C_DMA_GetRegAddr\n
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         RXDR         RXDATA        LL_I2C_DMA_GetRegAddr
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  Direction This parameter can be one of the following values:
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_TRANSMIT
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_DMA_REG_DATA_RECEIVE
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Address of data register
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_DMA_GetRegAddr(I2C_TypeDef *I2Cx, uint32_t Direction)
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   uint32_t data_reg_addr;
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   if (Direction == LL_I2C_DMA_REG_DATA_TRANSMIT)
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   {
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****     /* return address of TXDR register */
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->TXDR);
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   }
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   else
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   {
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****     /* return address of RXDR register */
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****     data_reg_addr = (uint32_t) &(I2Cx->RXDR);
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 67


 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return data_reg_addr;
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Clock stretching.
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_EnableClockStretching
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableClockStretching(I2C_TypeDef *I2Cx)
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Clock stretching.
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_DisableClockStretching
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableClockStretching(I2C_TypeDef *I2Cx)
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH);
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Clock stretching is enabled or disabled.
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NOSTRETCH     LL_I2C_IsEnabledClockStretching
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledClockStretching(I2C_TypeDef *I2Cx)
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NOSTRETCH) != (I2C_CR1_NOSTRETCH)) ? 1UL : 0UL);
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable hardware byte control in slave mode.
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_EnableSlaveByteControl
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSlaveByteControl(I2C_TypeDef *I2Cx)
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_SBC);
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable hardware byte control in slave mode.
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_DisableSlaveByteControl
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSlaveByteControl(I2C_TypeDef *I2Cx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 68


 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_SBC);
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if hardware byte control in slave mode is enabled or disabled.
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SBC           LL_I2C_IsEnabledSlaveByteControl
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSlaveByteControl(I2C_TypeDef *I2Cx)
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_SBC) == (I2C_CR1_SBC)) ? 1UL : 0UL);
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Wakeup from STOP.
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when Digital Filter is disabled.
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_EnableWakeUpFromStop
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableWakeUpFromStop(I2C_TypeDef *I2Cx)
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Wakeup from STOP.
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_DisableWakeUpFromStop
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableWakeUpFromStop(I2C_TypeDef *I2Cx)
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_WUPEN);
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Wakeup from STOP is enabled or disabled.
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_I2C_WAKEUP_FROMSTOP_INSTANCE(I2Cx) can be used to check whether or not
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         WakeUpFromStop feature is supported by the I2Cx Instance.
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          WUPEN         LL_I2C_IsEnabledWakeUpFromStop
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledWakeUpFromStop(I2C_TypeDef *I2Cx)
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_WUPEN) == (I2C_CR1_WUPEN)) ? 1UL : 0UL);
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable General Call.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 69


 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   When enabled the Address 0x00 is ACKed.
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_EnableGeneralCall
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableGeneralCall(I2C_TypeDef *I2Cx)
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable General Call.
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   When disabled the Address 0x00 is NACKed.
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_DisableGeneralCall
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableGeneralCall(I2C_TypeDef *I2Cx)
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_GCEN);
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if General Call is enabled or disabled.
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          GCEN          LL_I2C_IsEnabledGeneralCall
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledGeneralCall(I2C_TypeDef *I2Cx)
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_GCEN) == (I2C_CR1_GCEN)) ? 1UL : 0UL);
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the Master to operate in 7-bit or 10-bit addressing mode.
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Changing this bit is not allowed, when the START bit is set.
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_SetMasterAddressingMode
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  AddressingMode This parameter can be one of the following values:
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMasterAddressingMode(I2C_TypeDef *I2Cx, uint32_t AddressingMode)
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR2, I2C_CR2_ADD10, AddressingMode);
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the Master addressing mode.
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          ADD10         LL_I2C_GetMasterAddressingMode
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_7BIT
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_ADDRESSING_MODE_10BIT
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMasterAddressingMode(I2C_TypeDef *I2Cx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 70


 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR2, I2C_CR2_ADD10));
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Set the Own Address1.
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR1         OA1           LL_I2C_SetOwnAddress1\n
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         OAR1         OA1MODE       LL_I2C_SetOwnAddress1
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  OwnAddress1 This parameter must be a value between Min_Data=0 and Max_Data=0x3FF.
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  OwnAddrSize This parameter can be one of the following values:
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_7BIT
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS1_10BIT
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress1(I2C_TypeDef *I2Cx, uint32_t OwnAddress1, uint32_t OwnAdd
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR1, I2C_OAR1_OA1 | I2C_OAR1_OA1MODE, OwnAddress1 | OwnAddrSize);
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address1 match address.
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_EnableOwnAddress1
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress1(I2C_TypeDef *I2Cx)
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable acknowledge on Own Address1 match address.
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_DisableOwnAddress1
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress1(I2C_TypeDef *I2Cx)
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN);
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR1         OA1EN         LL_I2C_IsEnabledOwnAddress1
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress1(I2C_TypeDef *I2Cx)
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR1, I2C_OAR1_OA1EN) == (I2C_OAR1_OA1EN)) ? 1UL : 0UL);
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Set the 7bits Own Address2.
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This action has no effect if own address2 is enabled.
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR2         OA2           LL_I2C_SetOwnAddress2\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 71


 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         OAR2         OA2MSK        LL_I2C_SetOwnAddress2
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  OwnAddress2 Value between Min_Data=0 and Max_Data=0x7F.
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  OwnAddrMask This parameter can be one of the following values:
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_NOMASK
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK01
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK02
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK03
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK04
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK05
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK06
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_OWNADDRESS2_MASK07
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetOwnAddress2(I2C_TypeDef *I2Cx, uint32_t OwnAddress2, uint32_t OwnAdd
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->OAR2, I2C_OAR2_OA2 | I2C_OAR2_OA2MSK, OwnAddress2 | OwnAddrMask);
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable acknowledge on Own Address2 match address.
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_EnableOwnAddress2
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableOwnAddress2(I2C_TypeDef *I2Cx)
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable  acknowledge on Own Address2 match address.
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_DisableOwnAddress2
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableOwnAddress2(I2C_TypeDef *I2Cx)
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN);
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Own Address1 acknowledge is enabled or disabled.
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll OAR2         OA2EN         LL_I2C_IsEnabledOwnAddress2
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledOwnAddress2(I2C_TypeDef *I2Cx)
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->OAR2, I2C_OAR2_OA2EN) == (I2C_OAR2_OA2EN)) ? 1UL : 0UL);
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SDA setup, hold time and the SCL high, low period.
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when the I2C is disabled (PE = 0).
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      TIMINGR       LL_I2C_SetTiming
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 72


 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  Timing This parameter must be a value between Min_Data=0 and Max_Data=0xFFFFFFFF.
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This parameter is computed with the STM32CubeMX Tool.
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetTiming(I2C_TypeDef *I2Cx, uint32_t Timing)
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMINGR, Timing);
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the Timing Prescaler setting.
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      PRESC         LL_I2C_GetTimingPrescaler
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetTimingPrescaler(I2C_TypeDef *I2Cx)
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_PRESC) >> I2C_TIMINGR_PRESC_Pos);
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SCL low period setting.
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLL          LL_I2C_GetClockLowPeriod
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockLowPeriod(I2C_TypeDef *I2Cx)
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLL) >> I2C_TIMINGR_SCLL_Pos);
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SCL high period setting.
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLH          LL_I2C_GetClockHighPeriod
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetClockHighPeriod(I2C_TypeDef *I2Cx)
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLH) >> I2C_TIMINGR_SCLH_Pos);
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SDA hold time.
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      SDADEL        LL_I2C_GetDataHoldTime
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataHoldTime(I2C_TypeDef *I2Cx)
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SDADEL) >> I2C_TIMINGR_SDADEL_Pos);
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SDA setup time.
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMINGR      SCLDEL        LL_I2C_GetDataSetupTime
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 73


 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0x0 and Max_Data=0xF
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetDataSetupTime(I2C_TypeDef *I2Cx)
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMINGR, I2C_TIMINGR_SCLDEL) >> I2C_TIMINGR_SCLDEL_Pos);
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure peripheral mode.
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_SetMode\n
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_SetMode
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  PeripheralMode This parameter can be one of the following values:
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetMode(I2C_TypeDef *I2Cx, uint32_t PeripheralMode)
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN, PeripheralMode);
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get peripheral mode.
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          SMBHEN        LL_I2C_GetMode\n
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         CR1          SMBDEN        LL_I2C_GetMode
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_I2C
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_HOST
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_MODE_SMBUS_DEVICE_ARP
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetMode(I2C_TypeDef *I2Cx)
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->CR1, I2C_CR1_SMBHEN | I2C_CR1_SMBDEN));
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable SMBus alert (Host or Device mode)
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   SMBus Device mode:
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         - SMBus Alert pin is drived low and
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is enabled.
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Host mode:
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         - SMBus Alert pin management is supported.
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_EnableSMBusAlert
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 74


1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusAlert(I2C_TypeDef *I2Cx)
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable SMBus alert (Host or Device mode)
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   SMBus Device mode:
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         - SMBus Alert pin is not drived (can be used as a standard GPIO) and
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *           Alert Response Address Header acknowledge is disabled.
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Host mode:
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         - SMBus Alert pin management is not supported.
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_DisableSMBusAlert
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusAlert(I2C_TypeDef *I2Cx)
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ALERTEN);
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if SMBus alert (Host or Device mode) is enabled or disabled.
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ALERTEN       LL_I2C_IsEnabledSMBusAlert
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusAlert(I2C_TypeDef *I2Cx)
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ALERTEN) == (I2C_CR1_ALERTEN)) ? 1UL : 0UL);
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable SMBus Packet Error Calculation (PEC).
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_EnableSMBusPEC
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusPEC(I2C_TypeDef *I2Cx)
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable SMBus Packet Error Calculation (PEC).
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_DisableSMBusPEC
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 75


1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusPEC(I2C_TypeDef *I2Cx)
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_PECEN);
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if SMBus Packet Error Calculation (PEC) is enabled or disabled.
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          PECEN         LL_I2C_IsEnabledSMBusPEC
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusPEC(I2C_TypeDef *I2Cx)
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_PECEN) == (I2C_CR1_PECEN)) ? 1UL : 0UL);
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SMBus Clock Timeout.
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This configuration can only be programmed when associated Timeout is disabled (TimeoutA
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_ConfigSMBusTimeout\n
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TIDLE         LL_I2C_ConfigSMBusTimeout\n
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TIMEOUTB      LL_I2C_ConfigSMBusTimeout
1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutB
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ConfigSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t TimeoutA, uint32_t Timeo
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****                                                uint32_t TimeoutB)
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   MODIFY_REG(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA | I2C_TIMEOUTR_TIDLE | I2C_TIMEOUTR_TIMEOUTB,
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****              TimeoutA | TimeoutAMode | (TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos));
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SMBus Clock TimeoutA (SCL low timeout or SCL and SDA high timeout depends
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutA is disabled.
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_SetSMBusTimeoutA
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutA This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutA(I2C_TypeDef *I2Cx, uint32_t TimeoutA)
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutA);
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 76


1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA setting.
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTA      LL_I2C_GetSMBusTimeoutA
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutA(I2C_TypeDef *I2Cx)
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTA));
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Set the SMBus Clock TimeoutA mode.
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can only be programmed when TimeoutA is disabled.
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_SetSMBusTimeoutAMode
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutAMode This parameter can be one of the following values:
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutAMode(I2C_TypeDef *I2Cx, uint32_t TimeoutAMode)
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutAMode);
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SMBus Clock TimeoutA mode.
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIDLE         LL_I2C_GetSMBusTimeoutAMode
1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Returned value can be one of the following values:
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutAMode(I2C_TypeDef *I2Cx)
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIDLE));
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Configure the SMBus Extended Cumulative Clock TimeoutB (Master or Slave mode).
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   These bits can only be programmed when TimeoutB is disabled.
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_SetSMBusTimeoutB
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  TimeoutB This parameter must be a value between  Min_Data=0 and Max_Data=0xFFF.
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_SetSMBusTimeoutB(I2C_TypeDef *I2Cx, uint32_t TimeoutB)
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->TIMEOUTR, TimeoutB << I2C_TIMEOUTR_TIMEOUTB_Pos);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 77


1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Get the SMBus Extended Cumulative Clock TimeoutB setting.
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMEOUTB      LL_I2C_GetSMBusTimeoutB
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval Value between Min_Data=0 and Max_Data=0xFFF
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_GetSMBusTimeoutB(I2C_TypeDef *I2Cx)
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return (uint32_t)(READ_BIT(I2Cx->TIMEOUTR, I2C_TIMEOUTR_TIMEOUTB) >> I2C_TIMEOUTR_TIMEOUTB_Pos);
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable the SMBus Clock Timeout.
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_EnableSMBusTimeout\n
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_EnableSMBusTimeout
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable the SMBus Clock Timeout.
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_DisableSMBusTimeout\n
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_DisableSMBusTimeout
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->TIMEOUTR, ClockTimeout);
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if the SMBus Clock Timeout is enabled or disabled.
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll TIMEOUTR     TIMOUTEN      LL_I2C_IsEnabledSMBusTimeout\n
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         TIMEOUTR     TEXTEN        LL_I2C_IsEnabledSMBusTimeout
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 78


1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  ClockTimeout This parameter can be one of the following values:
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTA
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_TIMEOUTB
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         @arg @ref LL_I2C_SMBUS_ALL_TIMEOUT
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledSMBusTimeout(I2C_TypeDef *I2Cx, uint32_t ClockTimeout)
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->TIMEOUTR, (I2C_TIMEOUTR_TIMOUTEN | I2C_TIMEOUTR_TEXTEN)) == \
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****            (ClockTimeout)) ? 1UL : 0UL);
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EF_IT_Management IT_Management
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable TXIS interrupt.
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_EnableIT_TX
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TX(I2C_TypeDef *I2Cx)
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable TXIS interrupt.
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_DisableIT_TX
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TX(I2C_TypeDef *I2Cx)
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TXIE);
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if the TXIS Interrupt is enabled or disabled.
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TXIE          LL_I2C_IsEnabledIT_TX
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TX(I2C_TypeDef *I2Cx)
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TXIE) == (I2C_CR1_TXIE)) ? 1UL : 0UL);
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable RXNE interrupt.
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_EnableIT_RX
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 79


1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_RX(I2C_TypeDef *I2Cx)
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable RXNE interrupt.
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_DisableIT_RX
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_RX(I2C_TypeDef *I2Cx)
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_RXIE);
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if the RXNE Interrupt is enabled or disabled.
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          RXIE          LL_I2C_IsEnabledIT_RX
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_RX(I2C_TypeDef *I2Cx)
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_RXIE) == (I2C_CR1_RXIE)) ? 1UL : 0UL);
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Address match interrupt (slave mode only).
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_EnableIT_ADDR
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ADDR(I2C_TypeDef *I2Cx)
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Address match interrupt (slave mode only).
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_DisableIT_ADDR
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ADDR(I2C_TypeDef *I2Cx)
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ADDRIE);
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Address match interrupt is enabled or disabled.
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ADDRIE        LL_I2C_IsEnabledIT_ADDR
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 80


1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ADDR(I2C_TypeDef *I2Cx)
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ADDRIE) == (I2C_CR1_ADDRIE)) ? 1UL : 0UL);
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Not acknowledge received interrupt.
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_EnableIT_NACK
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_NACK(I2C_TypeDef *I2Cx)
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Not acknowledge received interrupt.
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_DisableIT_NACK
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_NACK(I2C_TypeDef *I2Cx)
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_NACKIE);
1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Not acknowledge received interrupt is enabled or disabled.
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          NACKIE        LL_I2C_IsEnabledIT_NACK
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_NACK(I2C_TypeDef *I2Cx)
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_NACKIE) == (I2C_CR1_NACKIE)) ? 1UL : 0UL);
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable STOP detection interrupt.
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_EnableIT_STOP
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_STOP(I2C_TypeDef *I2Cx)
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable STOP detection interrupt.
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_DisableIT_STOP
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_STOP(I2C_TypeDef *I2Cx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 81


1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_STOPIE);
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if STOP detection interrupt is enabled or disabled.
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          STOPIE        LL_I2C_IsEnabledIT_STOP
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_STOP(I2C_TypeDef *I2Cx)
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_STOPIE) == (I2C_CR1_STOPIE)) ? 1UL : 0UL);
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Transfer Complete interrupt.
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Transfer Complete (TC)
1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_EnableIT_TC
1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_TC(I2C_TypeDef *I2Cx)
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Transfer Complete interrupt.
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Any of these events will generate interrupt :
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Transfer Complete (TC)
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Transfer Complete Reload (TCR)
1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_DisableIT_TC
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_TC(I2C_TypeDef *I2Cx)
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_TCIE);
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Transfer Complete interrupt is enabled or disabled.
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          TCIE          LL_I2C_IsEnabledIT_TC
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_TC(I2C_TypeDef *I2Cx)
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_TCIE) == (I2C_CR1_TCIE)) ? 1UL : 0UL);
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable Error interrupts.
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 82


1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Bus Error detection (BERR)
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_EnableIT_ERR
1497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableIT_ERR(I2C_TypeDef *I2Cx)
1501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Disable Error interrupts.
1507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Any of these errors will generate interrupt :
1510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Arbitration Loss (ARLO)
1511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Bus Error detection (BERR)
1512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         Overrun/Underrun (OVR)
1513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Timeout detection (TIMEOUT)
1514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus PEC error detection (PECERR)
1515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus Alert pin event detection (ALERT)
1516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_DisableIT_ERR
1517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_DisableIT_ERR(I2C_TypeDef *I2Cx)
1521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   CLEAR_BIT(I2Cx->CR1, I2C_CR1_ERRIE);
1523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Check if Error interrupts are enabled or disabled.
1527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR1          ERRIE         LL_I2C_IsEnabledIT_ERR
1528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsEnabledIT_ERR(I2C_TypeDef *I2Cx)
1532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->CR1, I2C_CR1_ERRIE) == (I2C_CR1_ERRIE)) ? 1UL : 0UL);
1534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
1538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EF_FLAG_management FLAG_management
1541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
1542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 83


1545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Transmit data register empty flag.
1546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_IsActiveFlag_TXE
1549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXE(I2C_TypeDef *I2Cx)
1553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXE) == (I2C_ISR_TXE)) ? 1UL : 0UL);
1555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Transmit interrupt flag.
1559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: When next data is written in Transmit data register.
1560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When Transmit data register is empty.
1561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TXIS          LL_I2C_IsActiveFlag_TXIS
1562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TXIS(I2C_TypeDef *I2Cx)
1566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TXIS) == (I2C_ISR_TXIS)) ? 1UL : 0UL);
1568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Receive data register not empty flag.
1572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: When Receive data register is read.
1573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When the received data is copied in Receive data register.
1574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          RXNE          LL_I2C_IsActiveFlag_RXNE
1575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_RXNE(I2C_TypeDef *I2Cx)
1579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_RXNE) == (I2C_ISR_RXNE)) ? 1UL : 0UL);
1581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Address matched flag (slave mode).
1585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When the received slave address matched with one of the enabled slave address.
1587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          ADDR          LL_I2C_IsActiveFlag_ADDR
1588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ADDR(I2C_TypeDef *I2Cx)
1592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ADDR) == (I2C_ISR_ADDR)) ? 1UL : 0UL);
1594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Not Acknowledge received flag.
1598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a NACK is received after a byte transmission.
1600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          NACKF         LL_I2C_IsActiveFlag_NACK
1601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 84


1602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_NACK(I2C_TypeDef *I2Cx)
1605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_NACKF) == (I2C_ISR_NACKF)) ? 1UL : 0UL);
1607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Stop detection flag.
1611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a Stop condition is detected.
1613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          STOPF         LL_I2C_IsActiveFlag_STOP
1614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_STOP(I2C_TypeDef *I2Cx)
1618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_STOPF) == (I2C_ISR_STOPF)) ? 1UL : 0UL);
1620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When RELOAD=0, AUTOEND=0 and NBYTES date have been transferred.
1626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TC            LL_I2C_IsActiveFlag_TC
1627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TC(I2C_TypeDef *I2Cx)
1631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TC) == (I2C_ISR_TC)) ? 1UL : 0UL);
1633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Transfer complete flag (master mode).
1637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When RELOAD=1 and NBYTES date have been transferred.
1639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TCR           LL_I2C_IsActiveFlag_TCR
1640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_TCR(I2C_TypeDef *I2Cx)
1644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TCR) == (I2C_ISR_TCR)) ? 1UL : 0UL);
1646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Bus error flag.
1650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a misplaced Start or Stop condition is detected.
1652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          BERR          LL_I2C_IsActiveFlag_BERR
1653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BERR(I2C_TypeDef *I2Cx)
1657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BERR) == (I2C_ISR_BERR)) ? 1UL : 0UL);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 85


1659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Arbitration lost flag.
1663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When arbitration lost.
1665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          ARLO          LL_I2C_IsActiveFlag_ARLO
1666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_ARLO(I2C_TypeDef *I2Cx)
1670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ARLO) == (I2C_ISR_ARLO)) ? 1UL : 0UL);
1672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Overrun/Underrun flag (slave mode).
1676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When an overrun/underrun error occurs (Clock Stretching Disabled).
1678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          OVR           LL_I2C_IsActiveFlag_OVR
1679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_OVR(I2C_TypeDef *I2Cx)
1683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_OVR) == (I2C_ISR_OVR)) ? 1UL : 0UL);
1685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of SMBus PEC error flag in reception.
1689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When the received PEC does not match with the PEC register content.
1693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          PECERR        LL_I2C_IsActiveSMBusFlag_PECERR
1694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_PECERR) == (I2C_ISR_PECERR)) ? 1UL : 0UL);
1700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of SMBus Timeout detection flag.
1704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a timeout or extended clock timeout occurs.
1708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TIMEOUT       LL_I2C_IsActiveSMBusFlag_TIMEOUT
1709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_TIMEOUT) == (I2C_ISR_TIMEOUT)) ? 1UL : 0UL);
1715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 86


1716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of SMBus alert flag.
1719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When SMBus host configuration, SMBus alert enabled and
1723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *              a falling edge event occurs on SMBA pin.
1724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          ALERT         LL_I2C_IsActiveSMBusFlag_ALERT
1725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_ALERT) == (I2C_ISR_ALERT)) ? 1UL : 0UL);
1731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Indicate the status of Bus Busy flag.
1735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   RESET: Clear default value.
1736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SET: When a Start condition is detected.
1737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          BUSY          LL_I2C_IsActiveFlag_BUSY
1738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval State of bit (1 or 0).
1740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE uint32_t LL_I2C_IsActiveFlag_BUSY(I2C_TypeDef *I2Cx)
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   return ((READ_BIT(I2Cx->ISR, I2C_ISR_BUSY) == (I2C_ISR_BUSY)) ? 1UL : 0UL);
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Address Matched flag.
1748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          ADDRCF        LL_I2C_ClearFlag_ADDR
1749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ADDR(I2C_TypeDef *I2Cx)
1753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ADDRCF);
1755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Not Acknowledge flag.
1759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          NACKCF        LL_I2C_ClearFlag_NACK
1760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_NACK(I2C_TypeDef *I2Cx)
1764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_NACKCF);
1766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Stop detection flag.
1770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          STOPCF        LL_I2C_ClearFlag_STOP
1771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 87


1773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_STOP(I2C_TypeDef *I2Cx)
1775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_STOPCF);
1777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Transmit data register empty flag (TXE).
1781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   This bit can be clear by software in order to flush the transmit data register (TXDR).
1782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ISR          TXE           LL_I2C_ClearFlag_TXE
1783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_TXE(I2C_TypeDef *I2Cx)
1787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   WRITE_REG(I2Cx->ISR, I2C_ISR_TXE);
1789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Bus error flag.
1793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          BERRCF        LL_I2C_ClearFlag_BERR
1794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_BERR(I2C_TypeDef *I2Cx)
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_BERRCF);
1800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Arbitration lost flag.
1804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          ARLOCF        LL_I2C_ClearFlag_ARLO
1805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_ARLO(I2C_TypeDef *I2Cx)
1809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ARLOCF);
1811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear Overrun/Underrun flag.
1815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          OVRCF         LL_I2C_ClearFlag_OVR
1816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearFlag_OVR(I2C_TypeDef *I2Cx)
1820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_OVRCF);
1822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear SMBus PEC error flag.
1826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          PECCF         LL_I2C_ClearSMBusFlag_PECERR
1829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 88


1830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_PECERR(I2C_TypeDef *I2Cx)
1833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_PECCF);
1835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear SMBus Timeout detection flag.
1839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          TIMOUTCF      LL_I2C_ClearSMBusFlag_TIMEOUT
1842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_TIMEOUT(I2C_TypeDef *I2Cx)
1846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_TIMOUTCF);
1848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Clear SMBus Alert flag.
1852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   The macro IS_SMBUS_ALL_INSTANCE(I2Cx) can be used to check whether or not
1853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         SMBus feature is supported by the I2Cx Instance.
1854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll ICR          ALERTCF       LL_I2C_ClearSMBusFlag_ALERT
1855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_ClearSMBusFlag_ALERT(I2C_TypeDef *I2Cx)
1859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->ICR, I2C_ICR_ALERTCF);
1861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
1862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @}
1865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /** @defgroup I2C_LL_EF_Data_Management Data_Management
1868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @{
1869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** 
1871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** /**
1872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @brief  Enable automatic STOP condition generation (master mode).
1873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @note   Automatic end mode : a STOP condition is automatically sent when NBYTES data are transf
1874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   *         This bit has no effect in slave mode or when RELOAD bit is set.
1875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @rmtoll CR2          AUTOEND       LL_I2C_EnableAutoEndMode
1876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @param  I2Cx I2C Instance.
1877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   * @retval None
1878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   */
1879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** __STATIC_INLINE void LL_I2C_EnableAutoEndMode(I2C_TypeDef *I2Cx)
 438              		.loc 4 1879 22 view .LVU148
 439              	.LBB89:
1880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
1881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h ****   SET_BIT(I2Cx->CR2, I2C_CR2_AUTOEND);
 440              		.loc 4 1881 3 view .LVU149
 441 0158 164C     		ldr	r4, .L5+8
 442 015a 6368     		ldr	r3, [r4, #4]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 89


 443 015c 43F00073 		orr	r3, r3, #33554432
 444 0160 6360     		str	r3, [r4, #4]
 445              	.LVL24:
 446              		.loc 4 1881 3 is_stmt 0 view .LVU150
 447              	.LBE89:
 448              	.LBE88:
 140:Core/Src/i2c.c ****   LL_I2C_DisableOwnAddress2(I2C2);
 449              		.loc 1 140 3 is_stmt 1 view .LVU151
 450              	.LBB90:
 451              	.LBI90:
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 452              		.loc 4 897 22 view .LVU152
 453              	.LBB91:
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 454              		.loc 4 899 3 view .LVU153
 455 0162 E368     		ldr	r3, [r4, #12]
 456 0164 23F40043 		bic	r3, r3, #32768
 457 0168 E360     		str	r3, [r4, #12]
 458              	.LVL25:
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 459              		.loc 4 899 3 is_stmt 0 view .LVU154
 460              	.LBE91:
 461              	.LBE90:
 141:Core/Src/i2c.c ****   LL_I2C_DisableGeneralCall(I2C2);
 462              		.loc 1 141 3 is_stmt 1 view .LVU155
 463              	.LBB92:
 464              	.LBI92:
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 465              		.loc 4 764 22 view .LVU156
 466              	.LBB93:
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 467              		.loc 4 766 3 view .LVU157
 468 016a 2368     		ldr	r3, [r4]
 469 016c 23F40023 		bic	r3, r3, #524288
 470 0170 2360     		str	r3, [r4]
 471              	.LVL26:
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 472              		.loc 4 766 3 is_stmt 0 view .LVU158
 473              	.LBE93:
 474              	.LBE92:
 142:Core/Src/i2c.c ****   LL_I2C_EnableClockStretching(I2C2);
 475              		.loc 1 142 3 is_stmt 1 view .LVU159
 476              	.LBB94:
 477              	.LBI94:
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 478              		.loc 4 644 22 view .LVU160
 479              	.LBB95:
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 480              		.loc 4 646 3 view .LVU161
 481 0172 2368     		ldr	r3, [r4]
 482 0174 23F40033 		bic	r3, r3, #131072
 483 0178 2360     		str	r3, [r4]
 484              	.LVL27:
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 485              		.loc 4 646 3 is_stmt 0 view .LVU162
 486              	.LBE95:
 487              	.LBE94:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 90


 143:Core/Src/i2c.c ****   I2C_InitStruct.PeripheralMode = LL_I2C_MODE_I2C;
 488              		.loc 1 143 3 is_stmt 1 view .LVU163
 489              		.loc 1 143 33 is_stmt 0 view .LVU164
 490 017a 1795     		str	r5, [sp, #92]
 144:Core/Src/i2c.c ****   I2C_InitStruct.Timing = 0x20303E5D;
 491              		.loc 1 144 3 is_stmt 1 view .LVU165
 492              		.loc 1 144 25 is_stmt 0 view .LVU166
 493 017c 0E4B     		ldr	r3, .L5+12
 494 017e 1893     		str	r3, [sp, #96]
 145:Core/Src/i2c.c ****   I2C_InitStruct.AnalogFilter = LL_I2C_ANALOGFILTER_ENABLE;
 495              		.loc 1 145 3 is_stmt 1 view .LVU167
 496              		.loc 1 145 31 is_stmt 0 view .LVU168
 497 0180 1995     		str	r5, [sp, #100]
 146:Core/Src/i2c.c ****   I2C_InitStruct.DigitalFilter = 0;
 498              		.loc 1 146 3 is_stmt 1 view .LVU169
 499              		.loc 1 146 32 is_stmt 0 view .LVU170
 500 0182 1A95     		str	r5, [sp, #104]
 147:Core/Src/i2c.c ****   I2C_InitStruct.OwnAddress1 = 0;
 501              		.loc 1 147 3 is_stmt 1 view .LVU171
 502              		.loc 1 147 30 is_stmt 0 view .LVU172
 503 0184 1B95     		str	r5, [sp, #108]
 148:Core/Src/i2c.c ****   I2C_InitStruct.TypeAcknowledge = LL_I2C_ACK;
 504              		.loc 1 148 3 is_stmt 1 view .LVU173
 505              		.loc 1 148 34 is_stmt 0 view .LVU174
 506 0186 1C95     		str	r5, [sp, #112]
 149:Core/Src/i2c.c ****   I2C_InitStruct.OwnAddrSize = LL_I2C_OWNADDRESS1_7BIT;
 507              		.loc 1 149 3 is_stmt 1 view .LVU175
 508              		.loc 1 149 30 is_stmt 0 view .LVU176
 509 0188 1D95     		str	r5, [sp, #116]
 150:Core/Src/i2c.c ****   LL_I2C_Init(I2C2, &I2C_InitStruct);
 510              		.loc 1 150 3 is_stmt 1 view .LVU177
 511 018a 17A9     		add	r1, sp, #92
 512 018c 2046     		mov	r0, r4
 513 018e FFF7FEFF 		bl	LL_I2C_Init
 514              	.LVL28:
 151:Core/Src/i2c.c ****   LL_I2C_SetOwnAddress2(I2C2, 0, LL_I2C_OWNADDRESS2_NOMASK);
 515              		.loc 1 151 3 view .LVU178
 516              	.LBB96:
 517              	.LBI96:
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** {
 518              		.loc 4 875 22 view .LVU179
 519              	.LBB97:
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 520              		.loc 4 877 3 view .LVU180
 521 0192 E368     		ldr	r3, [r4, #12]
 522 0194 23F4FF63 		bic	r3, r3, #2040
 523 0198 23F00603 		bic	r3, r3, #6
 524 019c E360     		str	r3, [r4, #12]
 525              	.LVL29:
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_i2c.h **** }
 526              		.loc 4 877 3 is_stmt 0 view .LVU181
 527              	.LBE97:
 528              	.LBE96:
 152:Core/Src/i2c.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 153:Core/Src/i2c.c **** 
 154:Core/Src/i2c.c ****   /* USER CODE END I2C2_Init 2 */
 155:Core/Src/i2c.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 91


 156:Core/Src/i2c.c **** }
 529              		.loc 1 156 1 view .LVU182
 530 019e 1FB0     		add	sp, sp, #124
 531              		.cfi_remember_state
 532              		.cfi_def_cfa_offset 28
 533              		@ sp needed
 534 01a0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 535              	.L4:
 536              		.cfi_restore_state
  51:Core/Src/i2c.c ****   }
 537              		.loc 1 51 5 is_stmt 1 view .LVU183
 538 01a4 FFF7FEFF 		bl	Error_Handler
 539              	.LVL30:
 540 01a8 4AE7     		b	.L2
 541              	.L6:
 542 01aa 00BF     		.align	2
 543              	.L5:
 544 01ac 00040048 		.word	1207960576
 545 01b0 00000240 		.word	1073872896
 546 01b4 00580040 		.word	1073764352
 547 01b8 5D3E3020 		.word	540032605
 548              		.cfi_endproc
 549              	.LFE1163:
 551              		.section	.text.i2c2CommandDMA,"ax",%progbits
 552              		.align	1
 553              		.global	i2c2CommandDMA
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu softvfp
 559              	i2c2CommandDMA:
 560              	.LVL31:
 561              	.LFB1164:
 157:Core/Src/i2c.c **** 
 158:Core/Src/i2c.c **** /* USER CODE BEGIN 1 */
 159:Core/Src/i2c.c **** /**
 160:Core/Src/i2c.c ****  * @brief Sends data over I2C2 using DMA
 161:Core/Src/i2c.c ****  * @param data
 162:Core/Src/i2c.c ****  */
 163:Core/Src/i2c.c **** void i2c2CommandDMA(uint8_t data)
 164:Core/Src/i2c.c **** {
 562              		.loc 1 164 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 8
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567              		.loc 1 164 1 is_stmt 0 view .LVU185
 568 0000 82B0     		sub	sp, sp, #8
 569              		.cfi_def_cfa_offset 8
 570 0002 8DF80700 		strb	r0, [sp, #7]
 165:Core/Src/i2c.c **** 
 166:Core/Src/i2c.c ****     DMA1_Channel2->CCR &= ~DMA_CCR_EN; // disable channel
 571              		.loc 1 166 5 is_stmt 1 view .LVU186
 572              		.loc 1 166 24 is_stmt 0 view .LVU187
 573 0006 1A4B     		ldr	r3, .L10
 574 0008 DA69     		ldr	r2, [r3, #28]
 575 000a 22F00102 		bic	r2, r2, #1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 92


 576 000e DA61     		str	r2, [r3, #28]
 167:Core/Src/i2c.c ****     DMA1_Channel2->CNDTR = 1;
 577              		.loc 1 167 5 is_stmt 1 view .LVU188
 578              		.loc 1 167 26 is_stmt 0 view .LVU189
 579 0010 0122     		movs	r2, #1
 580 0012 1A62     		str	r2, [r3, #32]
 168:Core/Src/i2c.c ****     DMA1_Channel2->CMAR = (uint32_t)&data;
 581              		.loc 1 168 5 is_stmt 1 view .LVU190
 582              		.loc 1 168 27 is_stmt 0 view .LVU191
 583 0014 0DF10702 		add	r2, sp, #7
 584              		.loc 1 168 25 view .LVU192
 585 0018 9A62     		str	r2, [r3, #40]
 169:Core/Src/i2c.c ****     DMA1_Channel2->CCR |= DMA_CCR_EN;
 586              		.loc 1 169 5 is_stmt 1 view .LVU193
 587              		.loc 1 169 24 is_stmt 0 view .LVU194
 588 001a DA69     		ldr	r2, [r3, #28]
 589 001c 42F00102 		orr	r2, r2, #1
 590 0020 DA61     		str	r2, [r3, #28]
 170:Core/Src/i2c.c **** 
 171:Core/Src/i2c.c ****     I2C2->CR1 |= I2C_CR1_TXDMAEN;
 591              		.loc 1 171 5 is_stmt 1 view .LVU195
 592              		.loc 1 171 15 is_stmt 0 view .LVU196
 593 0022 A3F5D433 		sub	r3, r3, #108544
 594 0026 1A68     		ldr	r2, [r3]
 595 0028 42F48042 		orr	r2, r2, #16384
 596 002c 1A60     		str	r2, [r3]
 172:Core/Src/i2c.c ****     I2C2->CR2 |= (LCD_ADDRESS << 1U);
 597              		.loc 1 172 5 is_stmt 1 view .LVU197
 598              		.loc 1 172 15 is_stmt 0 view .LVU198
 599 002e 5A68     		ldr	r2, [r3, #4]
 600 0030 42F04E02 		orr	r2, r2, #78
 601 0034 5A60     		str	r2, [r3, #4]
 173:Core/Src/i2c.c ****     I2C2->CR2 &= ~I2C_CR2_RD_WRN; // write operation
 602              		.loc 1 173 5 is_stmt 1 view .LVU199
 603              		.loc 1 173 15 is_stmt 0 view .LVU200
 604 0036 5A68     		ldr	r2, [r3, #4]
 605 0038 22F48062 		bic	r2, r2, #1024
 606 003c 5A60     		str	r2, [r3, #4]
 174:Core/Src/i2c.c ****     I2C2->CR2 &= ~I2C_CR2_NBYTES;
 607              		.loc 1 174 5 is_stmt 1 view .LVU201
 608              		.loc 1 174 15 is_stmt 0 view .LVU202
 609 003e 5A68     		ldr	r2, [r3, #4]
 610 0040 22F47F02 		bic	r2, r2, #16711680
 611 0044 5A60     		str	r2, [r3, #4]
 175:Core/Src/i2c.c ****     I2C2->CR2 |= (1 << 16U);
 612              		.loc 1 175 5 is_stmt 1 view .LVU203
 613              		.loc 1 175 15 is_stmt 0 view .LVU204
 614 0046 5A68     		ldr	r2, [r3, #4]
 615 0048 42F48032 		orr	r2, r2, #65536
 616 004c 5A60     		str	r2, [r3, #4]
 176:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_AUTOEND;
 617              		.loc 1 176 5 is_stmt 1 view .LVU205
 618              		.loc 1 176 15 is_stmt 0 view .LVU206
 619 004e 5A68     		ldr	r2, [r3, #4]
 620 0050 42F00072 		orr	r2, r2, #33554432
 621 0054 5A60     		str	r2, [r3, #4]
 177:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_START;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 93


 622              		.loc 1 177 5 is_stmt 1 view .LVU207
 623              		.loc 1 177 15 is_stmt 0 view .LVU208
 624 0056 5A68     		ldr	r2, [r3, #4]
 625 0058 42F40052 		orr	r2, r2, #8192
 626 005c 5A60     		str	r2, [r3, #4]
 178:Core/Src/i2c.c **** 
 179:Core/Src/i2c.c ****     while (!tx_finished)
 627              		.loc 1 179 5 is_stmt 1 view .LVU209
 628              	.L8:
 180:Core/Src/i2c.c ****         ;
 629              		.loc 1 180 9 discriminator 1 view .LVU210
 179:Core/Src/i2c.c ****         ;
 630              		.loc 1 179 11 discriminator 1 view .LVU211
 179:Core/Src/i2c.c ****         ;
 631              		.loc 1 179 12 is_stmt 0 discriminator 1 view .LVU212
 632 005e 054B     		ldr	r3, .L10+4
 633 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 179:Core/Src/i2c.c ****         ;
 634              		.loc 1 179 11 discriminator 1 view .LVU213
 635 0062 002B     		cmp	r3, #0
 636 0064 FBD0     		beq	.L8
 181:Core/Src/i2c.c ****     tx_finished = 0;
 637              		.loc 1 181 5 is_stmt 1 view .LVU214
 638              		.loc 1 181 17 is_stmt 0 view .LVU215
 639 0066 034B     		ldr	r3, .L10+4
 640 0068 0022     		movs	r2, #0
 641 006a 1A70     		strb	r2, [r3]
 182:Core/Src/i2c.c **** }
 642              		.loc 1 182 1 view .LVU216
 643 006c 02B0     		add	sp, sp, #8
 644              		.cfi_def_cfa_offset 0
 645              		@ sp needed
 646 006e 7047     		bx	lr
 647              	.L11:
 648              		.align	2
 649              	.L10:
 650 0070 00000240 		.word	1073872896
 651 0074 00000000 		.word	.LANCHOR0
 652              		.cfi_endproc
 653              	.LFE1164:
 655              		.section	.text.i2c2WriteMemDMA,"ax",%progbits
 656              		.align	1
 657              		.global	i2c2WriteMemDMA
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 661              		.fpu softvfp
 663              	i2c2WriteMemDMA:
 664              	.LVL32:
 665              	.LFB1165:
 183:Core/Src/i2c.c **** 
 184:Core/Src/i2c.c **** void i2c2WriteMemDMA(uint8_t *pData, uint8_t memadd, uint8_t size)
 185:Core/Src/i2c.c **** {
 666              		.loc 1 185 1 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 94


 670              		.loc 1 185 1 is_stmt 0 view .LVU218
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 00AF     		add	r7, sp, #0
 676              		.cfi_def_cfa_register 7
 186:Core/Src/i2c.c ****     uint8_t combinedData[size + 1];
 677              		.loc 1 186 5 is_stmt 1 view .LVU219
 678              	.LVL33:
 679              		.loc 1 186 13 is_stmt 0 view .LVU220
 680 0004 02F10803 		add	r3, r2, #8
 681 0008 03F4FC73 		and	r3, r3, #504
 682 000c ADEB030D 		sub	sp, sp, r3
 683              	.LVL34:
 187:Core/Src/i2c.c **** 
 188:Core/Src/i2c.c ****     combinedData[0] = memadd;
 684              		.loc 1 188 5 is_stmt 1 view .LVU221
 685              		.loc 1 188 21 is_stmt 0 view .LVU222
 686 0010 6B46     		mov	r3, sp
 687 0012 03F8011B 		strb	r1, [r3], #1
 189:Core/Src/i2c.c ****     memcpy((combinedData + 0x1), pData, size);
 688              		.loc 1 189 5 is_stmt 1 view .LVU223
 689 0016 0146     		mov	r1, r0
 690              	.LVL35:
 691              		.loc 1 189 5 is_stmt 0 view .LVU224
 692 0018 1846     		mov	r0, r3
 693              	.LVL36:
 694              		.loc 1 189 5 view .LVU225
 695 001a FFF7FEFF 		bl	memcpy
 696              	.LVL37:
 190:Core/Src/i2c.c **** 
 191:Core/Src/i2c.c ****     DMA1_Channel2->CCR &= ~DMA_CCR_EN; // disable channel
 697              		.loc 1 191 5 is_stmt 1 view .LVU226
 698              		.loc 1 191 24 is_stmt 0 view .LVU227
 699 001e 1A4B     		ldr	r3, .L15
 700 0020 DA69     		ldr	r2, [r3, #28]
 701 0022 22F00102 		bic	r2, r2, #1
 702 0026 DA61     		str	r2, [r3, #28]
 192:Core/Src/i2c.c ****     DMA1_Channel2->CNDTR = 1;
 703              		.loc 1 192 5 is_stmt 1 view .LVU228
 704              		.loc 1 192 26 is_stmt 0 view .LVU229
 705 0028 0122     		movs	r2, #1
 706 002a 1A62     		str	r2, [r3, #32]
 193:Core/Src/i2c.c ****     DMA1_Channel2->CMAR = (uint32_t)&combinedData;
 707              		.loc 1 193 5 is_stmt 1 view .LVU230
 708              		.loc 1 193 25 is_stmt 0 view .LVU231
 709 002c C3F828D0 		str	sp, [r3, #40]
 194:Core/Src/i2c.c ****     DMA1_Channel2->CCR |= DMA_CCR_EN;
 710              		.loc 1 194 5 is_stmt 1 view .LVU232
 711              		.loc 1 194 24 is_stmt 0 view .LVU233
 712 0030 DA69     		ldr	r2, [r3, #28]
 713 0032 42F00102 		orr	r2, r2, #1
 714 0036 DA61     		str	r2, [r3, #28]
 195:Core/Src/i2c.c **** 
 196:Core/Src/i2c.c ****     I2C2->CR1 |= I2C_CR1_TXDMAEN;
 715              		.loc 1 196 5 is_stmt 1 view .LVU234
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 95


 716              		.loc 1 196 15 is_stmt 0 view .LVU235
 717 0038 A3F5D433 		sub	r3, r3, #108544
 718 003c 1A68     		ldr	r2, [r3]
 719 003e 42F48042 		orr	r2, r2, #16384
 720 0042 1A60     		str	r2, [r3]
 197:Core/Src/i2c.c ****     I2C2->CR2 |= (LCD_ADDRESS << 1U);
 721              		.loc 1 197 5 is_stmt 1 view .LVU236
 722              		.loc 1 197 15 is_stmt 0 view .LVU237
 723 0044 5A68     		ldr	r2, [r3, #4]
 724 0046 42F04E02 		orr	r2, r2, #78
 725 004a 5A60     		str	r2, [r3, #4]
 198:Core/Src/i2c.c ****     I2C2->CR2 &= ~I2C_CR2_RD_WRN; // write operation
 726              		.loc 1 198 5 is_stmt 1 view .LVU238
 727              		.loc 1 198 15 is_stmt 0 view .LVU239
 728 004c 5A68     		ldr	r2, [r3, #4]
 729 004e 22F48062 		bic	r2, r2, #1024
 730 0052 5A60     		str	r2, [r3, #4]
 199:Core/Src/i2c.c ****     I2C2->CR2 &= ~I2C_CR2_NBYTES;
 731              		.loc 1 199 5 is_stmt 1 view .LVU240
 732              		.loc 1 199 15 is_stmt 0 view .LVU241
 733 0054 5A68     		ldr	r2, [r3, #4]
 734 0056 22F47F02 		bic	r2, r2, #16711680
 735 005a 5A60     		str	r2, [r3, #4]
 200:Core/Src/i2c.c ****     I2C2->CR2 |= (1 << 16U);
 736              		.loc 1 200 5 is_stmt 1 view .LVU242
 737              		.loc 1 200 15 is_stmt 0 view .LVU243
 738 005c 5A68     		ldr	r2, [r3, #4]
 739 005e 42F48032 		orr	r2, r2, #65536
 740 0062 5A60     		str	r2, [r3, #4]
 201:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_AUTOEND;
 741              		.loc 1 201 5 is_stmt 1 view .LVU244
 742              		.loc 1 201 15 is_stmt 0 view .LVU245
 743 0064 5A68     		ldr	r2, [r3, #4]
 744 0066 42F00072 		orr	r2, r2, #33554432
 745 006a 5A60     		str	r2, [r3, #4]
 202:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_START;
 746              		.loc 1 202 5 is_stmt 1 view .LVU246
 747              		.loc 1 202 15 is_stmt 0 view .LVU247
 748 006c 5A68     		ldr	r2, [r3, #4]
 749 006e 42F40052 		orr	r2, r2, #8192
 750 0072 5A60     		str	r2, [r3, #4]
 203:Core/Src/i2c.c **** 
 204:Core/Src/i2c.c ****     while (!tx_finished)
 751              		.loc 1 204 5 is_stmt 1 view .LVU248
 752              	.L13:
 205:Core/Src/i2c.c ****         ;
 753              		.loc 1 205 9 discriminator 1 view .LVU249
 204:Core/Src/i2c.c ****         ;
 754              		.loc 1 204 11 discriminator 1 view .LVU250
 204:Core/Src/i2c.c ****         ;
 755              		.loc 1 204 12 is_stmt 0 discriminator 1 view .LVU251
 756 0074 054B     		ldr	r3, .L15+4
 757 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 204:Core/Src/i2c.c ****         ;
 758              		.loc 1 204 11 discriminator 1 view .LVU252
 759 0078 002B     		cmp	r3, #0
 760 007a FBD0     		beq	.L13
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 96


 206:Core/Src/i2c.c ****     tx_finished = 0;
 761              		.loc 1 206 5 is_stmt 1 view .LVU253
 762              		.loc 1 206 17 is_stmt 0 view .LVU254
 763 007c 034B     		ldr	r3, .L15+4
 764 007e 0022     		movs	r2, #0
 765 0080 1A70     		strb	r2, [r3]
 207:Core/Src/i2c.c **** }
 766              		.loc 1 207 1 view .LVU255
 767 0082 BD46     		mov	sp, r7
 768              		.cfi_def_cfa_register 13
 769              	.LVL38:
 770              		.loc 1 207 1 view .LVU256
 771              		@ sp needed
 772 0084 80BD     		pop	{r7, pc}
 773              	.L16:
 774 0086 00BF     		.align	2
 775              	.L15:
 776 0088 00000240 		.word	1073872896
 777 008c 00000000 		.word	.LANCHOR0
 778              		.cfi_endproc
 779              	.LFE1165:
 781              		.section	.text.i2c2ReadMemoryDMA,"ax",%progbits
 782              		.align	1
 783              		.global	i2c2ReadMemoryDMA
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 787              		.fpu softvfp
 789              	i2c2ReadMemoryDMA:
 790              	.LVL39:
 791              	.LFB1166:
 208:Core/Src/i2c.c **** 
 209:Core/Src/i2c.c **** void i2c2ReadMemoryDMA(uint8_t *pData, uint8_t memadd, uint8_t size)
 210:Core/Src/i2c.c **** {
 792              		.loc 1 210 1 is_stmt 1 view -0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797              		.loc 1 210 1 is_stmt 0 view .LVU258
 798 0000 10B4     		push	{r4}
 799              		.cfi_def_cfa_offset 4
 800              		.cfi_offset 4, -4
 211:Core/Src/i2c.c ****     I2C2->CR2 |= (LCD_ADDRESS << 1U);
 801              		.loc 1 211 5 is_stmt 1 view .LVU259
 802              		.loc 1 211 15 is_stmt 0 view .LVU260
 803 0002 2B4B     		ldr	r3, .L22
 804 0004 5C68     		ldr	r4, [r3, #4]
 805 0006 44F04E04 		orr	r4, r4, #78
 806 000a 5C60     		str	r4, [r3, #4]
 212:Core/Src/i2c.c ****     I2C2->CR2 &= ~I2C_CR2_RD_WRN; // write operation
 807              		.loc 1 212 5 is_stmt 1 view .LVU261
 808              		.loc 1 212 15 is_stmt 0 view .LVU262
 809 000c 5C68     		ldr	r4, [r3, #4]
 810 000e 24F48064 		bic	r4, r4, #1024
 811 0012 5C60     		str	r4, [r3, #4]
 213:Core/Src/i2c.c ****     I2C2->CR2 &= ~I2C_CR2_NBYTES;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 97


 812              		.loc 1 213 5 is_stmt 1 view .LVU263
 813              		.loc 1 213 15 is_stmt 0 view .LVU264
 814 0014 5C68     		ldr	r4, [r3, #4]
 815 0016 24F47F04 		bic	r4, r4, #16711680
 816 001a 5C60     		str	r4, [r3, #4]
 214:Core/Src/i2c.c ****     I2C2->CR2 |= (1 << I2C_CR2_NBYTES_Pos);
 817              		.loc 1 214 5 is_stmt 1 view .LVU265
 818              		.loc 1 214 15 is_stmt 0 view .LVU266
 819 001c 5C68     		ldr	r4, [r3, #4]
 820 001e 44F48034 		orr	r4, r4, #65536
 821 0022 5C60     		str	r4, [r3, #4]
 215:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_AUTOEND;
 822              		.loc 1 215 5 is_stmt 1 view .LVU267
 823              		.loc 1 215 15 is_stmt 0 view .LVU268
 824 0024 5C68     		ldr	r4, [r3, #4]
 825 0026 44F00074 		orr	r4, r4, #33554432
 826 002a 5C60     		str	r4, [r3, #4]
 216:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_START;
 827              		.loc 1 216 5 is_stmt 1 view .LVU269
 828              		.loc 1 216 15 is_stmt 0 view .LVU270
 829 002c 5C68     		ldr	r4, [r3, #4]
 830 002e 44F40054 		orr	r4, r4, #8192
 831 0032 5C60     		str	r4, [r3, #4]
 217:Core/Src/i2c.c **** 
 218:Core/Src/i2c.c ****     while (!(I2C2->ISR & I2C_ISR_TXIS))
 832              		.loc 1 218 5 is_stmt 1 view .LVU271
 833              	.L18:
 219:Core/Src/i2c.c ****         ;
 834              		.loc 1 219 9 discriminator 1 view .LVU272
 218:Core/Src/i2c.c ****         ;
 835              		.loc 1 218 11 discriminator 1 view .LVU273
 218:Core/Src/i2c.c ****         ;
 836              		.loc 1 218 18 is_stmt 0 discriminator 1 view .LVU274
 837 0034 1E4B     		ldr	r3, .L22
 838 0036 9B69     		ldr	r3, [r3, #24]
 218:Core/Src/i2c.c ****         ;
 839              		.loc 1 218 11 discriminator 1 view .LVU275
 840 0038 13F0020F 		tst	r3, #2
 841 003c FAD0     		beq	.L18
 220:Core/Src/i2c.c ****     I2C2->TXDR = (uint32_t)memadd;
 842              		.loc 1 220 5 is_stmt 1 view .LVU276
 843              		.loc 1 220 16 is_stmt 0 view .LVU277
 844 003e 1C4B     		ldr	r3, .L22
 845 0040 9962     		str	r1, [r3, #40]
 221:Core/Src/i2c.c ****     while (!(I2C2->ISR & I2C_ISR_TXE))
 846              		.loc 1 221 5 is_stmt 1 view .LVU278
 847              	.L19:
 222:Core/Src/i2c.c ****         ;
 848              		.loc 1 222 9 discriminator 1 view .LVU279
 221:Core/Src/i2c.c ****     while (!(I2C2->ISR & I2C_ISR_TXE))
 849              		.loc 1 221 11 discriminator 1 view .LVU280
 221:Core/Src/i2c.c ****     while (!(I2C2->ISR & I2C_ISR_TXE))
 850              		.loc 1 221 18 is_stmt 0 discriminator 1 view .LVU281
 851 0042 1B4B     		ldr	r3, .L22
 852 0044 9B69     		ldr	r3, [r3, #24]
 221:Core/Src/i2c.c ****     while (!(I2C2->ISR & I2C_ISR_TXE))
 853              		.loc 1 221 11 discriminator 1 view .LVU282
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 98


 854 0046 13F0010F 		tst	r3, #1
 855 004a FAD0     		beq	.L19
 223:Core/Src/i2c.c **** 
 224:Core/Src/i2c.c ****     /* Set up DMA Receiver*/
 225:Core/Src/i2c.c ****     DMA1_Channel3->CCR &= ~DMA_CCR_EN;
 856              		.loc 1 225 5 is_stmt 1 view .LVU283
 857              		.loc 1 225 24 is_stmt 0 view .LVU284
 858 004c 194B     		ldr	r3, .L22+4
 859 004e 196B     		ldr	r1, [r3, #48]
 860              	.LVL40:
 861              		.loc 1 225 24 view .LVU285
 862 0050 21F00101 		bic	r1, r1, #1
 863 0054 1963     		str	r1, [r3, #48]
 226:Core/Src/i2c.c ****     DMA1_Channel3->CNDTR = size;
 864              		.loc 1 226 5 is_stmt 1 view .LVU286
 865              		.loc 1 226 26 is_stmt 0 view .LVU287
 866 0056 5A63     		str	r2, [r3, #52]
 227:Core/Src/i2c.c ****     DMA1_Channel3->CMAR = (uint32_t)pData;
 867              		.loc 1 227 5 is_stmt 1 view .LVU288
 868              		.loc 1 227 25 is_stmt 0 view .LVU289
 869 0058 D863     		str	r0, [r3, #60]
 228:Core/Src/i2c.c ****     DMA1_Channel3->CCR |= DMA_CCR_EN;
 870              		.loc 1 228 5 is_stmt 1 view .LVU290
 871              		.loc 1 228 24 is_stmt 0 view .LVU291
 872 005a 196B     		ldr	r1, [r3, #48]
 873 005c 41F00101 		orr	r1, r1, #1
 874 0060 1963     		str	r1, [r3, #48]
 229:Core/Src/i2c.c **** 
 230:Core/Src/i2c.c ****     I2C2->CR1 |= I2C_CR1_RXDMAEN;
 875              		.loc 1 230 5 is_stmt 1 view .LVU292
 876              		.loc 1 230 15 is_stmt 0 view .LVU293
 877 0062 A3F5D433 		sub	r3, r3, #108544
 878 0066 1968     		ldr	r1, [r3]
 879 0068 41F40041 		orr	r1, r1, #32768
 880 006c 1960     		str	r1, [r3]
 231:Core/Src/i2c.c ****     I2C2->CR2 |= (LCD_ADDRESS << 1U);
 881              		.loc 1 231 5 is_stmt 1 view .LVU294
 882              		.loc 1 231 15 is_stmt 0 view .LVU295
 883 006e 5968     		ldr	r1, [r3, #4]
 884 0070 41F04E01 		orr	r1, r1, #78
 885 0074 5960     		str	r1, [r3, #4]
 232:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_RD_WRN; // write operation
 886              		.loc 1 232 5 is_stmt 1 view .LVU296
 887              		.loc 1 232 15 is_stmt 0 view .LVU297
 888 0076 5968     		ldr	r1, [r3, #4]
 889 0078 41F48061 		orr	r1, r1, #1024
 890 007c 5960     		str	r1, [r3, #4]
 233:Core/Src/i2c.c ****     I2C2->CR2 &= ~I2C_CR2_NBYTES;
 891              		.loc 1 233 5 is_stmt 1 view .LVU298
 892              		.loc 1 233 15 is_stmt 0 view .LVU299
 893 007e 5968     		ldr	r1, [r3, #4]
 894 0080 21F47F01 		bic	r1, r1, #16711680
 895 0084 5960     		str	r1, [r3, #4]
 234:Core/Src/i2c.c ****     I2C2->CR2 |= (size << I2C_CR2_NBYTES_Pos);
 896              		.loc 1 234 5 is_stmt 1 view .LVU300
 897              		.loc 1 234 15 is_stmt 0 view .LVU301
 898 0086 5968     		ldr	r1, [r3, #4]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 99


 899 0088 41EA0242 		orr	r2, r1, r2, lsl #16
 900              	.LVL41:
 901              		.loc 1 234 15 view .LVU302
 902 008c 5A60     		str	r2, [r3, #4]
 235:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_AUTOEND;
 903              		.loc 1 235 5 is_stmt 1 view .LVU303
 904              		.loc 1 235 15 is_stmt 0 view .LVU304
 905 008e 5A68     		ldr	r2, [r3, #4]
 906 0090 42F00072 		orr	r2, r2, #33554432
 907 0094 5A60     		str	r2, [r3, #4]
 236:Core/Src/i2c.c ****     I2C2->CR2 |= I2C_CR2_START;
 908              		.loc 1 236 5 is_stmt 1 view .LVU305
 909              		.loc 1 236 15 is_stmt 0 view .LVU306
 910 0096 5A68     		ldr	r2, [r3, #4]
 911 0098 42F40052 		orr	r2, r2, #8192
 912 009c 5A60     		str	r2, [r3, #4]
 237:Core/Src/i2c.c **** 
 238:Core/Src/i2c.c ****     while (!rx_finished)
 913              		.loc 1 238 5 is_stmt 1 view .LVU307
 914              	.L20:
 239:Core/Src/i2c.c ****         ;
 915              		.loc 1 239 9 discriminator 1 view .LVU308
 238:Core/Src/i2c.c ****         ;
 916              		.loc 1 238 11 discriminator 1 view .LVU309
 238:Core/Src/i2c.c ****         ;
 917              		.loc 1 238 12 is_stmt 0 discriminator 1 view .LVU310
 918 009e 064B     		ldr	r3, .L22+8
 919 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 238:Core/Src/i2c.c ****         ;
 920              		.loc 1 238 11 discriminator 1 view .LVU311
 921 00a2 002B     		cmp	r3, #0
 922 00a4 FBD0     		beq	.L20
 240:Core/Src/i2c.c ****     rx_finished = 0;
 923              		.loc 1 240 5 is_stmt 1 view .LVU312
 924              		.loc 1 240 17 is_stmt 0 view .LVU313
 925 00a6 044B     		ldr	r3, .L22+8
 926 00a8 0022     		movs	r2, #0
 927 00aa 1A70     		strb	r2, [r3]
 241:Core/Src/i2c.c **** }
 928              		.loc 1 241 1 view .LVU314
 929 00ac 10BC     		pop	{r4}
 930              		.cfi_restore 4
 931              		.cfi_def_cfa_offset 0
 932 00ae 7047     		bx	lr
 933              	.L23:
 934              		.align	2
 935              	.L22:
 936 00b0 00580040 		.word	1073764352
 937 00b4 00000240 		.word	1073872896
 938 00b8 00000000 		.word	.LANCHOR1
 939              		.cfi_endproc
 940              	.LFE1166:
 942              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 943              		.align	1
 944              		.global	DMA1_Channel2_IRQHandler
 945              		.syntax unified
 946              		.thumb
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 100


 947              		.thumb_func
 948              		.fpu softvfp
 950              	DMA1_Channel2_IRQHandler:
 951              	.LFB1167:
 242:Core/Src/i2c.c **** 
 243:Core/Src/i2c.c **** void DMA1_Channel2_IRQHandler(void)
 244:Core/Src/i2c.c **** {
 952              		.loc 1 244 1 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		@ link register save eliminated.
 245:Core/Src/i2c.c ****     if (DMA1->ISR & DMA_ISR_TCIF2)
 957              		.loc 1 245 5 view .LVU316
 958              		.loc 1 245 13 is_stmt 0 view .LVU317
 959 0000 064B     		ldr	r3, .L26
 960 0002 1B68     		ldr	r3, [r3]
 961              		.loc 1 245 8 view .LVU318
 962 0004 13F0200F 		tst	r3, #32
 963 0008 07D0     		beq	.L24
 246:Core/Src/i2c.c ****     {
 247:Core/Src/i2c.c ****         DMA1->IFCR |= DMA_IFCR_CTCIF2;
 964              		.loc 1 247 9 is_stmt 1 view .LVU319
 965              		.loc 1 247 20 is_stmt 0 view .LVU320
 966 000a 044A     		ldr	r2, .L26
 967 000c 5368     		ldr	r3, [r2, #4]
 968 000e 43F02003 		orr	r3, r3, #32
 969 0012 5360     		str	r3, [r2, #4]
 248:Core/Src/i2c.c ****         tx_finished = 1;
 970              		.loc 1 248 9 is_stmt 1 view .LVU321
 971              		.loc 1 248 21 is_stmt 0 view .LVU322
 972 0014 024B     		ldr	r3, .L26+4
 973 0016 0122     		movs	r2, #1
 974 0018 1A70     		strb	r2, [r3]
 975              	.L24:
 249:Core/Src/i2c.c ****     }
 250:Core/Src/i2c.c **** }
 976              		.loc 1 250 1 view .LVU323
 977 001a 7047     		bx	lr
 978              	.L27:
 979              		.align	2
 980              	.L26:
 981 001c 00000240 		.word	1073872896
 982 0020 00000000 		.word	.LANCHOR0
 983              		.cfi_endproc
 984              	.LFE1167:
 986              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 987              		.align	1
 988              		.global	DMA1_Channel3_IRQHandler
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 992              		.fpu softvfp
 994              	DMA1_Channel3_IRQHandler:
 995              	.LFB1168:
 251:Core/Src/i2c.c **** 
 252:Core/Src/i2c.c **** void DMA1_Channel3_IRQHandler(void)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 101


 253:Core/Src/i2c.c **** {
 996              		.loc 1 253 1 is_stmt 1 view -0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 254:Core/Src/i2c.c ****     if (DMA1->ISR & DMA_ISR_TCIF3)
 1001              		.loc 1 254 5 view .LVU325
 1002              		.loc 1 254 13 is_stmt 0 view .LVU326
 1003 0000 064B     		ldr	r3, .L30
 1004 0002 1B68     		ldr	r3, [r3]
 1005              		.loc 1 254 8 view .LVU327
 1006 0004 13F4007F 		tst	r3, #512
 1007 0008 07D0     		beq	.L28
 255:Core/Src/i2c.c ****     {
 256:Core/Src/i2c.c ****         DMA1->IFCR |= DMA_IFCR_CTCIF3;
 1008              		.loc 1 256 9 is_stmt 1 view .LVU328
 1009              		.loc 1 256 20 is_stmt 0 view .LVU329
 1010 000a 044A     		ldr	r2, .L30
 1011 000c 5368     		ldr	r3, [r2, #4]
 1012 000e 43F40073 		orr	r3, r3, #512
 1013 0012 5360     		str	r3, [r2, #4]
 257:Core/Src/i2c.c ****         rx_finished = 1;
 1014              		.loc 1 257 9 is_stmt 1 view .LVU330
 1015              		.loc 1 257 21 is_stmt 0 view .LVU331
 1016 0014 024B     		ldr	r3, .L30+4
 1017 0016 0122     		movs	r2, #1
 1018 0018 1A70     		strb	r2, [r3]
 1019              	.L28:
 258:Core/Src/i2c.c ****     }
 259:Core/Src/i2c.c **** }
 1020              		.loc 1 259 1 view .LVU332
 1021 001a 7047     		bx	lr
 1022              	.L31:
 1023              		.align	2
 1024              	.L30:
 1025 001c 00000240 		.word	1073872896
 1026 0020 00000000 		.word	.LANCHOR1
 1027              		.cfi_endproc
 1028              	.LFE1168:
 1030              		.global	rx_finished
 1031              		.global	tx_finished
 1032              		.section	.bss.rx_finished,"aw",%nobits
 1033              		.set	.LANCHOR1,. + 0
 1036              	rx_finished:
 1037 0000 00       		.space	1
 1038              		.section	.bss.tx_finished,"aw",%nobits
 1039              		.set	.LANCHOR0,. + 0
 1042              	tx_finished:
 1043 0000 00       		.space	1
 1044              		.text
 1045              	.Letext0:
 1046              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 1047              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 1048              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 1049              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_rcc_ex.h"
 1050              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_gpio.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 102


 1051              		.file 10 "<built-in>"
 1052              		.file 11 "Core/Inc/main.h"
 1053              		.file 12 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s 			page 103


DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:16     .text.MX_I2C2_Init:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:24     .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:544    .text.MX_I2C2_Init:00000000000001ac $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:552    .text.i2c2CommandDMA:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:559    .text.i2c2CommandDMA:0000000000000000 i2c2CommandDMA
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:650    .text.i2c2CommandDMA:0000000000000070 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:656    .text.i2c2WriteMemDMA:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:663    .text.i2c2WriteMemDMA:0000000000000000 i2c2WriteMemDMA
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:776    .text.i2c2WriteMemDMA:0000000000000088 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:782    .text.i2c2ReadMemoryDMA:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:789    .text.i2c2ReadMemoryDMA:0000000000000000 i2c2ReadMemoryDMA
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:936    .text.i2c2ReadMemoryDMA:00000000000000b0 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:943    .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:950    .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:981    .text.DMA1_Channel2_IRQHandler:000000000000001c $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:987    .text.DMA1_Channel3_IRQHandler:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:994    .text.DMA1_Channel3_IRQHandler:0000000000000000 DMA1_Channel3_IRQHandler
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:1025   .text.DMA1_Channel3_IRQHandler:000000000000001c $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:1036   .bss.rx_finished:0000000000000000 rx_finished
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:1042   .bss.tx_finished:0000000000000000 tx_finished
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:1037   .bss.rx_finished:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccTkjYAj.s:1043   .bss.tx_finished:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCCEx_PeriphCLKConfig
LL_GPIO_Init
LL_I2C_Init
Error_Handler
memcpy
